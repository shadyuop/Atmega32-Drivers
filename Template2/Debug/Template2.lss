
Template2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000060b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000126  00800060  000060b2  00006126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00004ca4  00000000  00000000  0000624c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000015d9  00000000  00000000  0000aef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  0000c4c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d3  00000000  00000000  0000c649  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000200f  00000000  00000000  0000c81c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001170  00000000  00000000  0000e82b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001001  00000000  00000000  0000f99b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0001099c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c1  00000000  00000000  00010b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  00010dfd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000116ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 eb       	ldi	r30, 0xB2	; 178
      68:	f0 e6       	ldi	r31, 0x60	; 96
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 38       	cpi	r26, 0x86	; 134
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 b6 2b 	call	0x576c	; 0x576c <main>
      7a:	0c 94 57 30 	jmp	0x60ae	; 0x60ae <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 20 30 	jmp	0x6040	; 0x6040 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	ae e7       	ldi	r26, 0x7E	; 126
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 3c 30 	jmp	0x6078	; 0x6078 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 2c 30 	jmp	0x6058	; 0x6058 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 48 30 	jmp	0x6090	; 0x6090 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 2c 30 	jmp	0x6058	; 0x6058 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 48 30 	jmp	0x6090	; 0x6090 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 20 30 	jmp	0x6040	; 0x6040 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8e e7       	ldi	r24, 0x7E	; 126
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 3c 30 	jmp	0x6078	; 0x6078 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 2c 30 	jmp	0x6058	; 0x6058 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 48 30 	jmp	0x6090	; 0x6090 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 2c 30 	jmp	0x6058	; 0x6058 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 48 30 	jmp	0x6090	; 0x6090 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 2c 30 	jmp	0x6058	; 0x6058 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 48 30 	jmp	0x6090	; 0x6090 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 30 30 	jmp	0x6060	; 0x6060 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 4c 30 	jmp	0x6098	; 0x6098 <__epilogue_restores__+0x20>

000007ea <__floatunsisf>:
     7ea:	a8 e0       	ldi	r26, 0x08	; 8
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 28 30 	jmp	0x6050	; 0x6050 <__prologue_saves__+0x10>
     7f6:	7b 01       	movw	r14, r22
     7f8:	8c 01       	movw	r16, r24
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	81 05       	cpc	r24, r1
     800:	91 05       	cpc	r25, r1
     802:	19 f4       	brne	.+6      	; 0x80a <__floatunsisf+0x20>
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	60 c0       	rjmp	.+192    	; 0x8ca <__stack+0x6b>
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	8e e1       	ldi	r24, 0x1E	; 30
     810:	c8 2e       	mov	r12, r24
     812:	d1 2c       	mov	r13, r1
     814:	dc 82       	std	Y+4, r13	; 0x04
     816:	cb 82       	std	Y+3, r12	; 0x03
     818:	ed 82       	std	Y+5, r14	; 0x05
     81a:	fe 82       	std	Y+6, r15	; 0x06
     81c:	0f 83       	std	Y+7, r16	; 0x07
     81e:	18 87       	std	Y+8, r17	; 0x08
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__clzsi2>
     828:	fc 01       	movw	r30, r24
     82a:	31 97       	sbiw	r30, 0x01	; 1
     82c:	f7 ff       	sbrs	r31, 7
     82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
     830:	22 27       	eor	r18, r18
     832:	33 27       	eor	r19, r19
     834:	2e 1b       	sub	r18, r30
     836:	3f 0b       	sbc	r19, r31
     838:	57 01       	movw	r10, r14
     83a:	68 01       	movw	r12, r16
     83c:	02 2e       	mov	r0, r18
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__floatunsisf+0x5e>
     840:	d6 94       	lsr	r13
     842:	c7 94       	ror	r12
     844:	b7 94       	ror	r11
     846:	a7 94       	ror	r10
     848:	0a 94       	dec	r0
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__floatunsisf+0x56>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	aa 1f       	adc	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	2a 95       	dec	r18
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0x74>
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	8e 21       	and	r24, r14
     872:	9f 21       	and	r25, r15
     874:	a0 23       	and	r26, r16
     876:	b1 23       	and	r27, r17
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	4a 29       	or	r20, r10
     88a:	5b 29       	or	r21, r11
     88c:	6c 29       	or	r22, r12
     88e:	7d 29       	or	r23, r13
     890:	4d 83       	std	Y+5, r20	; 0x05
     892:	5e 83       	std	Y+6, r21	; 0x06
     894:	6f 83       	std	Y+7, r22	; 0x07
     896:	78 87       	std	Y+8, r23	; 0x08
     898:	8e e1       	ldi	r24, 0x1E	; 30
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	8e 1b       	sub	r24, r30
     89e:	9f 0b       	sbc	r25, r31
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	30 97       	sbiw	r30, 0x00	; 0
     8a8:	81 f0       	breq	.+32     	; 0x8ca <__stack+0x6b>
     8aa:	0e 2e       	mov	r0, r30
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__stack+0x57>
     8ae:	ee 0c       	add	r14, r14
     8b0:	ff 1c       	adc	r15, r15
     8b2:	00 1f       	adc	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	0a 94       	dec	r0
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <__stack+0x4f>
     8ba:	ed 82       	std	Y+5, r14	; 0x05
     8bc:	fe 82       	std	Y+6, r15	; 0x06
     8be:	0f 83       	std	Y+7, r16	; 0x07
     8c0:	18 87       	std	Y+8, r17	; 0x08
     8c2:	ce 1a       	sub	r12, r30
     8c4:	df 0a       	sbc	r13, r31
     8c6:	dc 82       	std	Y+4, r13	; 0x04
     8c8:	cb 82       	std	Y+3, r12	; 0x03
     8ca:	1a 82       	std	Y+2, r1	; 0x02
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     8d4:	28 96       	adiw	r28, 0x08	; 8
     8d6:	ea e0       	ldi	r30, 0x0A	; 10
     8d8:	0c 94 44 30 	jmp	0x6088	; 0x6088 <__epilogue_restores__+0x10>

000008dc <__clzsi2>:
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	e8 16       	cp	r14, r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	f8 06       	cpc	r15, r24
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 07       	cpc	r16, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	18 07       	cpc	r17, r24
     8f8:	88 f4       	brcc	.+34     	; 0x91c <__clzsi2+0x40>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	e8 16       	cp	r14, r24
     8fe:	f1 04       	cpc	r15, r1
     900:	01 05       	cpc	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	31 f0       	breq	.+12     	; 0x912 <__clzsi2+0x36>
     906:	28 f0       	brcs	.+10     	; 0x912 <__clzsi2+0x36>
     908:	88 e0       	ldi	r24, 0x08	; 8
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__clzsi2+0x64>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__clzsi2+0x64>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	e8 16       	cp	r14, r24
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	f8 06       	cpc	r15, r24
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	08 07       	cpc	r16, r24
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	18 07       	cpc	r17, r24
     92c:	28 f0       	brcs	.+10     	; 0x938 <__clzsi2+0x5c>
     92e:	88 e1       	ldi	r24, 0x18	; 24
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	04 c0       	rjmp	.+8      	; 0x940 <__clzsi2+0x64>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	20 e2       	ldi	r18, 0x20	; 32
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	28 1b       	sub	r18, r24
     94a:	39 0b       	sbc	r19, r25
     94c:	4a 0b       	sbc	r20, r26
     94e:	5b 0b       	sbc	r21, r27
     950:	04 c0       	rjmp	.+8      	; 0x95a <__clzsi2+0x7e>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	8a 95       	dec	r24
     95c:	d2 f7       	brpl	.-12     	; 0x952 <__clzsi2+0x76>
     95e:	f7 01       	movw	r30, r14
     960:	ea 57       	subi	r30, 0x7A	; 122
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	80 81       	ld	r24, Z
     966:	28 1b       	sub	r18, r24
     968:	31 09       	sbc	r19, r1
     96a:	41 09       	sbc	r20, r1
     96c:	51 09       	sbc	r21, r1
     96e:	c9 01       	movw	r24, r18
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <__pack_f>:
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	fc 01       	movw	r30, r24
     986:	e4 80       	ldd	r14, Z+4	; 0x04
     988:	f5 80       	ldd	r15, Z+5	; 0x05
     98a:	06 81       	ldd	r16, Z+6	; 0x06
     98c:	17 81       	ldd	r17, Z+7	; 0x07
     98e:	d1 80       	ldd	r13, Z+1	; 0x01
     990:	80 81       	ld	r24, Z
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	48 f4       	brcc	.+18     	; 0x9a8 <__pack_f+0x2e>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e8 2a       	or	r14, r24
     9a0:	f9 2a       	or	r15, r25
     9a2:	0a 2b       	or	r16, r26
     9a4:	1b 2b       	or	r17, r27
     9a6:	a5 c0       	rjmp	.+330    	; 0xaf2 <__pack_f+0x178>
     9a8:	84 30       	cpi	r24, 0x04	; 4
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x34>
     9ac:	9f c0       	rjmp	.+318    	; 0xaec <__pack_f+0x172>
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	21 f4       	brne	.+8      	; 0x9ba <__pack_f+0x40>
     9b2:	ee 24       	eor	r14, r14
     9b4:	ff 24       	eor	r15, r15
     9b6:	87 01       	movw	r16, r14
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <__pack_f+0x4a>
     9ba:	e1 14       	cp	r14, r1
     9bc:	f1 04       	cpc	r15, r1
     9be:	01 05       	cpc	r16, r1
     9c0:	11 05       	cpc	r17, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__pack_f+0x50>
     9c4:	e0 e0       	ldi	r30, 0x00	; 0
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	96 c0       	rjmp	.+300    	; 0xaf6 <__pack_f+0x17c>
     9ca:	62 81       	ldd	r22, Z+2	; 0x02
     9cc:	73 81       	ldd	r23, Z+3	; 0x03
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	62 38       	cpi	r22, 0x82	; 130
     9d2:	79 07       	cpc	r23, r25
     9d4:	0c f0       	brlt	.+2      	; 0x9d8 <__pack_f+0x5e>
     9d6:	5b c0       	rjmp	.+182    	; 0xa8e <__pack_f+0x114>
     9d8:	22 e8       	ldi	r18, 0x82	; 130
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	26 1b       	sub	r18, r22
     9de:	37 0b       	sbc	r19, r23
     9e0:	2a 31       	cpi	r18, 0x1A	; 26
     9e2:	31 05       	cpc	r19, r1
     9e4:	2c f0       	brlt	.+10     	; 0x9f0 <__pack_f+0x76>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	2a c0       	rjmp	.+84     	; 0xa44 <__pack_f+0xca>
     9f0:	b8 01       	movw	r22, r16
     9f2:	a7 01       	movw	r20, r14
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x86>
     9f8:	76 95       	lsr	r23
     9fa:	67 95       	ror	r22
     9fc:	57 95       	ror	r21
     9fe:	47 95       	ror	r20
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7e>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__pack_f+0x9c>
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	aa 1f       	adc	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	2a 95       	dec	r18
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__pack_f+0x94>
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	a1 09       	sbc	r26, r1
     a1e:	b1 09       	sbc	r27, r1
     a20:	8e 21       	and	r24, r14
     a22:	9f 21       	and	r25, r15
     a24:	a0 23       	and	r26, r16
     a26:	b1 23       	and	r27, r17
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	a1 05       	cpc	r26, r1
     a2c:	b1 05       	cpc	r27, r1
     a2e:	21 f0       	breq	.+8      	; 0xa38 <__pack_f+0xbe>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	9a 01       	movw	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	28 2b       	or	r18, r24
     a3e:	39 2b       	or	r19, r25
     a40:	4a 2b       	or	r20, r26
     a42:	5b 2b       	or	r21, r27
     a44:	da 01       	movw	r26, r20
     a46:	c9 01       	movw	r24, r18
     a48:	8f 77       	andi	r24, 0x7F	; 127
     a4a:	90 70       	andi	r25, 0x00	; 0
     a4c:	a0 70       	andi	r26, 0x00	; 0
     a4e:	b0 70       	andi	r27, 0x00	; 0
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	a1 05       	cpc	r26, r1
     a56:	b1 05       	cpc	r27, r1
     a58:	39 f4       	brne	.+14     	; 0xa68 <__pack_f+0xee>
     a5a:	27 ff       	sbrs	r18, 7
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__pack_f+0xf6>
     a5e:	20 5c       	subi	r18, 0xC0	; 192
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	4f 4f       	sbci	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0xf6>
     a68:	21 5c       	subi	r18, 0xC1	; 193
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	4f 4f       	sbci	r20, 0xFF	; 255
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	e0 e0       	ldi	r30, 0x00	; 0
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	20 30       	cpi	r18, 0x00	; 0
     a76:	a0 e0       	ldi	r26, 0x00	; 0
     a78:	3a 07       	cpc	r19, r26
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	4a 07       	cpc	r20, r26
     a7e:	a0 e4       	ldi	r26, 0x40	; 64
     a80:	5a 07       	cpc	r21, r26
     a82:	10 f0       	brcs	.+4      	; 0xa88 <__pack_f+0x10e>
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	79 01       	movw	r14, r18
     a8a:	8a 01       	movw	r16, r20
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <__pack_f+0x162>
     a8e:	60 38       	cpi	r22, 0x80	; 128
     a90:	71 05       	cpc	r23, r1
     a92:	64 f5       	brge	.+88     	; 0xaec <__pack_f+0x172>
     a94:	fb 01       	movw	r30, r22
     a96:	e1 58       	subi	r30, 0x81	; 129
     a98:	ff 4f       	sbci	r31, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	c7 01       	movw	r24, r14
     a9e:	8f 77       	andi	r24, 0x7F	; 127
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	39 f4       	brne	.+14     	; 0xabe <__pack_f+0x144>
     ab0:	e7 fe       	sbrs	r14, 7
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__pack_f+0x154>
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	04 c0       	rjmp	.+8      	; 0xac6 <__pack_f+0x14c>
     abe:	8f e3       	ldi	r24, 0x3F	; 63
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e0       	ldi	r26, 0x00	; 0
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e8 0e       	add	r14, r24
     ac8:	f9 1e       	adc	r15, r25
     aca:	0a 1f       	adc	r16, r26
     acc:	1b 1f       	adc	r17, r27
     ace:	17 ff       	sbrs	r17, 7
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__pack_f+0x162>
     ad2:	16 95       	lsr	r17
     ad4:	07 95       	ror	r16
     ad6:	f7 94       	ror	r15
     ad8:	e7 94       	ror	r14
     ada:	31 96       	adiw	r30, 0x01	; 1
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	8a 95       	dec	r24
     ae8:	d1 f7       	brne	.-12     	; 0xade <__pack_f+0x164>
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x17c>
     aec:	ee 24       	eor	r14, r14
     aee:	ff 24       	eor	r15, r15
     af0:	87 01       	movw	r16, r14
     af2:	ef ef       	ldi	r30, 0xFF	; 255
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	6e 2f       	mov	r22, r30
     af8:	67 95       	ror	r22
     afa:	66 27       	eor	r22, r22
     afc:	67 95       	ror	r22
     afe:	90 2f       	mov	r25, r16
     b00:	9f 77       	andi	r25, 0x7F	; 127
     b02:	d7 94       	ror	r13
     b04:	dd 24       	eor	r13, r13
     b06:	d7 94       	ror	r13
     b08:	8e 2f       	mov	r24, r30
     b0a:	86 95       	lsr	r24
     b0c:	49 2f       	mov	r20, r25
     b0e:	46 2b       	or	r20, r22
     b10:	58 2f       	mov	r21, r24
     b12:	5d 29       	or	r21, r13
     b14:	b7 01       	movw	r22, r14
     b16:	ca 01       	movw	r24, r20
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	08 95       	ret

00000b24 <__unpack_f>:
     b24:	fc 01       	movw	r30, r24
     b26:	db 01       	movw	r26, r22
     b28:	40 81       	ld	r20, Z
     b2a:	51 81       	ldd	r21, Z+1	; 0x01
     b2c:	22 81       	ldd	r18, Z+2	; 0x02
     b2e:	62 2f       	mov	r22, r18
     b30:	6f 77       	andi	r22, 0x7F	; 127
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	22 1f       	adc	r18, r18
     b36:	22 27       	eor	r18, r18
     b38:	22 1f       	adc	r18, r18
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	89 2f       	mov	r24, r25
     b3e:	88 0f       	add	r24, r24
     b40:	82 2b       	or	r24, r18
     b42:	28 2f       	mov	r18, r24
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	99 1f       	adc	r25, r25
     b48:	99 27       	eor	r25, r25
     b4a:	99 1f       	adc	r25, r25
     b4c:	11 96       	adiw	r26, 0x01	; 1
     b4e:	9c 93       	st	X, r25
     b50:	11 97       	sbiw	r26, 0x01	; 1
     b52:	21 15       	cp	r18, r1
     b54:	31 05       	cpc	r19, r1
     b56:	a9 f5       	brne	.+106    	; 0xbc2 <__unpack_f+0x9e>
     b58:	41 15       	cp	r20, r1
     b5a:	51 05       	cpc	r21, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	71 05       	cpc	r23, r1
     b60:	11 f4       	brne	.+4      	; 0xb66 <__unpack_f+0x42>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	37 c0       	rjmp	.+110    	; 0xbd4 <__unpack_f+0xb0>
     b66:	82 e8       	ldi	r24, 0x82	; 130
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	13 96       	adiw	r26, 0x03	; 3
     b6c:	9c 93       	st	X, r25
     b6e:	8e 93       	st	-X, r24
     b70:	12 97       	sbiw	r26, 0x02	; 2
     b72:	9a 01       	movw	r18, r20
     b74:	ab 01       	movw	r20, r22
     b76:	67 e0       	ldi	r22, 0x07	; 7
     b78:	22 0f       	add	r18, r18
     b7a:	33 1f       	adc	r19, r19
     b7c:	44 1f       	adc	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	6a 95       	dec	r22
     b82:	d1 f7       	brne	.-12     	; 0xb78 <__unpack_f+0x54>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	8c 93       	st	X, r24
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__unpack_f+0x80>
     b8a:	22 0f       	add	r18, r18
     b8c:	33 1f       	adc	r19, r19
     b8e:	44 1f       	adc	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	8d 91       	ld	r24, X+
     b96:	9c 91       	ld	r25, X
     b98:	13 97       	sbiw	r26, 0x03	; 3
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	9c 93       	st	X, r25
     ba0:	8e 93       	st	-X, r24
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	20 30       	cpi	r18, 0x00	; 0
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	38 07       	cpc	r19, r24
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	48 07       	cpc	r20, r24
     bae:	80 e4       	ldi	r24, 0x40	; 64
     bb0:	58 07       	cpc	r21, r24
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__unpack_f+0x66>
     bb4:	14 96       	adiw	r26, 0x04	; 4
     bb6:	2d 93       	st	X+, r18
     bb8:	3d 93       	st	X+, r19
     bba:	4d 93       	st	X+, r20
     bbc:	5c 93       	st	X, r21
     bbe:	17 97       	sbiw	r26, 0x07	; 7
     bc0:	08 95       	ret
     bc2:	2f 3f       	cpi	r18, 0xFF	; 255
     bc4:	31 05       	cpc	r19, r1
     bc6:	79 f4       	brne	.+30     	; 0xbe6 <__unpack_f+0xc2>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__unpack_f+0xb4>
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	8c 93       	st	X, r24
     bd6:	08 95       	ret
     bd8:	64 ff       	sbrs	r22, 4
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__unpack_f+0xbe>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__unpack_f+0xe2>
     be2:	1c 92       	st	X, r1
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__unpack_f+0xe2>
     be6:	2f 57       	subi	r18, 0x7F	; 127
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	13 96       	adiw	r26, 0x03	; 3
     bec:	3c 93       	st	X, r19
     bee:	2e 93       	st	-X, r18
     bf0:	12 97       	sbiw	r26, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	8c 93       	st	X, r24
     bf6:	87 e0       	ldi	r24, 0x07	; 7
     bf8:	44 0f       	add	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	8a 95       	dec	r24
     c02:	d1 f7       	brne	.-12     	; 0xbf8 <__unpack_f+0xd4>
     c04:	70 64       	ori	r23, 0x40	; 64
     c06:	14 96       	adiw	r26, 0x04	; 4
     c08:	4d 93       	st	X+, r20
     c0a:	5d 93       	st	X+, r21
     c0c:	6d 93       	st	X+, r22
     c0e:	7c 93       	st	X, r23
     c10:	17 97       	sbiw	r26, 0x07	; 7
     c12:	08 95       	ret

00000c14 <__fpcmp_parts_f>:
     c14:	1f 93       	push	r17
     c16:	dc 01       	movw	r26, r24
     c18:	fb 01       	movw	r30, r22
     c1a:	9c 91       	ld	r25, X
     c1c:	92 30       	cpi	r25, 0x02	; 2
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <__fpcmp_parts_f+0xe>
     c20:	47 c0       	rjmp	.+142    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c22:	80 81       	ld	r24, Z
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	08 f4       	brcc	.+2      	; 0xc2a <__fpcmp_parts_f+0x16>
     c28:	43 c0       	rjmp	.+134    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c2a:	94 30       	cpi	r25, 0x04	; 4
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__fpcmp_parts_f+0x2e>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	84 30       	cpi	r24, 0x04	; 4
     c34:	99 f5       	brne	.+102    	; 0xc9c <__fpcmp_parts_f+0x88>
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	68 2f       	mov	r22, r24
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 1b       	sub	r22, r17
     c3e:	71 09       	sbc	r23, r1
     c40:	3f c0       	rjmp	.+126    	; 0xcc0 <__fpcmp_parts_f+0xac>
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	21 f0       	breq	.+8      	; 0xc4e <__fpcmp_parts_f+0x3a>
     c46:	92 30       	cpi	r25, 0x02	; 2
     c48:	31 f4       	brne	.+12     	; 0xc56 <__fpcmp_parts_f+0x42>
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	b9 f1       	breq	.+110    	; 0xcbc <__fpcmp_parts_f+0xa8>
     c4e:	81 81       	ldd	r24, Z+1	; 0x01
     c50:	88 23       	and	r24, r24
     c52:	89 f1       	breq	.+98     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     c54:	2d c0       	rjmp	.+90     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	1c 91       	ld	r17, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	f1 f0       	breq	.+60     	; 0xc9c <__fpcmp_parts_f+0x88>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	18 17       	cp	r17, r24
     c64:	d9 f4       	brne	.+54     	; 0xc9c <__fpcmp_parts_f+0x88>
     c66:	12 96       	adiw	r26, 0x02	; 2
     c68:	2d 91       	ld	r18, X+
     c6a:	3c 91       	ld	r19, X
     c6c:	13 97       	sbiw	r26, 0x03	; 3
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	94 f0       	brlt	.+36     	; 0xc9c <__fpcmp_parts_f+0x88>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	bc f0       	brlt	.+46     	; 0xcac <__fpcmp_parts_f+0x98>
     c7e:	14 96       	adiw	r26, 0x04	; 4
     c80:	8d 91       	ld	r24, X+
     c82:	9d 91       	ld	r25, X+
     c84:	0d 90       	ld	r0, X+
     c86:	bc 91       	ld	r27, X
     c88:	a0 2d       	mov	r26, r0
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
     c8c:	35 81       	ldd	r19, Z+5	; 0x05
     c8e:	46 81       	ldd	r20, Z+6	; 0x06
     c90:	57 81       	ldd	r21, Z+7	; 0x07
     c92:	28 17       	cp	r18, r24
     c94:	39 07       	cpc	r19, r25
     c96:	4a 07       	cpc	r20, r26
     c98:	5b 07       	cpc	r21, r27
     c9a:	18 f4       	brcc	.+6      	; 0xca2 <__fpcmp_parts_f+0x8e>
     c9c:	11 23       	and	r17, r17
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a4 07       	cpc	r26, r20
     ca8:	b5 07       	cpc	r27, r21
     caa:	40 f4       	brcc	.+16     	; 0xcbc <__fpcmp_parts_f+0xa8>
     cac:	11 23       	and	r17, r17
     cae:	19 f0       	breq	.+6      	; 0xcb6 <__fpcmp_parts_f+0xa2>
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <__fpcmp_parts_f+0xac>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <__fpcmp_parts_f+0xac>
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	cb 01       	movw	r24, r22
     cc2:	1f 91       	pop	r17
     cc4:	08 95       	ret

00000cc6 <SWITCH_u8IsPressed>:
#include "SWITCH_priv.h"
#include "SWITCH_cfg.h"
#include "SWITCH_int.h"

u8 SWITCH_u8IsPressed(u8 switchNum)
{
     cc6:	df 93       	push	r29
     cc8:	cf 93       	push	r28
     cca:	00 d0       	rcall	.+0      	; 0xccc <SWITCH_u8IsPressed+0x6>
     ccc:	00 d0       	rcall	.+0      	; 0xcce <SWITCH_u8IsPressed+0x8>
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	8a 83       	std	Y+2, r24	; 0x02
    u8 switchState;
    switch (switchNum)
     cd4:	8a 81       	ldd	r24, Y+2	; 0x02
     cd6:	28 2f       	mov	r18, r24
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	3c 83       	std	Y+4, r19	; 0x04
     cdc:	2b 83       	std	Y+3, r18	; 0x03
     cde:	8b 81       	ldd	r24, Y+3	; 0x03
     ce0:	9c 81       	ldd	r25, Y+4	; 0x04
     ce2:	8f 30       	cpi	r24, 0x0F	; 15
     ce4:	91 05       	cpc	r25, r1
     ce6:	09 f4       	brne	.+2      	; 0xcea <SWITCH_u8IsPressed+0x24>
     ce8:	57 c1       	rjmp	.+686    	; 0xf98 <SWITCH_u8IsPressed+0x2d2>
     cea:	2b 81       	ldd	r18, Y+3	; 0x03
     cec:	3c 81       	ldd	r19, Y+4	; 0x04
     cee:	20 31       	cpi	r18, 0x10	; 16
     cf0:	31 05       	cpc	r19, r1
     cf2:	0c f0       	brlt	.+2      	; 0xcf6 <SWITCH_u8IsPressed+0x30>
     cf4:	5a c0       	rjmp	.+180    	; 0xdaa <SWITCH_u8IsPressed+0xe4>
     cf6:	8b 81       	ldd	r24, Y+3	; 0x03
     cf8:	9c 81       	ldd	r25, Y+4	; 0x04
     cfa:	87 30       	cpi	r24, 0x07	; 7
     cfc:	91 05       	cpc	r25, r1
     cfe:	09 f4       	brne	.+2      	; 0xd02 <SWITCH_u8IsPressed+0x3c>
     d00:	fb c0       	rjmp	.+502    	; 0xef8 <SWITCH_u8IsPressed+0x232>
     d02:	2b 81       	ldd	r18, Y+3	; 0x03
     d04:	3c 81       	ldd	r19, Y+4	; 0x04
     d06:	28 30       	cpi	r18, 0x08	; 8
     d08:	31 05       	cpc	r19, r1
     d0a:	54 f5       	brge	.+84     	; 0xd60 <SWITCH_u8IsPressed+0x9a>
     d0c:	8b 81       	ldd	r24, Y+3	; 0x03
     d0e:	9c 81       	ldd	r25, Y+4	; 0x04
     d10:	83 30       	cpi	r24, 0x03	; 3
     d12:	91 05       	cpc	r25, r1
     d14:	09 f4       	brne	.+2      	; 0xd18 <SWITCH_u8IsPressed+0x52>
     d16:	c8 c0       	rjmp	.+400    	; 0xea8 <SWITCH_u8IsPressed+0x1e2>
     d18:	2b 81       	ldd	r18, Y+3	; 0x03
     d1a:	3c 81       	ldd	r19, Y+4	; 0x04
     d1c:	24 30       	cpi	r18, 0x04	; 4
     d1e:	31 05       	cpc	r19, r1
     d20:	94 f4       	brge	.+36     	; 0xd46 <SWITCH_u8IsPressed+0x80>
     d22:	8b 81       	ldd	r24, Y+3	; 0x03
     d24:	9c 81       	ldd	r25, Y+4	; 0x04
     d26:	81 30       	cpi	r24, 0x01	; 1
     d28:	91 05       	cpc	r25, r1
     d2a:	09 f4       	brne	.+2      	; 0xd2e <SWITCH_u8IsPressed+0x68>
     d2c:	a9 c0       	rjmp	.+338    	; 0xe80 <SWITCH_u8IsPressed+0x1ba>
     d2e:	2b 81       	ldd	r18, Y+3	; 0x03
     d30:	3c 81       	ldd	r19, Y+4	; 0x04
     d32:	22 30       	cpi	r18, 0x02	; 2
     d34:	31 05       	cpc	r19, r1
     d36:	0c f0       	brlt	.+2      	; 0xd3a <SWITCH_u8IsPressed+0x74>
     d38:	ad c0       	rjmp	.+346    	; 0xe94 <SWITCH_u8IsPressed+0x1ce>
     d3a:	8b 81       	ldd	r24, Y+3	; 0x03
     d3c:	9c 81       	ldd	r25, Y+4	; 0x04
     d3e:	00 97       	sbiw	r24, 0x00	; 0
     d40:	09 f4       	brne	.+2      	; 0xd44 <SWITCH_u8IsPressed+0x7e>
     d42:	94 c0       	rjmp	.+296    	; 0xe6c <SWITCH_u8IsPressed+0x1a6>
     d44:	d2 c1       	rjmp	.+932    	; 0x10ea <SWITCH_u8IsPressed+0x424>
     d46:	2b 81       	ldd	r18, Y+3	; 0x03
     d48:	3c 81       	ldd	r19, Y+4	; 0x04
     d4a:	25 30       	cpi	r18, 0x05	; 5
     d4c:	31 05       	cpc	r19, r1
     d4e:	09 f4       	brne	.+2      	; 0xd52 <SWITCH_u8IsPressed+0x8c>
     d50:	bf c0       	rjmp	.+382    	; 0xed0 <SWITCH_u8IsPressed+0x20a>
     d52:	8b 81       	ldd	r24, Y+3	; 0x03
     d54:	9c 81       	ldd	r25, Y+4	; 0x04
     d56:	86 30       	cpi	r24, 0x06	; 6
     d58:	91 05       	cpc	r25, r1
     d5a:	0c f0       	brlt	.+2      	; 0xd5e <SWITCH_u8IsPressed+0x98>
     d5c:	c3 c0       	rjmp	.+390    	; 0xee4 <SWITCH_u8IsPressed+0x21e>
     d5e:	ae c0       	rjmp	.+348    	; 0xebc <SWITCH_u8IsPressed+0x1f6>
     d60:	2b 81       	ldd	r18, Y+3	; 0x03
     d62:	3c 81       	ldd	r19, Y+4	; 0x04
     d64:	2b 30       	cpi	r18, 0x0B	; 11
     d66:	31 05       	cpc	r19, r1
     d68:	09 f4       	brne	.+2      	; 0xd6c <SWITCH_u8IsPressed+0xa6>
     d6a:	ee c0       	rjmp	.+476    	; 0xf48 <SWITCH_u8IsPressed+0x282>
     d6c:	8b 81       	ldd	r24, Y+3	; 0x03
     d6e:	9c 81       	ldd	r25, Y+4	; 0x04
     d70:	8c 30       	cpi	r24, 0x0C	; 12
     d72:	91 05       	cpc	r25, r1
     d74:	6c f4       	brge	.+26     	; 0xd90 <SWITCH_u8IsPressed+0xca>
     d76:	2b 81       	ldd	r18, Y+3	; 0x03
     d78:	3c 81       	ldd	r19, Y+4	; 0x04
     d7a:	29 30       	cpi	r18, 0x09	; 9
     d7c:	31 05       	cpc	r19, r1
     d7e:	09 f4       	brne	.+2      	; 0xd82 <SWITCH_u8IsPressed+0xbc>
     d80:	cf c0       	rjmp	.+414    	; 0xf20 <SWITCH_u8IsPressed+0x25a>
     d82:	8b 81       	ldd	r24, Y+3	; 0x03
     d84:	9c 81       	ldd	r25, Y+4	; 0x04
     d86:	8a 30       	cpi	r24, 0x0A	; 10
     d88:	91 05       	cpc	r25, r1
     d8a:	0c f0       	brlt	.+2      	; 0xd8e <SWITCH_u8IsPressed+0xc8>
     d8c:	d3 c0       	rjmp	.+422    	; 0xf34 <SWITCH_u8IsPressed+0x26e>
     d8e:	be c0       	rjmp	.+380    	; 0xf0c <SWITCH_u8IsPressed+0x246>
     d90:	2b 81       	ldd	r18, Y+3	; 0x03
     d92:	3c 81       	ldd	r19, Y+4	; 0x04
     d94:	2d 30       	cpi	r18, 0x0D	; 13
     d96:	31 05       	cpc	r19, r1
     d98:	09 f4       	brne	.+2      	; 0xd9c <SWITCH_u8IsPressed+0xd6>
     d9a:	ea c0       	rjmp	.+468    	; 0xf70 <SWITCH_u8IsPressed+0x2aa>
     d9c:	8b 81       	ldd	r24, Y+3	; 0x03
     d9e:	9c 81       	ldd	r25, Y+4	; 0x04
     da0:	8e 30       	cpi	r24, 0x0E	; 14
     da2:	91 05       	cpc	r25, r1
     da4:	0c f0       	brlt	.+2      	; 0xda8 <SWITCH_u8IsPressed+0xe2>
     da6:	ee c0       	rjmp	.+476    	; 0xf84 <SWITCH_u8IsPressed+0x2be>
     da8:	d9 c0       	rjmp	.+434    	; 0xf5c <SWITCH_u8IsPressed+0x296>
     daa:	2b 81       	ldd	r18, Y+3	; 0x03
     dac:	3c 81       	ldd	r19, Y+4	; 0x04
     dae:	27 31       	cpi	r18, 0x17	; 23
     db0:	31 05       	cpc	r19, r1
     db2:	09 f4       	brne	.+2      	; 0xdb6 <SWITCH_u8IsPressed+0xf0>
     db4:	41 c1       	rjmp	.+642    	; 0x1038 <SWITCH_u8IsPressed+0x372>
     db6:	8b 81       	ldd	r24, Y+3	; 0x03
     db8:	9c 81       	ldd	r25, Y+4	; 0x04
     dba:	88 31       	cpi	r24, 0x18	; 24
     dbc:	91 05       	cpc	r25, r1
     dbe:	2c f5       	brge	.+74     	; 0xe0a <SWITCH_u8IsPressed+0x144>
     dc0:	2b 81       	ldd	r18, Y+3	; 0x03
     dc2:	3c 81       	ldd	r19, Y+4	; 0x04
     dc4:	23 31       	cpi	r18, 0x13	; 19
     dc6:	31 05       	cpc	r19, r1
     dc8:	09 f4       	brne	.+2      	; 0xdcc <SWITCH_u8IsPressed+0x106>
     dca:	0e c1       	rjmp	.+540    	; 0xfe8 <SWITCH_u8IsPressed+0x322>
     dcc:	8b 81       	ldd	r24, Y+3	; 0x03
     dce:	9c 81       	ldd	r25, Y+4	; 0x04
     dd0:	84 31       	cpi	r24, 0x14	; 20
     dd2:	91 05       	cpc	r25, r1
     dd4:	6c f4       	brge	.+26     	; 0xdf0 <SWITCH_u8IsPressed+0x12a>
     dd6:	2b 81       	ldd	r18, Y+3	; 0x03
     dd8:	3c 81       	ldd	r19, Y+4	; 0x04
     dda:	21 31       	cpi	r18, 0x11	; 17
     ddc:	31 05       	cpc	r19, r1
     dde:	09 f4       	brne	.+2      	; 0xde2 <SWITCH_u8IsPressed+0x11c>
     de0:	ef c0       	rjmp	.+478    	; 0xfc0 <SWITCH_u8IsPressed+0x2fa>
     de2:	8b 81       	ldd	r24, Y+3	; 0x03
     de4:	9c 81       	ldd	r25, Y+4	; 0x04
     de6:	82 31       	cpi	r24, 0x12	; 18
     de8:	91 05       	cpc	r25, r1
     dea:	0c f0       	brlt	.+2      	; 0xdee <SWITCH_u8IsPressed+0x128>
     dec:	f3 c0       	rjmp	.+486    	; 0xfd4 <SWITCH_u8IsPressed+0x30e>
     dee:	de c0       	rjmp	.+444    	; 0xfac <SWITCH_u8IsPressed+0x2e6>
     df0:	2b 81       	ldd	r18, Y+3	; 0x03
     df2:	3c 81       	ldd	r19, Y+4	; 0x04
     df4:	25 31       	cpi	r18, 0x15	; 21
     df6:	31 05       	cpc	r19, r1
     df8:	09 f4       	brne	.+2      	; 0xdfc <SWITCH_u8IsPressed+0x136>
     dfa:	0a c1       	rjmp	.+532    	; 0x1010 <SWITCH_u8IsPressed+0x34a>
     dfc:	8b 81       	ldd	r24, Y+3	; 0x03
     dfe:	9c 81       	ldd	r25, Y+4	; 0x04
     e00:	86 31       	cpi	r24, 0x16	; 22
     e02:	91 05       	cpc	r25, r1
     e04:	0c f0       	brlt	.+2      	; 0xe08 <SWITCH_u8IsPressed+0x142>
     e06:	0e c1       	rjmp	.+540    	; 0x1024 <SWITCH_u8IsPressed+0x35e>
     e08:	f9 c0       	rjmp	.+498    	; 0xffc <SWITCH_u8IsPressed+0x336>
     e0a:	2b 81       	ldd	r18, Y+3	; 0x03
     e0c:	3c 81       	ldd	r19, Y+4	; 0x04
     e0e:	2b 31       	cpi	r18, 0x1B	; 27
     e10:	31 05       	cpc	r19, r1
     e12:	09 f4       	brne	.+2      	; 0xe16 <SWITCH_u8IsPressed+0x150>
     e14:	39 c1       	rjmp	.+626    	; 0x1088 <SWITCH_u8IsPressed+0x3c2>
     e16:	8b 81       	ldd	r24, Y+3	; 0x03
     e18:	9c 81       	ldd	r25, Y+4	; 0x04
     e1a:	8c 31       	cpi	r24, 0x1C	; 28
     e1c:	91 05       	cpc	r25, r1
     e1e:	6c f4       	brge	.+26     	; 0xe3a <SWITCH_u8IsPressed+0x174>
     e20:	2b 81       	ldd	r18, Y+3	; 0x03
     e22:	3c 81       	ldd	r19, Y+4	; 0x04
     e24:	29 31       	cpi	r18, 0x19	; 25
     e26:	31 05       	cpc	r19, r1
     e28:	09 f4       	brne	.+2      	; 0xe2c <SWITCH_u8IsPressed+0x166>
     e2a:	1a c1       	rjmp	.+564    	; 0x1060 <SWITCH_u8IsPressed+0x39a>
     e2c:	8b 81       	ldd	r24, Y+3	; 0x03
     e2e:	9c 81       	ldd	r25, Y+4	; 0x04
     e30:	8a 31       	cpi	r24, 0x1A	; 26
     e32:	91 05       	cpc	r25, r1
     e34:	0c f0       	brlt	.+2      	; 0xe38 <SWITCH_u8IsPressed+0x172>
     e36:	1e c1       	rjmp	.+572    	; 0x1074 <SWITCH_u8IsPressed+0x3ae>
     e38:	09 c1       	rjmp	.+530    	; 0x104c <SWITCH_u8IsPressed+0x386>
     e3a:	2b 81       	ldd	r18, Y+3	; 0x03
     e3c:	3c 81       	ldd	r19, Y+4	; 0x04
     e3e:	2d 31       	cpi	r18, 0x1D	; 29
     e40:	31 05       	cpc	r19, r1
     e42:	09 f4       	brne	.+2      	; 0xe46 <SWITCH_u8IsPressed+0x180>
     e44:	35 c1       	rjmp	.+618    	; 0x10b0 <SWITCH_u8IsPressed+0x3ea>
     e46:	8b 81       	ldd	r24, Y+3	; 0x03
     e48:	9c 81       	ldd	r25, Y+4	; 0x04
     e4a:	8d 31       	cpi	r24, 0x1D	; 29
     e4c:	91 05       	cpc	r25, r1
     e4e:	0c f4       	brge	.+2      	; 0xe52 <SWITCH_u8IsPressed+0x18c>
     e50:	25 c1       	rjmp	.+586    	; 0x109c <SWITCH_u8IsPressed+0x3d6>
     e52:	2b 81       	ldd	r18, Y+3	; 0x03
     e54:	3c 81       	ldd	r19, Y+4	; 0x04
     e56:	2e 31       	cpi	r18, 0x1E	; 30
     e58:	31 05       	cpc	r19, r1
     e5a:	09 f4       	brne	.+2      	; 0xe5e <SWITCH_u8IsPressed+0x198>
     e5c:	33 c1       	rjmp	.+614    	; 0x10c4 <SWITCH_u8IsPressed+0x3fe>
     e5e:	8b 81       	ldd	r24, Y+3	; 0x03
     e60:	9c 81       	ldd	r25, Y+4	; 0x04
     e62:	8f 31       	cpi	r24, 0x1F	; 31
     e64:	91 05       	cpc	r25, r1
     e66:	09 f4       	brne	.+2      	; 0xe6a <SWITCH_u8IsPressed+0x1a4>
     e68:	37 c1       	rjmp	.+622    	; 0x10d8 <SWITCH_u8IsPressed+0x412>
     e6a:	3f c1       	rjmp	.+638    	; 0x10ea <SWITCH_u8IsPressed+0x424>
    {
    case SWITCH0:
#if (SWITCH0_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH0_PIN) == HIGH)
     e6c:	8a e1       	ldi	r24, 0x1A	; 26
     e6e:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     e72:	81 30       	cpi	r24, 0x01	; 1
     e74:	11 f4       	brne	.+4      	; 0xe7a <SWITCH_u8IsPressed+0x1b4>
            switchState = NOT_PRESSED;
     e76:	19 82       	std	Y+1, r1	; 0x01
     e78:	38 c1       	rjmp	.+624    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	89 83       	std	Y+1, r24	; 0x01
     e7e:	35 c1       	rjmp	.+618    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH1:
#if (SWITCH1_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH1_PIN) == HIGH)
     e80:	8b e1       	ldi	r24, 0x1B	; 27
     e82:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     e86:	81 30       	cpi	r24, 0x01	; 1
     e88:	11 f4       	brne	.+4      	; 0xe8e <SWITCH_u8IsPressed+0x1c8>
            switchState = NOT_PRESSED;
     e8a:	19 82       	std	Y+1, r1	; 0x01
     e8c:	2e c1       	rjmp	.+604    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	89 83       	std	Y+1, r24	; 0x01
     e92:	2b c1       	rjmp	.+598    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH2:
#if (SWITCH2_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH2_PIN) == HIGH)
     e94:	8c e1       	ldi	r24, 0x1C	; 28
     e96:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     e9a:	81 30       	cpi	r24, 0x01	; 1
     e9c:	11 f4       	brne	.+4      	; 0xea2 <SWITCH_u8IsPressed+0x1dc>
            switchState = NOT_PRESSED;
     e9e:	19 82       	std	Y+1, r1	; 0x01
     ea0:	24 c1       	rjmp	.+584    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	89 83       	std	Y+1, r24	; 0x01
     ea6:	21 c1       	rjmp	.+578    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH3:
#if (SWITCH3_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH3_PIN) == HIGH)
     ea8:	8d e1       	ldi	r24, 0x1D	; 29
     eaa:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     eae:	81 30       	cpi	r24, 0x01	; 1
     eb0:	11 f4       	brne	.+4      	; 0xeb6 <SWITCH_u8IsPressed+0x1f0>
            switchState = NOT_PRESSED;
     eb2:	19 82       	std	Y+1, r1	; 0x01
     eb4:	1a c1       	rjmp	.+564    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	89 83       	std	Y+1, r24	; 0x01
     eba:	17 c1       	rjmp	.+558    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH4:
#if (SWITCH4_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH4_PIN) == HIGH)
     ebc:	8a e1       	ldi	r24, 0x1A	; 26
     ebe:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     ec2:	81 30       	cpi	r24, 0x01	; 1
     ec4:	11 f4       	brne	.+4      	; 0xeca <SWITCH_u8IsPressed+0x204>
            switchState = NOT_PRESSED;
     ec6:	19 82       	std	Y+1, r1	; 0x01
     ec8:	10 c1       	rjmp	.+544    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     eca:	81 e0       	ldi	r24, 0x01	; 1
     ecc:	89 83       	std	Y+1, r24	; 0x01
     ece:	0d c1       	rjmp	.+538    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH5:
#if (SWITCH5_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH5_PIN) == HIGH)
     ed0:	8c e0       	ldi	r24, 0x0C	; 12
     ed2:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     ed6:	81 30       	cpi	r24, 0x01	; 1
     ed8:	11 f4       	brne	.+4      	; 0xede <SWITCH_u8IsPressed+0x218>
            switchState = NOT_PRESSED;
     eda:	19 82       	std	Y+1, r1	; 0x01
     edc:	06 c1       	rjmp	.+524    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	89 83       	std	Y+1, r24	; 0x01
     ee2:	03 c1       	rjmp	.+518    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH6:
#if (SWITCH6_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH6_PIN) == HIGH)
     ee4:	8d e0       	ldi	r24, 0x0D	; 13
     ee6:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     eea:	81 30       	cpi	r24, 0x01	; 1
     eec:	11 f4       	brne	.+4      	; 0xef2 <SWITCH_u8IsPressed+0x22c>
            switchState = NOT_PRESSED;
     eee:	19 82       	std	Y+1, r1	; 0x01
     ef0:	fc c0       	rjmp	.+504    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     ef2:	81 e0       	ldi	r24, 0x01	; 1
     ef4:	89 83       	std	Y+1, r24	; 0x01
     ef6:	f9 c0       	rjmp	.+498    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH7:
#if (SWITCH7_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH7_PIN) == HIGH)
     ef8:	8e e0       	ldi	r24, 0x0E	; 14
     efa:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     efe:	81 30       	cpi	r24, 0x01	; 1
     f00:	11 f4       	brne	.+4      	; 0xf06 <SWITCH_u8IsPressed+0x240>
            switchState = NOT_PRESSED;
     f02:	19 82       	std	Y+1, r1	; 0x01
     f04:	f2 c0       	rjmp	.+484    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	89 83       	std	Y+1, r24	; 0x01
     f0a:	ef c0       	rjmp	.+478    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH8:
#if (SWITCH8_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH8_PIN) == HIGH)
     f0c:	8f e0       	ldi	r24, 0x0F	; 15
     f0e:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f12:	81 30       	cpi	r24, 0x01	; 1
     f14:	11 f4       	brne	.+4      	; 0xf1a <SWITCH_u8IsPressed+0x254>
            switchState = NOT_PRESSED;
     f16:	19 82       	std	Y+1, r1	; 0x01
     f18:	e8 c0       	rjmp	.+464    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f1a:	81 e0       	ldi	r24, 0x01	; 1
     f1c:	89 83       	std	Y+1, r24	; 0x01
     f1e:	e5 c0       	rjmp	.+458    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH9:
#if (SWITCH9_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH9_PIN) == HIGH)
     f20:	8a e1       	ldi	r24, 0x1A	; 26
     f22:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f26:	81 30       	cpi	r24, 0x01	; 1
     f28:	11 f4       	brne	.+4      	; 0xf2e <SWITCH_u8IsPressed+0x268>
            switchState = NOT_PRESSED;
     f2a:	19 82       	std	Y+1, r1	; 0x01
     f2c:	de c0       	rjmp	.+444    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	db c0       	rjmp	.+438    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH10:
#if (SWITCH10_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH10_PIN) == HIGH)
     f34:	8a e1       	ldi	r24, 0x1A	; 26
     f36:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f3a:	81 30       	cpi	r24, 0x01	; 1
     f3c:	11 f4       	brne	.+4      	; 0xf42 <SWITCH_u8IsPressed+0x27c>
            switchState = NOT_PRESSED;
     f3e:	19 82       	std	Y+1, r1	; 0x01
     f40:	d4 c0       	rjmp	.+424    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f42:	81 e0       	ldi	r24, 0x01	; 1
     f44:	89 83       	std	Y+1, r24	; 0x01
     f46:	d1 c0       	rjmp	.+418    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH11:
#if (SWITCH11_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH11_PIN) == HIGH)
     f48:	81 e1       	ldi	r24, 0x11	; 17
     f4a:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f4e:	81 30       	cpi	r24, 0x01	; 1
     f50:	11 f4       	brne	.+4      	; 0xf56 <SWITCH_u8IsPressed+0x290>
            switchState = NOT_PRESSED;
     f52:	19 82       	std	Y+1, r1	; 0x01
     f54:	ca c0       	rjmp	.+404    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	89 83       	std	Y+1, r24	; 0x01
     f5a:	c7 c0       	rjmp	.+398    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH12:
#if (SWITCH12_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH12_PIN) == HIGH)
     f5c:	82 e1       	ldi	r24, 0x12	; 18
     f5e:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f62:	81 30       	cpi	r24, 0x01	; 1
     f64:	11 f4       	brne	.+4      	; 0xf6a <SWITCH_u8IsPressed+0x2a4>
            switchState = NOT_PRESSED;
     f66:	19 82       	std	Y+1, r1	; 0x01
     f68:	c0 c0       	rjmp	.+384    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f6a:	81 e0       	ldi	r24, 0x01	; 1
     f6c:	89 83       	std	Y+1, r24	; 0x01
     f6e:	bd c0       	rjmp	.+378    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH13:
#if (SWITCH13_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH13_PIN) == HIGH)
     f70:	8a e1       	ldi	r24, 0x1A	; 26
     f72:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f76:	81 30       	cpi	r24, 0x01	; 1
     f78:	11 f4       	brne	.+4      	; 0xf7e <SWITCH_u8IsPressed+0x2b8>
            switchState = NOT_PRESSED;
     f7a:	19 82       	std	Y+1, r1	; 0x01
     f7c:	b6 c0       	rjmp	.+364    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	89 83       	std	Y+1, r24	; 0x01
     f82:	b3 c0       	rjmp	.+358    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH14:
#if (SWITCH14_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH14_PIN) == HIGH)
     f84:	8a e1       	ldi	r24, 0x1A	; 26
     f86:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f8a:	81 30       	cpi	r24, 0x01	; 1
     f8c:	11 f4       	brne	.+4      	; 0xf92 <SWITCH_u8IsPressed+0x2cc>
            switchState = NOT_PRESSED;
     f8e:	19 82       	std	Y+1, r1	; 0x01
     f90:	ac c0       	rjmp	.+344    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	89 83       	std	Y+1, r24	; 0x01
     f96:	a9 c0       	rjmp	.+338    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH15:
#if (SWITCH15_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH15_PIN) == HIGH)
     f98:	8a e1       	ldi	r24, 0x1A	; 26
     f9a:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     f9e:	81 30       	cpi	r24, 0x01	; 1
     fa0:	11 f4       	brne	.+4      	; 0xfa6 <SWITCH_u8IsPressed+0x2e0>
            switchState = NOT_PRESSED;
     fa2:	19 82       	std	Y+1, r1	; 0x01
     fa4:	a2 c0       	rjmp	.+324    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	89 83       	std	Y+1, r24	; 0x01
     faa:	9f c0       	rjmp	.+318    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH16:
#if (SWITCH16_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH16_PIN) == HIGH)
     fac:	8a e1       	ldi	r24, 0x1A	; 26
     fae:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     fb2:	81 30       	cpi	r24, 0x01	; 1
     fb4:	11 f4       	brne	.+4      	; 0xfba <SWITCH_u8IsPressed+0x2f4>
            switchState = NOT_PRESSED;
     fb6:	19 82       	std	Y+1, r1	; 0x01
     fb8:	98 c0       	rjmp	.+304    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	89 83       	std	Y+1, r24	; 0x01
     fbe:	95 c0       	rjmp	.+298    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH17:
#if (SWITCH17_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH17_PIN) == HIGH)
     fc0:	8a e1       	ldi	r24, 0x1A	; 26
     fc2:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     fc6:	81 30       	cpi	r24, 0x01	; 1
     fc8:	11 f4       	brne	.+4      	; 0xfce <SWITCH_u8IsPressed+0x308>
            switchState = NOT_PRESSED;
     fca:	19 82       	std	Y+1, r1	; 0x01
     fcc:	8e c0       	rjmp	.+284    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	89 83       	std	Y+1, r24	; 0x01
     fd2:	8b c0       	rjmp	.+278    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH18:
#if (SWITCH18_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH18_PIN) == HIGH)
     fd4:	8a e1       	ldi	r24, 0x1A	; 26
     fd6:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     fda:	81 30       	cpi	r24, 0x01	; 1
     fdc:	11 f4       	brne	.+4      	; 0xfe2 <SWITCH_u8IsPressed+0x31c>
            switchState = NOT_PRESSED;
     fde:	19 82       	std	Y+1, r1	; 0x01
     fe0:	84 c0       	rjmp	.+264    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	89 83       	std	Y+1, r24	; 0x01
     fe6:	81 c0       	rjmp	.+258    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH19:
#if (SWITCH19_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH19_PIN) == HIGH)
     fe8:	8a e1       	ldi	r24, 0x1A	; 26
     fea:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
     fee:	81 30       	cpi	r24, 0x01	; 1
     ff0:	11 f4       	brne	.+4      	; 0xff6 <SWITCH_u8IsPressed+0x330>
            switchState = NOT_PRESSED;
     ff2:	19 82       	std	Y+1, r1	; 0x01
     ff4:	7a c0       	rjmp	.+244    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	89 83       	std	Y+1, r24	; 0x01
     ffa:	77 c0       	rjmp	.+238    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH20:
#if (SWITCH20_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH20_PIN) == HIGH)
     ffc:	8a e1       	ldi	r24, 0x1A	; 26
     ffe:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    1002:	81 30       	cpi	r24, 0x01	; 1
    1004:	11 f4       	brne	.+4      	; 0x100a <SWITCH_u8IsPressed+0x344>
            switchState = NOT_PRESSED;
    1006:	19 82       	std	Y+1, r1	; 0x01
    1008:	70 c0       	rjmp	.+224    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	89 83       	std	Y+1, r24	; 0x01
    100e:	6d c0       	rjmp	.+218    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH21:
#if (SWITCH21_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH21_PIN) == HIGH)
    1010:	81 e1       	ldi	r24, 0x11	; 17
    1012:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    1016:	81 30       	cpi	r24, 0x01	; 1
    1018:	11 f4       	brne	.+4      	; 0x101e <SWITCH_u8IsPressed+0x358>
            switchState = NOT_PRESSED;
    101a:	19 82       	std	Y+1, r1	; 0x01
    101c:	66 c0       	rjmp	.+204    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    101e:	81 e0       	ldi	r24, 0x01	; 1
    1020:	89 83       	std	Y+1, r24	; 0x01
    1022:	63 c0       	rjmp	.+198    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH22:
#if (SWITCH22_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH22_PIN) == HIGH)
    1024:	82 e1       	ldi	r24, 0x12	; 18
    1026:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    102a:	81 30       	cpi	r24, 0x01	; 1
    102c:	11 f4       	brne	.+4      	; 0x1032 <SWITCH_u8IsPressed+0x36c>
            switchState = NOT_PRESSED;
    102e:	19 82       	std	Y+1, r1	; 0x01
    1030:	5c c0       	rjmp	.+184    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    1032:	81 e0       	ldi	r24, 0x01	; 1
    1034:	89 83       	std	Y+1, r24	; 0x01
    1036:	59 c0       	rjmp	.+178    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH23:
#if (SWITCH23_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH23_PIN) == HIGH)
    1038:	8a e1       	ldi	r24, 0x1A	; 26
    103a:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    103e:	81 30       	cpi	r24, 0x01	; 1
    1040:	11 f4       	brne	.+4      	; 0x1046 <SWITCH_u8IsPressed+0x380>
            switchState = NOT_PRESSED;
    1042:	19 82       	std	Y+1, r1	; 0x01
    1044:	52 c0       	rjmp	.+164    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	89 83       	std	Y+1, r24	; 0x01
    104a:	4f c0       	rjmp	.+158    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH24:
#if (SWITCH24_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH24_PIN) == HIGH)
    104c:	8a e1       	ldi	r24, 0x1A	; 26
    104e:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    1052:	81 30       	cpi	r24, 0x01	; 1
    1054:	11 f4       	brne	.+4      	; 0x105a <SWITCH_u8IsPressed+0x394>
            switchState = NOT_PRESSED;
    1056:	19 82       	std	Y+1, r1	; 0x01
    1058:	48 c0       	rjmp	.+144    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    105a:	81 e0       	ldi	r24, 0x01	; 1
    105c:	89 83       	std	Y+1, r24	; 0x01
    105e:	45 c0       	rjmp	.+138    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH25:
#if (SWITCH25_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH25_PIN) == HIGH)
    1060:	8a e1       	ldi	r24, 0x1A	; 26
    1062:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    1066:	81 30       	cpi	r24, 0x01	; 1
    1068:	11 f4       	brne	.+4      	; 0x106e <SWITCH_u8IsPressed+0x3a8>
            switchState = NOT_PRESSED;
    106a:	19 82       	std	Y+1, r1	; 0x01
    106c:	3e c0       	rjmp	.+124    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	89 83       	std	Y+1, r24	; 0x01
    1072:	3b c0       	rjmp	.+118    	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH26:
#if (SWITCH26_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH26_PIN) == HIGH)
    1074:	8a e1       	ldi	r24, 0x1A	; 26
    1076:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    107a:	81 30       	cpi	r24, 0x01	; 1
    107c:	11 f4       	brne	.+4      	; 0x1082 <SWITCH_u8IsPressed+0x3bc>
            switchState = NOT_PRESSED;
    107e:	19 82       	std	Y+1, r1	; 0x01
    1080:	34 c0       	rjmp	.+104    	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	89 83       	std	Y+1, r24	; 0x01
    1086:	31 c0       	rjmp	.+98     	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH27:
#if (SWITCH27_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH27_PIN) == HIGH)
    1088:	8a e1       	ldi	r24, 0x1A	; 26
    108a:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    108e:	81 30       	cpi	r24, 0x01	; 1
    1090:	11 f4       	brne	.+4      	; 0x1096 <SWITCH_u8IsPressed+0x3d0>
            switchState = NOT_PRESSED;
    1092:	19 82       	std	Y+1, r1	; 0x01
    1094:	2a c0       	rjmp	.+84     	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	89 83       	std	Y+1, r24	; 0x01
    109a:	27 c0       	rjmp	.+78     	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH28:
#if (SWITCH28_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH28_PIN) == HIGH)
    109c:	8a e1       	ldi	r24, 0x1A	; 26
    109e:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    10a2:	81 30       	cpi	r24, 0x01	; 1
    10a4:	11 f4       	brne	.+4      	; 0x10aa <SWITCH_u8IsPressed+0x3e4>
            switchState = NOT_PRESSED;
    10a6:	19 82       	std	Y+1, r1	; 0x01
    10a8:	20 c0       	rjmp	.+64     	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    10aa:	81 e0       	ldi	r24, 0x01	; 1
    10ac:	89 83       	std	Y+1, r24	; 0x01
    10ae:	1d c0       	rjmp	.+58     	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH29:
#if (SWITCH29_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH29_PIN) == HIGH)
    10b0:	8a e1       	ldi	r24, 0x1A	; 26
    10b2:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    10b6:	81 30       	cpi	r24, 0x01	; 1
    10b8:	11 f4       	brne	.+4      	; 0x10be <SWITCH_u8IsPressed+0x3f8>
            switchState = NOT_PRESSED;
    10ba:	19 82       	std	Y+1, r1	; 0x01
    10bc:	16 c0       	rjmp	.+44     	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	89 83       	std	Y+1, r24	; 0x01
    10c2:	13 c0       	rjmp	.+38     	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH30:
#if (SWITCH30_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH30_PIN) == HIGH)
    10c4:	8a e1       	ldi	r24, 0x1A	; 26
    10c6:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    10ca:	81 30       	cpi	r24, 0x01	; 1
    10cc:	11 f4       	brne	.+4      	; 0x10d2 <SWITCH_u8IsPressed+0x40c>
            switchState = NOT_PRESSED;
    10ce:	19 82       	std	Y+1, r1	; 0x01
    10d0:	0c c0       	rjmp	.+24     	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    10d2:	81 e0       	ldi	r24, 0x01	; 1
    10d4:	89 83       	std	Y+1, r24	; 0x01
    10d6:	09 c0       	rjmp	.+18     	; 0x10ea <SWITCH_u8IsPressed+0x424>
#endif
    break;
    case SWITCH31:
#if (SWITCH31_CONN == PULL_UP)
    {
        if (DIO_u8GetPin(SWITCH31_PIN) == HIGH)
    10d8:	8a e1       	ldi	r24, 0x1A	; 26
    10da:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    10de:	81 30       	cpi	r24, 0x01	; 1
    10e0:	11 f4       	brne	.+4      	; 0x10e6 <SWITCH_u8IsPressed+0x420>
            switchState = NOT_PRESSED;
    10e2:	19 82       	std	Y+1, r1	; 0x01
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <SWITCH_u8IsPressed+0x424>
        else
            switchState = PRESSED;
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	89 83       	std	Y+1, r24	; 0x01
    break;

    default:
        break;
    }
    return switchState;
    10ea:	89 81       	ldd	r24, Y+1	; 0x01
}
    10ec:	0f 90       	pop	r0
    10ee:	0f 90       	pop	r0
    10f0:	0f 90       	pop	r0
    10f2:	0f 90       	pop	r0
    10f4:	cf 91       	pop	r28
    10f6:	df 91       	pop	r29
    10f8:	08 95       	ret

000010fa <SEVSEG_voidInitialize>:
#include "SEVSEG_cfg.h"
#include "SEVSEG_priv.h"
#include "SEVSEG_int.h"

void SEVSEG_voidInitialize(void)
{
    10fa:	df 93       	push	r29
    10fc:	cf 93       	push	r28
    10fe:	cd b7       	in	r28, 0x3d	; 61
    1100:	de b7       	in	r29, 0x3e	; 62
}
    1102:	cf 91       	pop	r28
    1104:	df 91       	pop	r29
    1106:	08 95       	ret

00001108 <SEVSEG_voidDisplay>:

void SEVSEG_voidDisplay(u8 digit, u8 segNum)
{
    1108:	df 93       	push	r29
    110a:	cf 93       	push	r28
    110c:	00 d0       	rcall	.+0      	; 0x110e <SEVSEG_voidDisplay+0x6>
    110e:	00 d0       	rcall	.+0      	; 0x1110 <SEVSEG_voidDisplay+0x8>
    1110:	00 d0       	rcall	.+0      	; 0x1112 <SEVSEG_voidDisplay+0xa>
    1112:	cd b7       	in	r28, 0x3d	; 61
    1114:	de b7       	in	r29, 0x3e	; 62
    1116:	89 83       	std	Y+1, r24	; 0x01
    1118:	6a 83       	std	Y+2, r22	; 0x02
    if (segNum == SEVSEG0)
    111a:	8a 81       	ldd	r24, Y+2	; 0x02
    111c:	88 23       	and	r24, r24
    111e:	09 f0       	breq	.+2      	; 0x1122 <SEVSEG_voidDisplay+0x1a>
    1120:	78 c1       	rjmp	.+752    	; 0x1412 <SEVSEG_voidDisplay+0x30a>
    {
        #if (SEVSEG0_CONN == COMMON_CATHOD)
        {
            DIO_voidSetPin(SEVSEG0_ENABLE, 1);
    1122:	86 e1       	ldi	r24, 0x16	; 22
    1124:	61 e0       	ldi	r22, 0x01	; 1
    1126:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
            switch (digit)
    112a:	89 81       	ldd	r24, Y+1	; 0x01
    112c:	28 2f       	mov	r18, r24
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	3e 83       	std	Y+6, r19	; 0x06
    1132:	2d 83       	std	Y+5, r18	; 0x05
    1134:	8d 81       	ldd	r24, Y+5	; 0x05
    1136:	9e 81       	ldd	r25, Y+6	; 0x06
    1138:	84 30       	cpi	r24, 0x04	; 4
    113a:	91 05       	cpc	r25, r1
    113c:	09 f4       	brne	.+2      	; 0x1140 <SEVSEG_voidDisplay+0x38>
    113e:	bb c0       	rjmp	.+374    	; 0x12b6 <SEVSEG_voidDisplay+0x1ae>
    1140:	2d 81       	ldd	r18, Y+5	; 0x05
    1142:	3e 81       	ldd	r19, Y+6	; 0x06
    1144:	25 30       	cpi	r18, 0x05	; 5
    1146:	31 05       	cpc	r19, r1
    1148:	ec f4       	brge	.+58     	; 0x1184 <SEVSEG_voidDisplay+0x7c>
    114a:	8d 81       	ldd	r24, Y+5	; 0x05
    114c:	9e 81       	ldd	r25, Y+6	; 0x06
    114e:	81 30       	cpi	r24, 0x01	; 1
    1150:	91 05       	cpc	r25, r1
    1152:	09 f4       	brne	.+2      	; 0x1156 <SEVSEG_voidDisplay+0x4e>
    1154:	59 c0       	rjmp	.+178    	; 0x1208 <SEVSEG_voidDisplay+0x100>
    1156:	2d 81       	ldd	r18, Y+5	; 0x05
    1158:	3e 81       	ldd	r19, Y+6	; 0x06
    115a:	22 30       	cpi	r18, 0x02	; 2
    115c:	31 05       	cpc	r19, r1
    115e:	2c f4       	brge	.+10     	; 0x116a <SEVSEG_voidDisplay+0x62>
    1160:	8d 81       	ldd	r24, Y+5	; 0x05
    1162:	9e 81       	ldd	r25, Y+6	; 0x06
    1164:	00 97       	sbiw	r24, 0x00	; 0
    1166:	99 f1       	breq	.+102    	; 0x11ce <SEVSEG_voidDisplay+0xc6>
    1168:	cb c2       	rjmp	.+1430   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
    116a:	2d 81       	ldd	r18, Y+5	; 0x05
    116c:	3e 81       	ldd	r19, Y+6	; 0x06
    116e:	22 30       	cpi	r18, 0x02	; 2
    1170:	31 05       	cpc	r19, r1
    1172:	09 f4       	brne	.+2      	; 0x1176 <SEVSEG_voidDisplay+0x6e>
    1174:	66 c0       	rjmp	.+204    	; 0x1242 <SEVSEG_voidDisplay+0x13a>
    1176:	8d 81       	ldd	r24, Y+5	; 0x05
    1178:	9e 81       	ldd	r25, Y+6	; 0x06
    117a:	83 30       	cpi	r24, 0x03	; 3
    117c:	91 05       	cpc	r25, r1
    117e:	09 f4       	brne	.+2      	; 0x1182 <SEVSEG_voidDisplay+0x7a>
    1180:	7d c0       	rjmp	.+250    	; 0x127c <SEVSEG_voidDisplay+0x174>
    1182:	be c2       	rjmp	.+1404   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
    1184:	2d 81       	ldd	r18, Y+5	; 0x05
    1186:	3e 81       	ldd	r19, Y+6	; 0x06
    1188:	27 30       	cpi	r18, 0x07	; 7
    118a:	31 05       	cpc	r19, r1
    118c:	09 f4       	brne	.+2      	; 0x1190 <SEVSEG_voidDisplay+0x88>
    118e:	ea c0       	rjmp	.+468    	; 0x1364 <SEVSEG_voidDisplay+0x25c>
    1190:	8d 81       	ldd	r24, Y+5	; 0x05
    1192:	9e 81       	ldd	r25, Y+6	; 0x06
    1194:	88 30       	cpi	r24, 0x08	; 8
    1196:	91 05       	cpc	r25, r1
    1198:	6c f4       	brge	.+26     	; 0x11b4 <SEVSEG_voidDisplay+0xac>
    119a:	2d 81       	ldd	r18, Y+5	; 0x05
    119c:	3e 81       	ldd	r19, Y+6	; 0x06
    119e:	25 30       	cpi	r18, 0x05	; 5
    11a0:	31 05       	cpc	r19, r1
    11a2:	09 f4       	brne	.+2      	; 0x11a6 <SEVSEG_voidDisplay+0x9e>
    11a4:	a5 c0       	rjmp	.+330    	; 0x12f0 <SEVSEG_voidDisplay+0x1e8>
    11a6:	8d 81       	ldd	r24, Y+5	; 0x05
    11a8:	9e 81       	ldd	r25, Y+6	; 0x06
    11aa:	86 30       	cpi	r24, 0x06	; 6
    11ac:	91 05       	cpc	r25, r1
    11ae:	09 f4       	brne	.+2      	; 0x11b2 <SEVSEG_voidDisplay+0xaa>
    11b0:	bc c0       	rjmp	.+376    	; 0x132a <SEVSEG_voidDisplay+0x222>
    11b2:	a6 c2       	rjmp	.+1356   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
    11b4:	2d 81       	ldd	r18, Y+5	; 0x05
    11b6:	3e 81       	ldd	r19, Y+6	; 0x06
    11b8:	28 30       	cpi	r18, 0x08	; 8
    11ba:	31 05       	cpc	r19, r1
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <SEVSEG_voidDisplay+0xb8>
    11be:	ef c0       	rjmp	.+478    	; 0x139e <SEVSEG_voidDisplay+0x296>
    11c0:	8d 81       	ldd	r24, Y+5	; 0x05
    11c2:	9e 81       	ldd	r25, Y+6	; 0x06
    11c4:	89 30       	cpi	r24, 0x09	; 9
    11c6:	91 05       	cpc	r25, r1
    11c8:	09 f4       	brne	.+2      	; 0x11cc <SEVSEG_voidDisplay+0xc4>
    11ca:	06 c1       	rjmp	.+524    	; 0x13d8 <SEVSEG_voidDisplay+0x2d0>
    11cc:	99 c2       	rjmp	.+1330   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
            {
            case 0:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	61 e0       	ldi	r22, 0x01	; 1
    11d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    11d6:	82 e0       	ldi	r24, 0x02	; 2
    11d8:	61 e0       	ldi	r22, 0x01	; 1
    11da:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    11de:	83 e0       	ldi	r24, 0x03	; 3
    11e0:	61 e0       	ldi	r22, 0x01	; 1
    11e2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, HIGH);
    11e6:	84 e0       	ldi	r24, 0x04	; 4
    11e8:	61 e0       	ldi	r22, 0x01	; 1
    11ea:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, HIGH);
    11ee:	85 e0       	ldi	r24, 0x05	; 5
    11f0:	61 e0       	ldi	r22, 0x01	; 1
    11f2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, HIGH);
    11f6:	86 e0       	ldi	r24, 0x06	; 6
    11f8:	61 e0       	ldi	r22, 0x01	; 1
    11fa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, LOW);
    11fe:	87 e0       	ldi	r24, 0x07	; 7
    1200:	60 e0       	ldi	r22, 0x00	; 0
    1202:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1206:	7c c2       	rjmp	.+1272   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 1:
                DIO_voidSetPin(SEVSEG0_PINA, LOW);
    1208:	81 e0       	ldi	r24, 0x01	; 1
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    1210:	82 e0       	ldi	r24, 0x02	; 2
    1212:	61 e0       	ldi	r22, 0x01	; 1
    1214:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    1218:	83 e0       	ldi	r24, 0x03	; 3
    121a:	61 e0       	ldi	r22, 0x01	; 1
    121c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, LOW);
    1220:	84 e0       	ldi	r24, 0x04	; 4
    1222:	60 e0       	ldi	r22, 0x00	; 0
    1224:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, LOW);
    1228:	85 e0       	ldi	r24, 0x05	; 5
    122a:	60 e0       	ldi	r22, 0x00	; 0
    122c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, LOW);
    1230:	86 e0       	ldi	r24, 0x06	; 6
    1232:	60 e0       	ldi	r22, 0x00	; 0
    1234:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, LOW);
    1238:	87 e0       	ldi	r24, 0x07	; 7
    123a:	60 e0       	ldi	r22, 0x00	; 0
    123c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1240:	5f c2       	rjmp	.+1214   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 2:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	61 e0       	ldi	r22, 0x01	; 1
    1246:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    124a:	82 e0       	ldi	r24, 0x02	; 2
    124c:	61 e0       	ldi	r22, 0x01	; 1
    124e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, LOW);
    1252:	83 e0       	ldi	r24, 0x03	; 3
    1254:	60 e0       	ldi	r22, 0x00	; 0
    1256:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, HIGH);
    125a:	84 e0       	ldi	r24, 0x04	; 4
    125c:	61 e0       	ldi	r22, 0x01	; 1
    125e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, HIGH);
    1262:	85 e0       	ldi	r24, 0x05	; 5
    1264:	61 e0       	ldi	r22, 0x01	; 1
    1266:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, LOW);
    126a:	86 e0       	ldi	r24, 0x06	; 6
    126c:	60 e0       	ldi	r22, 0x00	; 0
    126e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, HIGH);
    1272:	87 e0       	ldi	r24, 0x07	; 7
    1274:	61 e0       	ldi	r22, 0x01	; 1
    1276:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    127a:	42 c2       	rjmp	.+1156   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 3:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	61 e0       	ldi	r22, 0x01	; 1
    1280:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    1284:	82 e0       	ldi	r24, 0x02	; 2
    1286:	61 e0       	ldi	r22, 0x01	; 1
    1288:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    128c:	83 e0       	ldi	r24, 0x03	; 3
    128e:	61 e0       	ldi	r22, 0x01	; 1
    1290:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, HIGH);
    1294:	84 e0       	ldi	r24, 0x04	; 4
    1296:	61 e0       	ldi	r22, 0x01	; 1
    1298:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, LOW);
    129c:	85 e0       	ldi	r24, 0x05	; 5
    129e:	60 e0       	ldi	r22, 0x00	; 0
    12a0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, LOW);
    12a4:	86 e0       	ldi	r24, 0x06	; 6
    12a6:	60 e0       	ldi	r22, 0x00	; 0
    12a8:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, HIGH);
    12ac:	87 e0       	ldi	r24, 0x07	; 7
    12ae:	61 e0       	ldi	r22, 0x01	; 1
    12b0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    12b4:	25 c2       	rjmp	.+1098   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 4:
                DIO_voidSetPin(SEVSEG0_PINA, LOW);
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    12be:	82 e0       	ldi	r24, 0x02	; 2
    12c0:	61 e0       	ldi	r22, 0x01	; 1
    12c2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    12c6:	83 e0       	ldi	r24, 0x03	; 3
    12c8:	61 e0       	ldi	r22, 0x01	; 1
    12ca:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, LOW);
    12ce:	84 e0       	ldi	r24, 0x04	; 4
    12d0:	60 e0       	ldi	r22, 0x00	; 0
    12d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, LOW);
    12d6:	85 e0       	ldi	r24, 0x05	; 5
    12d8:	60 e0       	ldi	r22, 0x00	; 0
    12da:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, HIGH);
    12de:	86 e0       	ldi	r24, 0x06	; 6
    12e0:	61 e0       	ldi	r22, 0x01	; 1
    12e2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, HIGH);
    12e6:	87 e0       	ldi	r24, 0x07	; 7
    12e8:	61 e0       	ldi	r22, 0x01	; 1
    12ea:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    12ee:	08 c2       	rjmp	.+1040   	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 5:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	61 e0       	ldi	r22, 0x01	; 1
    12f4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, LOW);
    12f8:	82 e0       	ldi	r24, 0x02	; 2
    12fa:	60 e0       	ldi	r22, 0x00	; 0
    12fc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    1300:	83 e0       	ldi	r24, 0x03	; 3
    1302:	61 e0       	ldi	r22, 0x01	; 1
    1304:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, HIGH);
    1308:	84 e0       	ldi	r24, 0x04	; 4
    130a:	61 e0       	ldi	r22, 0x01	; 1
    130c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, LOW);
    1310:	85 e0       	ldi	r24, 0x05	; 5
    1312:	60 e0       	ldi	r22, 0x00	; 0
    1314:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, HIGH);
    1318:	86 e0       	ldi	r24, 0x06	; 6
    131a:	61 e0       	ldi	r22, 0x01	; 1
    131c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, HIGH);
    1320:	87 e0       	ldi	r24, 0x07	; 7
    1322:	61 e0       	ldi	r22, 0x01	; 1
    1324:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1328:	eb c1       	rjmp	.+982    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 6:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    132a:	81 e0       	ldi	r24, 0x01	; 1
    132c:	61 e0       	ldi	r22, 0x01	; 1
    132e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, LOW);
    1332:	82 e0       	ldi	r24, 0x02	; 2
    1334:	60 e0       	ldi	r22, 0x00	; 0
    1336:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    133a:	83 e0       	ldi	r24, 0x03	; 3
    133c:	61 e0       	ldi	r22, 0x01	; 1
    133e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, HIGH);
    1342:	84 e0       	ldi	r24, 0x04	; 4
    1344:	61 e0       	ldi	r22, 0x01	; 1
    1346:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, HIGH);
    134a:	85 e0       	ldi	r24, 0x05	; 5
    134c:	61 e0       	ldi	r22, 0x01	; 1
    134e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, HIGH);
    1352:	86 e0       	ldi	r24, 0x06	; 6
    1354:	61 e0       	ldi	r22, 0x01	; 1
    1356:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, HIGH);
    135a:	87 e0       	ldi	r24, 0x07	; 7
    135c:	61 e0       	ldi	r22, 0x01	; 1
    135e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1362:	ce c1       	rjmp	.+924    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 7:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    1364:	81 e0       	ldi	r24, 0x01	; 1
    1366:	61 e0       	ldi	r22, 0x01	; 1
    1368:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    136c:	82 e0       	ldi	r24, 0x02	; 2
    136e:	61 e0       	ldi	r22, 0x01	; 1
    1370:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    1374:	83 e0       	ldi	r24, 0x03	; 3
    1376:	61 e0       	ldi	r22, 0x01	; 1
    1378:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, LOW);
    137c:	84 e0       	ldi	r24, 0x04	; 4
    137e:	60 e0       	ldi	r22, 0x00	; 0
    1380:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, LOW);
    1384:	85 e0       	ldi	r24, 0x05	; 5
    1386:	60 e0       	ldi	r22, 0x00	; 0
    1388:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, LOW);
    138c:	86 e0       	ldi	r24, 0x06	; 6
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, LOW);
    1394:	87 e0       	ldi	r24, 0x07	; 7
    1396:	60 e0       	ldi	r22, 0x00	; 0
    1398:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    139c:	b1 c1       	rjmp	.+866    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 8:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    139e:	81 e0       	ldi	r24, 0x01	; 1
    13a0:	61 e0       	ldi	r22, 0x01	; 1
    13a2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    13a6:	82 e0       	ldi	r24, 0x02	; 2
    13a8:	61 e0       	ldi	r22, 0x01	; 1
    13aa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    13ae:	83 e0       	ldi	r24, 0x03	; 3
    13b0:	61 e0       	ldi	r22, 0x01	; 1
    13b2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, HIGH);
    13b6:	84 e0       	ldi	r24, 0x04	; 4
    13b8:	61 e0       	ldi	r22, 0x01	; 1
    13ba:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, HIGH);
    13be:	85 e0       	ldi	r24, 0x05	; 5
    13c0:	61 e0       	ldi	r22, 0x01	; 1
    13c2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, HIGH);
    13c6:	86 e0       	ldi	r24, 0x06	; 6
    13c8:	61 e0       	ldi	r22, 0x01	; 1
    13ca:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, HIGH);
    13ce:	87 e0       	ldi	r24, 0x07	; 7
    13d0:	61 e0       	ldi	r22, 0x01	; 1
    13d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    13d6:	94 c1       	rjmp	.+808    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 9:
                DIO_voidSetPin(SEVSEG0_PINA, HIGH);
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	61 e0       	ldi	r22, 0x01	; 1
    13dc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINB, HIGH);
    13e0:	82 e0       	ldi	r24, 0x02	; 2
    13e2:	61 e0       	ldi	r22, 0x01	; 1
    13e4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINC, HIGH);
    13e8:	83 e0       	ldi	r24, 0x03	; 3
    13ea:	61 e0       	ldi	r22, 0x01	; 1
    13ec:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PIND, HIGH);
    13f0:	84 e0       	ldi	r24, 0x04	; 4
    13f2:	61 e0       	ldi	r22, 0x01	; 1
    13f4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINE, LOW);
    13f8:	85 e0       	ldi	r24, 0x05	; 5
    13fa:	60 e0       	ldi	r22, 0x00	; 0
    13fc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PINF, HIGH);
    1400:	86 e0       	ldi	r24, 0x06	; 6
    1402:	61 e0       	ldi	r22, 0x01	; 1
    1404:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG0_PING, HIGH);
    1408:	87 e0       	ldi	r24, 0x07	; 7
    140a:	61 e0       	ldi	r22, 0x01	; 1
    140c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1410:	77 c1       	rjmp	.+750    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
    }
    else
    {
        #if (SEVSEG1_CONN == COMMON_CATHOD)
        {
            DIO_voidSetPin(SEVSEG1_ENABLE, 1);
    1412:	87 e1       	ldi	r24, 0x17	; 23
    1414:	61 e0       	ldi	r22, 0x01	; 1
    1416:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
            switch (digit)
    141a:	89 81       	ldd	r24, Y+1	; 0x01
    141c:	28 2f       	mov	r18, r24
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	3c 83       	std	Y+4, r19	; 0x04
    1422:	2b 83       	std	Y+3, r18	; 0x03
    1424:	8b 81       	ldd	r24, Y+3	; 0x03
    1426:	9c 81       	ldd	r25, Y+4	; 0x04
    1428:	84 30       	cpi	r24, 0x04	; 4
    142a:	91 05       	cpc	r25, r1
    142c:	09 f4       	brne	.+2      	; 0x1430 <SEVSEG_voidDisplay+0x328>
    142e:	bb c0       	rjmp	.+374    	; 0x15a6 <SEVSEG_voidDisplay+0x49e>
    1430:	2b 81       	ldd	r18, Y+3	; 0x03
    1432:	3c 81       	ldd	r19, Y+4	; 0x04
    1434:	25 30       	cpi	r18, 0x05	; 5
    1436:	31 05       	cpc	r19, r1
    1438:	ec f4       	brge	.+58     	; 0x1474 <SEVSEG_voidDisplay+0x36c>
    143a:	8b 81       	ldd	r24, Y+3	; 0x03
    143c:	9c 81       	ldd	r25, Y+4	; 0x04
    143e:	81 30       	cpi	r24, 0x01	; 1
    1440:	91 05       	cpc	r25, r1
    1442:	09 f4       	brne	.+2      	; 0x1446 <SEVSEG_voidDisplay+0x33e>
    1444:	59 c0       	rjmp	.+178    	; 0x14f8 <SEVSEG_voidDisplay+0x3f0>
    1446:	2b 81       	ldd	r18, Y+3	; 0x03
    1448:	3c 81       	ldd	r19, Y+4	; 0x04
    144a:	22 30       	cpi	r18, 0x02	; 2
    144c:	31 05       	cpc	r19, r1
    144e:	2c f4       	brge	.+10     	; 0x145a <SEVSEG_voidDisplay+0x352>
    1450:	8b 81       	ldd	r24, Y+3	; 0x03
    1452:	9c 81       	ldd	r25, Y+4	; 0x04
    1454:	00 97       	sbiw	r24, 0x00	; 0
    1456:	99 f1       	breq	.+102    	; 0x14be <SEVSEG_voidDisplay+0x3b6>
    1458:	53 c1       	rjmp	.+678    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
    145a:	2b 81       	ldd	r18, Y+3	; 0x03
    145c:	3c 81       	ldd	r19, Y+4	; 0x04
    145e:	22 30       	cpi	r18, 0x02	; 2
    1460:	31 05       	cpc	r19, r1
    1462:	09 f4       	brne	.+2      	; 0x1466 <SEVSEG_voidDisplay+0x35e>
    1464:	66 c0       	rjmp	.+204    	; 0x1532 <SEVSEG_voidDisplay+0x42a>
    1466:	8b 81       	ldd	r24, Y+3	; 0x03
    1468:	9c 81       	ldd	r25, Y+4	; 0x04
    146a:	83 30       	cpi	r24, 0x03	; 3
    146c:	91 05       	cpc	r25, r1
    146e:	09 f4       	brne	.+2      	; 0x1472 <SEVSEG_voidDisplay+0x36a>
    1470:	7d c0       	rjmp	.+250    	; 0x156c <SEVSEG_voidDisplay+0x464>
    1472:	46 c1       	rjmp	.+652    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
    1474:	2b 81       	ldd	r18, Y+3	; 0x03
    1476:	3c 81       	ldd	r19, Y+4	; 0x04
    1478:	27 30       	cpi	r18, 0x07	; 7
    147a:	31 05       	cpc	r19, r1
    147c:	09 f4       	brne	.+2      	; 0x1480 <SEVSEG_voidDisplay+0x378>
    147e:	ea c0       	rjmp	.+468    	; 0x1654 <SEVSEG_voidDisplay+0x54c>
    1480:	8b 81       	ldd	r24, Y+3	; 0x03
    1482:	9c 81       	ldd	r25, Y+4	; 0x04
    1484:	88 30       	cpi	r24, 0x08	; 8
    1486:	91 05       	cpc	r25, r1
    1488:	6c f4       	brge	.+26     	; 0x14a4 <SEVSEG_voidDisplay+0x39c>
    148a:	2b 81       	ldd	r18, Y+3	; 0x03
    148c:	3c 81       	ldd	r19, Y+4	; 0x04
    148e:	25 30       	cpi	r18, 0x05	; 5
    1490:	31 05       	cpc	r19, r1
    1492:	09 f4       	brne	.+2      	; 0x1496 <SEVSEG_voidDisplay+0x38e>
    1494:	a5 c0       	rjmp	.+330    	; 0x15e0 <SEVSEG_voidDisplay+0x4d8>
    1496:	8b 81       	ldd	r24, Y+3	; 0x03
    1498:	9c 81       	ldd	r25, Y+4	; 0x04
    149a:	86 30       	cpi	r24, 0x06	; 6
    149c:	91 05       	cpc	r25, r1
    149e:	09 f4       	brne	.+2      	; 0x14a2 <SEVSEG_voidDisplay+0x39a>
    14a0:	bc c0       	rjmp	.+376    	; 0x161a <SEVSEG_voidDisplay+0x512>
    14a2:	2e c1       	rjmp	.+604    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
    14a4:	2b 81       	ldd	r18, Y+3	; 0x03
    14a6:	3c 81       	ldd	r19, Y+4	; 0x04
    14a8:	28 30       	cpi	r18, 0x08	; 8
    14aa:	31 05       	cpc	r19, r1
    14ac:	09 f4       	brne	.+2      	; 0x14b0 <SEVSEG_voidDisplay+0x3a8>
    14ae:	ef c0       	rjmp	.+478    	; 0x168e <SEVSEG_voidDisplay+0x586>
    14b0:	8b 81       	ldd	r24, Y+3	; 0x03
    14b2:	9c 81       	ldd	r25, Y+4	; 0x04
    14b4:	89 30       	cpi	r24, 0x09	; 9
    14b6:	91 05       	cpc	r25, r1
    14b8:	09 f4       	brne	.+2      	; 0x14bc <SEVSEG_voidDisplay+0x3b4>
    14ba:	06 c1       	rjmp	.+524    	; 0x16c8 <SEVSEG_voidDisplay+0x5c0>
    14bc:	21 c1       	rjmp	.+578    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
            {
            case 0:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	61 e0       	ldi	r22, 0x01	; 1
    14c2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    14c6:	82 e0       	ldi	r24, 0x02	; 2
    14c8:	61 e0       	ldi	r22, 0x01	; 1
    14ca:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    14ce:	83 e0       	ldi	r24, 0x03	; 3
    14d0:	61 e0       	ldi	r22, 0x01	; 1
    14d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, HIGH);
    14d6:	84 e0       	ldi	r24, 0x04	; 4
    14d8:	61 e0       	ldi	r22, 0x01	; 1
    14da:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, HIGH);
    14de:	85 e0       	ldi	r24, 0x05	; 5
    14e0:	61 e0       	ldi	r22, 0x01	; 1
    14e2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, HIGH);
    14e6:	86 e0       	ldi	r24, 0x06	; 6
    14e8:	61 e0       	ldi	r22, 0x01	; 1
    14ea:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, LOW);
    14ee:	87 e0       	ldi	r24, 0x07	; 7
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    14f6:	04 c1       	rjmp	.+520    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 1:
                DIO_voidSetPin(SEVSEG1_PINA, LOW);
    14f8:	81 e0       	ldi	r24, 0x01	; 1
    14fa:	60 e0       	ldi	r22, 0x00	; 0
    14fc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    1500:	82 e0       	ldi	r24, 0x02	; 2
    1502:	61 e0       	ldi	r22, 0x01	; 1
    1504:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    1508:	83 e0       	ldi	r24, 0x03	; 3
    150a:	61 e0       	ldi	r22, 0x01	; 1
    150c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, LOW);
    1510:	84 e0       	ldi	r24, 0x04	; 4
    1512:	60 e0       	ldi	r22, 0x00	; 0
    1514:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, LOW);
    1518:	85 e0       	ldi	r24, 0x05	; 5
    151a:	60 e0       	ldi	r22, 0x00	; 0
    151c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, LOW);
    1520:	86 e0       	ldi	r24, 0x06	; 6
    1522:	60 e0       	ldi	r22, 0x00	; 0
    1524:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, LOW);
    1528:	87 e0       	ldi	r24, 0x07	; 7
    152a:	60 e0       	ldi	r22, 0x00	; 0
    152c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1530:	e7 c0       	rjmp	.+462    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 2:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	61 e0       	ldi	r22, 0x01	; 1
    1536:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    153a:	82 e0       	ldi	r24, 0x02	; 2
    153c:	61 e0       	ldi	r22, 0x01	; 1
    153e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, LOW);
    1542:	83 e0       	ldi	r24, 0x03	; 3
    1544:	60 e0       	ldi	r22, 0x00	; 0
    1546:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, HIGH);
    154a:	84 e0       	ldi	r24, 0x04	; 4
    154c:	61 e0       	ldi	r22, 0x01	; 1
    154e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, HIGH);
    1552:	85 e0       	ldi	r24, 0x05	; 5
    1554:	61 e0       	ldi	r22, 0x01	; 1
    1556:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, LOW);
    155a:	86 e0       	ldi	r24, 0x06	; 6
    155c:	60 e0       	ldi	r22, 0x00	; 0
    155e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, HIGH);
    1562:	87 e0       	ldi	r24, 0x07	; 7
    1564:	61 e0       	ldi	r22, 0x01	; 1
    1566:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    156a:	ca c0       	rjmp	.+404    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 3:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	61 e0       	ldi	r22, 0x01	; 1
    1570:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    1574:	82 e0       	ldi	r24, 0x02	; 2
    1576:	61 e0       	ldi	r22, 0x01	; 1
    1578:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    157c:	83 e0       	ldi	r24, 0x03	; 3
    157e:	61 e0       	ldi	r22, 0x01	; 1
    1580:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, HIGH);
    1584:	84 e0       	ldi	r24, 0x04	; 4
    1586:	61 e0       	ldi	r22, 0x01	; 1
    1588:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, LOW);
    158c:	85 e0       	ldi	r24, 0x05	; 5
    158e:	60 e0       	ldi	r22, 0x00	; 0
    1590:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, LOW);
    1594:	86 e0       	ldi	r24, 0x06	; 6
    1596:	60 e0       	ldi	r22, 0x00	; 0
    1598:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, HIGH);
    159c:	87 e0       	ldi	r24, 0x07	; 7
    159e:	61 e0       	ldi	r22, 0x01	; 1
    15a0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    15a4:	ad c0       	rjmp	.+346    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 4:
                DIO_voidSetPin(SEVSEG1_PINA, LOW);
    15a6:	81 e0       	ldi	r24, 0x01	; 1
    15a8:	60 e0       	ldi	r22, 0x00	; 0
    15aa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    15ae:	82 e0       	ldi	r24, 0x02	; 2
    15b0:	61 e0       	ldi	r22, 0x01	; 1
    15b2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    15b6:	83 e0       	ldi	r24, 0x03	; 3
    15b8:	61 e0       	ldi	r22, 0x01	; 1
    15ba:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, LOW);
    15be:	84 e0       	ldi	r24, 0x04	; 4
    15c0:	60 e0       	ldi	r22, 0x00	; 0
    15c2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, LOW);
    15c6:	85 e0       	ldi	r24, 0x05	; 5
    15c8:	60 e0       	ldi	r22, 0x00	; 0
    15ca:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, HIGH);
    15ce:	86 e0       	ldi	r24, 0x06	; 6
    15d0:	61 e0       	ldi	r22, 0x01	; 1
    15d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, HIGH);
    15d6:	87 e0       	ldi	r24, 0x07	; 7
    15d8:	61 e0       	ldi	r22, 0x01	; 1
    15da:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    15de:	90 c0       	rjmp	.+288    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 5:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    15e0:	81 e0       	ldi	r24, 0x01	; 1
    15e2:	61 e0       	ldi	r22, 0x01	; 1
    15e4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, LOW);
    15e8:	82 e0       	ldi	r24, 0x02	; 2
    15ea:	60 e0       	ldi	r22, 0x00	; 0
    15ec:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    15f0:	83 e0       	ldi	r24, 0x03	; 3
    15f2:	61 e0       	ldi	r22, 0x01	; 1
    15f4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, HIGH);
    15f8:	84 e0       	ldi	r24, 0x04	; 4
    15fa:	61 e0       	ldi	r22, 0x01	; 1
    15fc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, LOW);
    1600:	85 e0       	ldi	r24, 0x05	; 5
    1602:	60 e0       	ldi	r22, 0x00	; 0
    1604:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, HIGH);
    1608:	86 e0       	ldi	r24, 0x06	; 6
    160a:	61 e0       	ldi	r22, 0x01	; 1
    160c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, HIGH);
    1610:	87 e0       	ldi	r24, 0x07	; 7
    1612:	61 e0       	ldi	r22, 0x01	; 1
    1614:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1618:	73 c0       	rjmp	.+230    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 6:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	61 e0       	ldi	r22, 0x01	; 1
    161e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, LOW);
    1622:	82 e0       	ldi	r24, 0x02	; 2
    1624:	60 e0       	ldi	r22, 0x00	; 0
    1626:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    162a:	83 e0       	ldi	r24, 0x03	; 3
    162c:	61 e0       	ldi	r22, 0x01	; 1
    162e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, HIGH);
    1632:	84 e0       	ldi	r24, 0x04	; 4
    1634:	61 e0       	ldi	r22, 0x01	; 1
    1636:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, HIGH);
    163a:	85 e0       	ldi	r24, 0x05	; 5
    163c:	61 e0       	ldi	r22, 0x01	; 1
    163e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, HIGH);
    1642:	86 e0       	ldi	r24, 0x06	; 6
    1644:	61 e0       	ldi	r22, 0x01	; 1
    1646:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, HIGH);
    164a:	87 e0       	ldi	r24, 0x07	; 7
    164c:	61 e0       	ldi	r22, 0x01	; 1
    164e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1652:	56 c0       	rjmp	.+172    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 7:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    1654:	81 e0       	ldi	r24, 0x01	; 1
    1656:	61 e0       	ldi	r22, 0x01	; 1
    1658:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    165c:	82 e0       	ldi	r24, 0x02	; 2
    165e:	61 e0       	ldi	r22, 0x01	; 1
    1660:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    1664:	83 e0       	ldi	r24, 0x03	; 3
    1666:	61 e0       	ldi	r22, 0x01	; 1
    1668:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, LOW);
    166c:	84 e0       	ldi	r24, 0x04	; 4
    166e:	60 e0       	ldi	r22, 0x00	; 0
    1670:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, LOW);
    1674:	85 e0       	ldi	r24, 0x05	; 5
    1676:	60 e0       	ldi	r22, 0x00	; 0
    1678:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, LOW);
    167c:	86 e0       	ldi	r24, 0x06	; 6
    167e:	60 e0       	ldi	r22, 0x00	; 0
    1680:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, LOW);
    1684:	87 e0       	ldi	r24, 0x07	; 7
    1686:	60 e0       	ldi	r22, 0x00	; 0
    1688:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    168c:	39 c0       	rjmp	.+114    	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 8:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	61 e0       	ldi	r22, 0x01	; 1
    1692:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    1696:	82 e0       	ldi	r24, 0x02	; 2
    1698:	61 e0       	ldi	r22, 0x01	; 1
    169a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    169e:	83 e0       	ldi	r24, 0x03	; 3
    16a0:	61 e0       	ldi	r22, 0x01	; 1
    16a2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, HIGH);
    16a6:	84 e0       	ldi	r24, 0x04	; 4
    16a8:	61 e0       	ldi	r22, 0x01	; 1
    16aa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, HIGH);
    16ae:	85 e0       	ldi	r24, 0x05	; 5
    16b0:	61 e0       	ldi	r22, 0x01	; 1
    16b2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, HIGH);
    16b6:	86 e0       	ldi	r24, 0x06	; 6
    16b8:	61 e0       	ldi	r22, 0x01	; 1
    16ba:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, HIGH);
    16be:	87 e0       	ldi	r24, 0x07	; 7
    16c0:	61 e0       	ldi	r22, 0x01	; 1
    16c2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    16c6:	1c c0       	rjmp	.+56     	; 0x1700 <SEVSEG_voidDisplay+0x5f8>
                break;
            case 9:
                DIO_voidSetPin(SEVSEG1_PINA, HIGH);
    16c8:	81 e0       	ldi	r24, 0x01	; 1
    16ca:	61 e0       	ldi	r22, 0x01	; 1
    16cc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINB, HIGH);
    16d0:	82 e0       	ldi	r24, 0x02	; 2
    16d2:	61 e0       	ldi	r22, 0x01	; 1
    16d4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINC, HIGH);
    16d8:	83 e0       	ldi	r24, 0x03	; 3
    16da:	61 e0       	ldi	r22, 0x01	; 1
    16dc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PIND, HIGH);
    16e0:	84 e0       	ldi	r24, 0x04	; 4
    16e2:	61 e0       	ldi	r22, 0x01	; 1
    16e4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINE, LOW);
    16e8:	85 e0       	ldi	r24, 0x05	; 5
    16ea:	60 e0       	ldi	r22, 0x00	; 0
    16ec:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PINF, HIGH);
    16f0:	86 e0       	ldi	r24, 0x06	; 6
    16f2:	61 e0       	ldi	r22, 0x01	; 1
    16f4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                DIO_voidSetPin(SEVSEG1_PING, HIGH);
    16f8:	87 e0       	ldi	r24, 0x07	; 7
    16fa:	61 e0       	ldi	r22, 0x01	; 1
    16fc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
                break;
            }
        } 
        #endif
    }
}
    1700:	26 96       	adiw	r28, 0x06	; 6
    1702:	0f b6       	in	r0, 0x3f	; 63
    1704:	f8 94       	cli
    1706:	de bf       	out	0x3e, r29	; 62
    1708:	0f be       	out	0x3f, r0	; 63
    170a:	cd bf       	out	0x3d, r28	; 61
    170c:	cf 91       	pop	r28
    170e:	df 91       	pop	r29
    1710:	08 95       	ret

00001712 <SEVSEG_voidEnable>:

void SEVSEG_voidEnable(u8 segNum)
{
    1712:	df 93       	push	r29
    1714:	cf 93       	push	r28
    1716:	0f 92       	push	r0
    1718:	cd b7       	in	r28, 0x3d	; 61
    171a:	de b7       	in	r29, 0x3e	; 62
    171c:	89 83       	std	Y+1, r24	; 0x01
    if (segNum == SEVSEG0)
    171e:	89 81       	ldd	r24, Y+1	; 0x01
    1720:	88 23       	and	r24, r24
    1722:	29 f4       	brne	.+10     	; 0x172e <SEVSEG_voidEnable+0x1c>
    {
        #if (SEVSEG0_CONN == COMMON_CATHOD)
        {
            DIO_voidSetPin(SEVSEG0_ENABLE,LOW);
    1724:	86 e1       	ldi	r24, 0x16	; 22
    1726:	60 e0       	ldi	r22, 0x00	; 0
    1728:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    172c:	04 c0       	rjmp	.+8      	; 0x1736 <SEVSEG_voidEnable+0x24>
    }
    else
    {
        #if (SEVSEG1_CONN == COMMON_CATHOD)
        {
            DIO_voidSetPin(SEVSEG1_ENABLE,LOW);
    172e:	87 e1       	ldi	r24, 0x17	; 23
    1730:	60 e0       	ldi	r22, 0x00	; 0
    1732:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        }
        #endif
    }
    
    
}
    1736:	0f 90       	pop	r0
    1738:	cf 91       	pop	r28
    173a:	df 91       	pop	r29
    173c:	08 95       	ret

0000173e <SEVSEG_voidDisable>:
void SEVSEG_voidDisable(u8 segNum)
{
    173e:	df 93       	push	r29
    1740:	cf 93       	push	r28
    1742:	0f 92       	push	r0
    1744:	cd b7       	in	r28, 0x3d	; 61
    1746:	de b7       	in	r29, 0x3e	; 62
    1748:	89 83       	std	Y+1, r24	; 0x01
    if (segNum == SEVSEG0)
    174a:	89 81       	ldd	r24, Y+1	; 0x01
    174c:	88 23       	and	r24, r24
    174e:	29 f4       	brne	.+10     	; 0x175a <SEVSEG_voidDisable+0x1c>
    {
        #if (SEVSEG0_CONN == COMMON_CATHOD)
        {
            DIO_voidSetPin(SEVSEG0_ENABLE, LOW);
    1750:	86 e1       	ldi	r24, 0x16	; 22
    1752:	60 e0       	ldi	r22, 0x00	; 0
    1754:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1758:	04 c0       	rjmp	.+8      	; 0x1762 <SEVSEG_voidDisable+0x24>
    }
    else
    {
        #if (SEVSEG1_CONN == COMMON_CATHOD)
        {
            DIO_voidSetPin(SEVSEG1_ENABLE, LOW);
    175a:	87 e1       	ldi	r24, 0x17	; 23
    175c:	60 e0       	ldi	r22, 0x00	; 0
    175e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        {
            DIO_voidSetPin(SEVSEG1_ENABLE, HIGH);
        }
        #endif
    }
}
    1762:	0f 90       	pop	r0
    1764:	cf 91       	pop	r28
    1766:	df 91       	pop	r29
    1768:	08 95       	ret

0000176a <LED_voidLedOn>:
#include "LED_priv.h"
#include "LED_cfg.h"
#include "LED_int.h"

void LED_voidLedOn(u8 led)
{
    176a:	df 93       	push	r29
    176c:	cf 93       	push	r28
    176e:	00 d0       	rcall	.+0      	; 0x1770 <LED_voidLedOn+0x6>
    1770:	0f 92       	push	r0
    1772:	cd b7       	in	r28, 0x3d	; 61
    1774:	de b7       	in	r29, 0x3e	; 62
    1776:	89 83       	std	Y+1, r24	; 0x01
    switch (led)
    1778:	89 81       	ldd	r24, Y+1	; 0x01
    177a:	28 2f       	mov	r18, r24
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	3b 83       	std	Y+3, r19	; 0x03
    1780:	2a 83       	std	Y+2, r18	; 0x02
    1782:	8a 81       	ldd	r24, Y+2	; 0x02
    1784:	9b 81       	ldd	r25, Y+3	; 0x03
    1786:	8f 30       	cpi	r24, 0x0F	; 15
    1788:	91 05       	cpc	r25, r1
    178a:	09 f4       	brne	.+2      	; 0x178e <LED_voidLedOn+0x24>
    178c:	0c c1       	rjmp	.+536    	; 0x19a6 <LED_voidLedOn+0x23c>
    178e:	2a 81       	ldd	r18, Y+2	; 0x02
    1790:	3b 81       	ldd	r19, Y+3	; 0x03
    1792:	20 31       	cpi	r18, 0x10	; 16
    1794:	31 05       	cpc	r19, r1
    1796:	0c f0       	brlt	.+2      	; 0x179a <LED_voidLedOn+0x30>
    1798:	5a c0       	rjmp	.+180    	; 0x184e <LED_voidLedOn+0xe4>
    179a:	8a 81       	ldd	r24, Y+2	; 0x02
    179c:	9b 81       	ldd	r25, Y+3	; 0x03
    179e:	87 30       	cpi	r24, 0x07	; 7
    17a0:	91 05       	cpc	r25, r1
    17a2:	09 f4       	brne	.+2      	; 0x17a6 <LED_voidLedOn+0x3c>
    17a4:	d8 c0       	rjmp	.+432    	; 0x1956 <LED_voidLedOn+0x1ec>
    17a6:	2a 81       	ldd	r18, Y+2	; 0x02
    17a8:	3b 81       	ldd	r19, Y+3	; 0x03
    17aa:	28 30       	cpi	r18, 0x08	; 8
    17ac:	31 05       	cpc	r19, r1
    17ae:	54 f5       	brge	.+84     	; 0x1804 <LED_voidLedOn+0x9a>
    17b0:	8a 81       	ldd	r24, Y+2	; 0x02
    17b2:	9b 81       	ldd	r25, Y+3	; 0x03
    17b4:	83 30       	cpi	r24, 0x03	; 3
    17b6:	91 05       	cpc	r25, r1
    17b8:	09 f4       	brne	.+2      	; 0x17bc <LED_voidLedOn+0x52>
    17ba:	b9 c0       	rjmp	.+370    	; 0x192e <LED_voidLedOn+0x1c4>
    17bc:	2a 81       	ldd	r18, Y+2	; 0x02
    17be:	3b 81       	ldd	r19, Y+3	; 0x03
    17c0:	24 30       	cpi	r18, 0x04	; 4
    17c2:	31 05       	cpc	r19, r1
    17c4:	94 f4       	brge	.+36     	; 0x17ea <LED_voidLedOn+0x80>
    17c6:	8a 81       	ldd	r24, Y+2	; 0x02
    17c8:	9b 81       	ldd	r25, Y+3	; 0x03
    17ca:	81 30       	cpi	r24, 0x01	; 1
    17cc:	91 05       	cpc	r25, r1
    17ce:	09 f4       	brne	.+2      	; 0x17d2 <LED_voidLedOn+0x68>
    17d0:	a4 c0       	rjmp	.+328    	; 0x191a <LED_voidLedOn+0x1b0>
    17d2:	2a 81       	ldd	r18, Y+2	; 0x02
    17d4:	3b 81       	ldd	r19, Y+3	; 0x03
    17d6:	22 30       	cpi	r18, 0x02	; 2
    17d8:	31 05       	cpc	r19, r1
    17da:	0c f0       	brlt	.+2      	; 0x17de <LED_voidLedOn+0x74>
    17dc:	a3 c0       	rjmp	.+326    	; 0x1924 <LED_voidLedOn+0x1ba>
    17de:	8a 81       	ldd	r24, Y+2	; 0x02
    17e0:	9b 81       	ldd	r25, Y+3	; 0x03
    17e2:	00 97       	sbiw	r24, 0x00	; 0
    17e4:	09 f4       	brne	.+2      	; 0x17e8 <LED_voidLedOn+0x7e>
    17e6:	94 c0       	rjmp	.+296    	; 0x1910 <LED_voidLedOn+0x1a6>
    17e8:	32 c1       	rjmp	.+612    	; 0x1a4e <LED_voidLedOn+0x2e4>
    17ea:	2a 81       	ldd	r18, Y+2	; 0x02
    17ec:	3b 81       	ldd	r19, Y+3	; 0x03
    17ee:	25 30       	cpi	r18, 0x05	; 5
    17f0:	31 05       	cpc	r19, r1
    17f2:	09 f4       	brne	.+2      	; 0x17f6 <LED_voidLedOn+0x8c>
    17f4:	a6 c0       	rjmp	.+332    	; 0x1942 <LED_voidLedOn+0x1d8>
    17f6:	8a 81       	ldd	r24, Y+2	; 0x02
    17f8:	9b 81       	ldd	r25, Y+3	; 0x03
    17fa:	86 30       	cpi	r24, 0x06	; 6
    17fc:	91 05       	cpc	r25, r1
    17fe:	0c f0       	brlt	.+2      	; 0x1802 <LED_voidLedOn+0x98>
    1800:	a5 c0       	rjmp	.+330    	; 0x194c <LED_voidLedOn+0x1e2>
    1802:	9a c0       	rjmp	.+308    	; 0x1938 <LED_voidLedOn+0x1ce>
    1804:	2a 81       	ldd	r18, Y+2	; 0x02
    1806:	3b 81       	ldd	r19, Y+3	; 0x03
    1808:	2b 30       	cpi	r18, 0x0B	; 11
    180a:	31 05       	cpc	r19, r1
    180c:	09 f4       	brne	.+2      	; 0x1810 <LED_voidLedOn+0xa6>
    180e:	b7 c0       	rjmp	.+366    	; 0x197e <LED_voidLedOn+0x214>
    1810:	8a 81       	ldd	r24, Y+2	; 0x02
    1812:	9b 81       	ldd	r25, Y+3	; 0x03
    1814:	8c 30       	cpi	r24, 0x0C	; 12
    1816:	91 05       	cpc	r25, r1
    1818:	6c f4       	brge	.+26     	; 0x1834 <LED_voidLedOn+0xca>
    181a:	2a 81       	ldd	r18, Y+2	; 0x02
    181c:	3b 81       	ldd	r19, Y+3	; 0x03
    181e:	29 30       	cpi	r18, 0x09	; 9
    1820:	31 05       	cpc	r19, r1
    1822:	09 f4       	brne	.+2      	; 0x1826 <LED_voidLedOn+0xbc>
    1824:	a2 c0       	rjmp	.+324    	; 0x196a <LED_voidLedOn+0x200>
    1826:	8a 81       	ldd	r24, Y+2	; 0x02
    1828:	9b 81       	ldd	r25, Y+3	; 0x03
    182a:	8a 30       	cpi	r24, 0x0A	; 10
    182c:	91 05       	cpc	r25, r1
    182e:	0c f0       	brlt	.+2      	; 0x1832 <LED_voidLedOn+0xc8>
    1830:	a1 c0       	rjmp	.+322    	; 0x1974 <LED_voidLedOn+0x20a>
    1832:	96 c0       	rjmp	.+300    	; 0x1960 <LED_voidLedOn+0x1f6>
    1834:	2a 81       	ldd	r18, Y+2	; 0x02
    1836:	3b 81       	ldd	r19, Y+3	; 0x03
    1838:	2d 30       	cpi	r18, 0x0D	; 13
    183a:	31 05       	cpc	r19, r1
    183c:	09 f4       	brne	.+2      	; 0x1840 <LED_voidLedOn+0xd6>
    183e:	a9 c0       	rjmp	.+338    	; 0x1992 <LED_voidLedOn+0x228>
    1840:	8a 81       	ldd	r24, Y+2	; 0x02
    1842:	9b 81       	ldd	r25, Y+3	; 0x03
    1844:	8e 30       	cpi	r24, 0x0E	; 14
    1846:	91 05       	cpc	r25, r1
    1848:	0c f0       	brlt	.+2      	; 0x184c <LED_voidLedOn+0xe2>
    184a:	a8 c0       	rjmp	.+336    	; 0x199c <LED_voidLedOn+0x232>
    184c:	9d c0       	rjmp	.+314    	; 0x1988 <LED_voidLedOn+0x21e>
    184e:	2a 81       	ldd	r18, Y+2	; 0x02
    1850:	3b 81       	ldd	r19, Y+3	; 0x03
    1852:	27 31       	cpi	r18, 0x17	; 23
    1854:	31 05       	cpc	r19, r1
    1856:	09 f4       	brne	.+2      	; 0x185a <LED_voidLedOn+0xf0>
    1858:	ce c0       	rjmp	.+412    	; 0x19f6 <LED_voidLedOn+0x28c>
    185a:	8a 81       	ldd	r24, Y+2	; 0x02
    185c:	9b 81       	ldd	r25, Y+3	; 0x03
    185e:	88 31       	cpi	r24, 0x18	; 24
    1860:	91 05       	cpc	r25, r1
    1862:	2c f5       	brge	.+74     	; 0x18ae <LED_voidLedOn+0x144>
    1864:	2a 81       	ldd	r18, Y+2	; 0x02
    1866:	3b 81       	ldd	r19, Y+3	; 0x03
    1868:	23 31       	cpi	r18, 0x13	; 19
    186a:	31 05       	cpc	r19, r1
    186c:	09 f4       	brne	.+2      	; 0x1870 <LED_voidLedOn+0x106>
    186e:	af c0       	rjmp	.+350    	; 0x19ce <LED_voidLedOn+0x264>
    1870:	8a 81       	ldd	r24, Y+2	; 0x02
    1872:	9b 81       	ldd	r25, Y+3	; 0x03
    1874:	84 31       	cpi	r24, 0x14	; 20
    1876:	91 05       	cpc	r25, r1
    1878:	6c f4       	brge	.+26     	; 0x1894 <LED_voidLedOn+0x12a>
    187a:	2a 81       	ldd	r18, Y+2	; 0x02
    187c:	3b 81       	ldd	r19, Y+3	; 0x03
    187e:	21 31       	cpi	r18, 0x11	; 17
    1880:	31 05       	cpc	r19, r1
    1882:	09 f4       	brne	.+2      	; 0x1886 <LED_voidLedOn+0x11c>
    1884:	9a c0       	rjmp	.+308    	; 0x19ba <LED_voidLedOn+0x250>
    1886:	8a 81       	ldd	r24, Y+2	; 0x02
    1888:	9b 81       	ldd	r25, Y+3	; 0x03
    188a:	82 31       	cpi	r24, 0x12	; 18
    188c:	91 05       	cpc	r25, r1
    188e:	0c f0       	brlt	.+2      	; 0x1892 <LED_voidLedOn+0x128>
    1890:	99 c0       	rjmp	.+306    	; 0x19c4 <LED_voidLedOn+0x25a>
    1892:	8e c0       	rjmp	.+284    	; 0x19b0 <LED_voidLedOn+0x246>
    1894:	2a 81       	ldd	r18, Y+2	; 0x02
    1896:	3b 81       	ldd	r19, Y+3	; 0x03
    1898:	25 31       	cpi	r18, 0x15	; 21
    189a:	31 05       	cpc	r19, r1
    189c:	09 f4       	brne	.+2      	; 0x18a0 <LED_voidLedOn+0x136>
    189e:	a1 c0       	rjmp	.+322    	; 0x19e2 <LED_voidLedOn+0x278>
    18a0:	8a 81       	ldd	r24, Y+2	; 0x02
    18a2:	9b 81       	ldd	r25, Y+3	; 0x03
    18a4:	86 31       	cpi	r24, 0x16	; 22
    18a6:	91 05       	cpc	r25, r1
    18a8:	0c f0       	brlt	.+2      	; 0x18ac <LED_voidLedOn+0x142>
    18aa:	a0 c0       	rjmp	.+320    	; 0x19ec <LED_voidLedOn+0x282>
    18ac:	95 c0       	rjmp	.+298    	; 0x19d8 <LED_voidLedOn+0x26e>
    18ae:	2a 81       	ldd	r18, Y+2	; 0x02
    18b0:	3b 81       	ldd	r19, Y+3	; 0x03
    18b2:	2b 31       	cpi	r18, 0x1B	; 27
    18b4:	31 05       	cpc	r19, r1
    18b6:	09 f4       	brne	.+2      	; 0x18ba <LED_voidLedOn+0x150>
    18b8:	b2 c0       	rjmp	.+356    	; 0x1a1e <LED_voidLedOn+0x2b4>
    18ba:	8a 81       	ldd	r24, Y+2	; 0x02
    18bc:	9b 81       	ldd	r25, Y+3	; 0x03
    18be:	8c 31       	cpi	r24, 0x1C	; 28
    18c0:	91 05       	cpc	r25, r1
    18c2:	6c f4       	brge	.+26     	; 0x18de <LED_voidLedOn+0x174>
    18c4:	2a 81       	ldd	r18, Y+2	; 0x02
    18c6:	3b 81       	ldd	r19, Y+3	; 0x03
    18c8:	29 31       	cpi	r18, 0x19	; 25
    18ca:	31 05       	cpc	r19, r1
    18cc:	09 f4       	brne	.+2      	; 0x18d0 <LED_voidLedOn+0x166>
    18ce:	9d c0       	rjmp	.+314    	; 0x1a0a <LED_voidLedOn+0x2a0>
    18d0:	8a 81       	ldd	r24, Y+2	; 0x02
    18d2:	9b 81       	ldd	r25, Y+3	; 0x03
    18d4:	8a 31       	cpi	r24, 0x1A	; 26
    18d6:	91 05       	cpc	r25, r1
    18d8:	0c f0       	brlt	.+2      	; 0x18dc <LED_voidLedOn+0x172>
    18da:	9c c0       	rjmp	.+312    	; 0x1a14 <LED_voidLedOn+0x2aa>
    18dc:	91 c0       	rjmp	.+290    	; 0x1a00 <LED_voidLedOn+0x296>
    18de:	2a 81       	ldd	r18, Y+2	; 0x02
    18e0:	3b 81       	ldd	r19, Y+3	; 0x03
    18e2:	2d 31       	cpi	r18, 0x1D	; 29
    18e4:	31 05       	cpc	r19, r1
    18e6:	09 f4       	brne	.+2      	; 0x18ea <LED_voidLedOn+0x180>
    18e8:	a4 c0       	rjmp	.+328    	; 0x1a32 <LED_voidLedOn+0x2c8>
    18ea:	8a 81       	ldd	r24, Y+2	; 0x02
    18ec:	9b 81       	ldd	r25, Y+3	; 0x03
    18ee:	8d 31       	cpi	r24, 0x1D	; 29
    18f0:	91 05       	cpc	r25, r1
    18f2:	0c f4       	brge	.+2      	; 0x18f6 <LED_voidLedOn+0x18c>
    18f4:	99 c0       	rjmp	.+306    	; 0x1a28 <LED_voidLedOn+0x2be>
    18f6:	2a 81       	ldd	r18, Y+2	; 0x02
    18f8:	3b 81       	ldd	r19, Y+3	; 0x03
    18fa:	2e 31       	cpi	r18, 0x1E	; 30
    18fc:	31 05       	cpc	r19, r1
    18fe:	09 f4       	brne	.+2      	; 0x1902 <LED_voidLedOn+0x198>
    1900:	9d c0       	rjmp	.+314    	; 0x1a3c <LED_voidLedOn+0x2d2>
    1902:	8a 81       	ldd	r24, Y+2	; 0x02
    1904:	9b 81       	ldd	r25, Y+3	; 0x03
    1906:	8f 31       	cpi	r24, 0x1F	; 31
    1908:	91 05       	cpc	r25, r1
    190a:	09 f4       	brne	.+2      	; 0x190e <LED_voidLedOn+0x1a4>
    190c:	9c c0       	rjmp	.+312    	; 0x1a46 <LED_voidLedOn+0x2dc>
    190e:	9f c0       	rjmp	.+318    	; 0x1a4e <LED_voidLedOn+0x2e4>
    {
    case LED0:
#if (LED0_CONN)
    {
        DIO_voidSetPin(LED0_PIN, HIGH);
    1910:	80 e1       	ldi	r24, 0x10	; 16
    1912:	61 e0       	ldi	r22, 0x01	; 1
    1914:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1918:	9a c0       	rjmp	.+308    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED1:
#if (LED1_CONN)
    {
        DIO_voidSetPin(LED1_PIN, HIGH);
    191a:	81 e1       	ldi	r24, 0x11	; 17
    191c:	61 e0       	ldi	r22, 0x01	; 1
    191e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1922:	95 c0       	rjmp	.+298    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED2:
#if (LED2_CONN)
    {
        DIO_voidSetPin(LED2_PIN, HIGH);
    1924:	82 e1       	ldi	r24, 0x12	; 18
    1926:	61 e0       	ldi	r22, 0x01	; 1
    1928:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    192c:	90 c0       	rjmp	.+288    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED3:
#if (LED3_CONN)
    {
        DIO_voidSetPin(LED3_PIN, HIGH);
    192e:	83 e1       	ldi	r24, 0x13	; 19
    1930:	61 e0       	ldi	r22, 0x01	; 1
    1932:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1936:	8b c0       	rjmp	.+278    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED4:
#if (LED4_CONN)
    {
        DIO_voidSetPin(LED4_PIN, HIGH);
    1938:	84 e1       	ldi	r24, 0x14	; 20
    193a:	61 e0       	ldi	r22, 0x01	; 1
    193c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1940:	86 c0       	rjmp	.+268    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED5:
#if (LED5_CONN)
    {
        DIO_voidSetPin(LED5_PIN, HIGH);
    1942:	85 e1       	ldi	r24, 0x15	; 21
    1944:	61 e0       	ldi	r22, 0x01	; 1
    1946:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    194a:	81 c0       	rjmp	.+258    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED6:
#if (LED6_CONN)
    {
        DIO_voidSetPin(LED6_PIN, HIGH);
    194c:	80 e1       	ldi	r24, 0x10	; 16
    194e:	61 e0       	ldi	r22, 0x01	; 1
    1950:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1954:	7c c0       	rjmp	.+248    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED7:
#if (LED7_CONN)
    {
        DIO_voidSetPin(LED7_PIN, HIGH);
    1956:	80 e1       	ldi	r24, 0x10	; 16
    1958:	61 e0       	ldi	r22, 0x01	; 1
    195a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    195e:	77 c0       	rjmp	.+238    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED8:
#if (LED8_CONN)
    {
        DIO_voidSetPin(LED8_PIN, HIGH);
    1960:	80 e1       	ldi	r24, 0x10	; 16
    1962:	61 e0       	ldi	r22, 0x01	; 1
    1964:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1968:	72 c0       	rjmp	.+228    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED9:
#if (LED9_CONN)
    {
        DIO_voidSetPin(LED9_PIN, HIGH);
    196a:	80 e1       	ldi	r24, 0x10	; 16
    196c:	61 e0       	ldi	r22, 0x01	; 1
    196e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1972:	6d c0       	rjmp	.+218    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED10:
#if (LED10_CONN)
    {
        DIO_voidSetPin(LED10_PIN, HIGH);
    1974:	80 e1       	ldi	r24, 0x10	; 16
    1976:	61 e0       	ldi	r22, 0x01	; 1
    1978:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    197c:	68 c0       	rjmp	.+208    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED11:
#if (LED11_CONN)
    {
        DIO_voidSetPin(LED11_PIN, HIGH);
    197e:	81 e1       	ldi	r24, 0x11	; 17
    1980:	61 e0       	ldi	r22, 0x01	; 1
    1982:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1986:	63 c0       	rjmp	.+198    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED12:
#if (LED12_CONN)
    {
        DIO_voidSetPin(LED12_PIN, HIGH);
    1988:	82 e1       	ldi	r24, 0x12	; 18
    198a:	61 e0       	ldi	r22, 0x01	; 1
    198c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1990:	5e c0       	rjmp	.+188    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED13:
#if (LED13_CONN)
    {
        DIO_voidSetPin(LED13_PIN, HIGH);
    1992:	80 e1       	ldi	r24, 0x10	; 16
    1994:	61 e0       	ldi	r22, 0x01	; 1
    1996:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    199a:	59 c0       	rjmp	.+178    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED14:
#if (LED14_CONN)
    {
        DIO_voidSetPin(LED14_PIN, HIGH);
    199c:	80 e1       	ldi	r24, 0x10	; 16
    199e:	61 e0       	ldi	r22, 0x01	; 1
    19a0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19a4:	54 c0       	rjmp	.+168    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED15:
#if (LED15_CONN)
    {
        DIO_voidSetPin(LED15_PIN, HIGH);
    19a6:	80 e1       	ldi	r24, 0x10	; 16
    19a8:	61 e0       	ldi	r22, 0x01	; 1
    19aa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19ae:	4f c0       	rjmp	.+158    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED16:
#if (LED16_CONN)
    {
        DIO_voidSetPin(LED16_PIN, HIGH);
    19b0:	80 e1       	ldi	r24, 0x10	; 16
    19b2:	61 e0       	ldi	r22, 0x01	; 1
    19b4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19b8:	4a c0       	rjmp	.+148    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED17:
#if (LED17_CONN)
    {
        DIO_voidSetPin(LED17_PIN, HIGH);
    19ba:	80 e1       	ldi	r24, 0x10	; 16
    19bc:	61 e0       	ldi	r22, 0x01	; 1
    19be:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19c2:	45 c0       	rjmp	.+138    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED18:
#if (LED18_CONN)
    {
        DIO_voidSetPin(LED18_PIN, HIGH);
    19c4:	80 e1       	ldi	r24, 0x10	; 16
    19c6:	61 e0       	ldi	r22, 0x01	; 1
    19c8:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19cc:	40 c0       	rjmp	.+128    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED19:
#if (LED19_CONN)
    {
        DIO_voidSetPin(LED19_PIN, HIGH);
    19ce:	80 e1       	ldi	r24, 0x10	; 16
    19d0:	61 e0       	ldi	r22, 0x01	; 1
    19d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19d6:	3b c0       	rjmp	.+118    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED20:
#if (LED20_CONN)
    {
        DIO_voidSetPin(LED20_PIN, HIGH);
    19d8:	80 e1       	ldi	r24, 0x10	; 16
    19da:	61 e0       	ldi	r22, 0x01	; 1
    19dc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19e0:	36 c0       	rjmp	.+108    	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED21:
#if (LED21_CONN)
    {
        DIO_voidSetPin(LED21_PIN, HIGH);
    19e2:	81 e1       	ldi	r24, 0x11	; 17
    19e4:	61 e0       	ldi	r22, 0x01	; 1
    19e6:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19ea:	31 c0       	rjmp	.+98     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED22:
#if (LED22_CONN)
    {
        DIO_voidSetPin(LED22_PIN, HIGH);
    19ec:	82 e1       	ldi	r24, 0x12	; 18
    19ee:	61 e0       	ldi	r22, 0x01	; 1
    19f0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19f4:	2c c0       	rjmp	.+88     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED23:
#if (LED23_CONN)
    {
        DIO_voidSetPin(LED23_PIN, HIGH);
    19f6:	80 e1       	ldi	r24, 0x10	; 16
    19f8:	61 e0       	ldi	r22, 0x01	; 1
    19fa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    19fe:	27 c0       	rjmp	.+78     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED24:
#if (LED24_CONN)
    {
        DIO_voidSetPin(LED24_PIN, HIGH);
    1a00:	80 e1       	ldi	r24, 0x10	; 16
    1a02:	61 e0       	ldi	r22, 0x01	; 1
    1a04:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1a08:	22 c0       	rjmp	.+68     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED25:
#if (LED25_CONN)
    {
        DIO_voidSetPin(LED25_PIN, HIGH);
    1a0a:	80 e1       	ldi	r24, 0x10	; 16
    1a0c:	61 e0       	ldi	r22, 0x01	; 1
    1a0e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1a12:	1d c0       	rjmp	.+58     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED26:
#if (LED26_CONN)
    {
        DIO_voidSetPin(LED26_PIN, HIGH);
    1a14:	80 e1       	ldi	r24, 0x10	; 16
    1a16:	61 e0       	ldi	r22, 0x01	; 1
    1a18:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1a1c:	18 c0       	rjmp	.+48     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED27:
#if (LED27_CONN)
    {
        DIO_voidSetPin(LED27_PIN, HIGH);
    1a1e:	80 e1       	ldi	r24, 0x10	; 16
    1a20:	61 e0       	ldi	r22, 0x01	; 1
    1a22:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1a26:	13 c0       	rjmp	.+38     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED28:
#if (LED28_CONN)
    {
        DIO_voidSetPin(LED28_PIN, HIGH);
    1a28:	80 e1       	ldi	r24, 0x10	; 16
    1a2a:	61 e0       	ldi	r22, 0x01	; 1
    1a2c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1a30:	0e c0       	rjmp	.+28     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED29:
#if (LED29_CONN)
    {
        DIO_voidSetPin(LED29_PIN, HIGH);
    1a32:	80 e1       	ldi	r24, 0x10	; 16
    1a34:	61 e0       	ldi	r22, 0x01	; 1
    1a36:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1a3a:	09 c0       	rjmp	.+18     	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED30:
#if (LED30_CONN)
    {
        DIO_voidSetPin(LED30_PIN, HIGH);
    1a3c:	80 e1       	ldi	r24, 0x10	; 16
    1a3e:	61 e0       	ldi	r22, 0x01	; 1
    1a40:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1a44:	04 c0       	rjmp	.+8      	; 0x1a4e <LED_voidLedOn+0x2e4>
#endif
    break;
    case LED31:
#if (LED31_CONN)
    {
        DIO_voidSetPin(LED31_PIN, HIGH);
    1a46:	80 e1       	ldi	r24, 0x10	; 16
    1a48:	61 e0       	ldi	r22, 0x01	; 1
    1a4a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    break;

    default:
        break;
    }
}
    1a4e:	0f 90       	pop	r0
    1a50:	0f 90       	pop	r0
    1a52:	0f 90       	pop	r0
    1a54:	cf 91       	pop	r28
    1a56:	df 91       	pop	r29
    1a58:	08 95       	ret

00001a5a <LED_voidLedOff>:
void LED_voidLedOff(u8 led)
{
    1a5a:	df 93       	push	r29
    1a5c:	cf 93       	push	r28
    1a5e:	00 d0       	rcall	.+0      	; 0x1a60 <LED_voidLedOff+0x6>
    1a60:	0f 92       	push	r0
    1a62:	cd b7       	in	r28, 0x3d	; 61
    1a64:	de b7       	in	r29, 0x3e	; 62
    1a66:	89 83       	std	Y+1, r24	; 0x01
    switch (led)
    1a68:	89 81       	ldd	r24, Y+1	; 0x01
    1a6a:	28 2f       	mov	r18, r24
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	3b 83       	std	Y+3, r19	; 0x03
    1a70:	2a 83       	std	Y+2, r18	; 0x02
    1a72:	8a 81       	ldd	r24, Y+2	; 0x02
    1a74:	9b 81       	ldd	r25, Y+3	; 0x03
    1a76:	8f 30       	cpi	r24, 0x0F	; 15
    1a78:	91 05       	cpc	r25, r1
    1a7a:	09 f4       	brne	.+2      	; 0x1a7e <LED_voidLedOff+0x24>
    1a7c:	0c c1       	rjmp	.+536    	; 0x1c96 <LED_voidLedOff+0x23c>
    1a7e:	2a 81       	ldd	r18, Y+2	; 0x02
    1a80:	3b 81       	ldd	r19, Y+3	; 0x03
    1a82:	20 31       	cpi	r18, 0x10	; 16
    1a84:	31 05       	cpc	r19, r1
    1a86:	0c f0       	brlt	.+2      	; 0x1a8a <LED_voidLedOff+0x30>
    1a88:	5a c0       	rjmp	.+180    	; 0x1b3e <LED_voidLedOff+0xe4>
    1a8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a8c:	9b 81       	ldd	r25, Y+3	; 0x03
    1a8e:	87 30       	cpi	r24, 0x07	; 7
    1a90:	91 05       	cpc	r25, r1
    1a92:	09 f4       	brne	.+2      	; 0x1a96 <LED_voidLedOff+0x3c>
    1a94:	d8 c0       	rjmp	.+432    	; 0x1c46 <LED_voidLedOff+0x1ec>
    1a96:	2a 81       	ldd	r18, Y+2	; 0x02
    1a98:	3b 81       	ldd	r19, Y+3	; 0x03
    1a9a:	28 30       	cpi	r18, 0x08	; 8
    1a9c:	31 05       	cpc	r19, r1
    1a9e:	54 f5       	brge	.+84     	; 0x1af4 <LED_voidLedOff+0x9a>
    1aa0:	8a 81       	ldd	r24, Y+2	; 0x02
    1aa2:	9b 81       	ldd	r25, Y+3	; 0x03
    1aa4:	83 30       	cpi	r24, 0x03	; 3
    1aa6:	91 05       	cpc	r25, r1
    1aa8:	09 f4       	brne	.+2      	; 0x1aac <LED_voidLedOff+0x52>
    1aaa:	b9 c0       	rjmp	.+370    	; 0x1c1e <LED_voidLedOff+0x1c4>
    1aac:	2a 81       	ldd	r18, Y+2	; 0x02
    1aae:	3b 81       	ldd	r19, Y+3	; 0x03
    1ab0:	24 30       	cpi	r18, 0x04	; 4
    1ab2:	31 05       	cpc	r19, r1
    1ab4:	94 f4       	brge	.+36     	; 0x1ada <LED_voidLedOff+0x80>
    1ab6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab8:	9b 81       	ldd	r25, Y+3	; 0x03
    1aba:	81 30       	cpi	r24, 0x01	; 1
    1abc:	91 05       	cpc	r25, r1
    1abe:	09 f4       	brne	.+2      	; 0x1ac2 <LED_voidLedOff+0x68>
    1ac0:	a4 c0       	rjmp	.+328    	; 0x1c0a <LED_voidLedOff+0x1b0>
    1ac2:	2a 81       	ldd	r18, Y+2	; 0x02
    1ac4:	3b 81       	ldd	r19, Y+3	; 0x03
    1ac6:	22 30       	cpi	r18, 0x02	; 2
    1ac8:	31 05       	cpc	r19, r1
    1aca:	0c f0       	brlt	.+2      	; 0x1ace <LED_voidLedOff+0x74>
    1acc:	a3 c0       	rjmp	.+326    	; 0x1c14 <LED_voidLedOff+0x1ba>
    1ace:	8a 81       	ldd	r24, Y+2	; 0x02
    1ad0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ad2:	00 97       	sbiw	r24, 0x00	; 0
    1ad4:	09 f4       	brne	.+2      	; 0x1ad8 <LED_voidLedOff+0x7e>
    1ad6:	94 c0       	rjmp	.+296    	; 0x1c00 <LED_voidLedOff+0x1a6>
    1ad8:	32 c1       	rjmp	.+612    	; 0x1d3e <LED_voidLedOff+0x2e4>
    1ada:	2a 81       	ldd	r18, Y+2	; 0x02
    1adc:	3b 81       	ldd	r19, Y+3	; 0x03
    1ade:	25 30       	cpi	r18, 0x05	; 5
    1ae0:	31 05       	cpc	r19, r1
    1ae2:	09 f4       	brne	.+2      	; 0x1ae6 <LED_voidLedOff+0x8c>
    1ae4:	a6 c0       	rjmp	.+332    	; 0x1c32 <LED_voidLedOff+0x1d8>
    1ae6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae8:	9b 81       	ldd	r25, Y+3	; 0x03
    1aea:	86 30       	cpi	r24, 0x06	; 6
    1aec:	91 05       	cpc	r25, r1
    1aee:	0c f0       	brlt	.+2      	; 0x1af2 <LED_voidLedOff+0x98>
    1af0:	a5 c0       	rjmp	.+330    	; 0x1c3c <LED_voidLedOff+0x1e2>
    1af2:	9a c0       	rjmp	.+308    	; 0x1c28 <LED_voidLedOff+0x1ce>
    1af4:	2a 81       	ldd	r18, Y+2	; 0x02
    1af6:	3b 81       	ldd	r19, Y+3	; 0x03
    1af8:	2b 30       	cpi	r18, 0x0B	; 11
    1afa:	31 05       	cpc	r19, r1
    1afc:	09 f4       	brne	.+2      	; 0x1b00 <LED_voidLedOff+0xa6>
    1afe:	b7 c0       	rjmp	.+366    	; 0x1c6e <LED_voidLedOff+0x214>
    1b00:	8a 81       	ldd	r24, Y+2	; 0x02
    1b02:	9b 81       	ldd	r25, Y+3	; 0x03
    1b04:	8c 30       	cpi	r24, 0x0C	; 12
    1b06:	91 05       	cpc	r25, r1
    1b08:	6c f4       	brge	.+26     	; 0x1b24 <LED_voidLedOff+0xca>
    1b0a:	2a 81       	ldd	r18, Y+2	; 0x02
    1b0c:	3b 81       	ldd	r19, Y+3	; 0x03
    1b0e:	29 30       	cpi	r18, 0x09	; 9
    1b10:	31 05       	cpc	r19, r1
    1b12:	09 f4       	brne	.+2      	; 0x1b16 <LED_voidLedOff+0xbc>
    1b14:	a2 c0       	rjmp	.+324    	; 0x1c5a <LED_voidLedOff+0x200>
    1b16:	8a 81       	ldd	r24, Y+2	; 0x02
    1b18:	9b 81       	ldd	r25, Y+3	; 0x03
    1b1a:	8a 30       	cpi	r24, 0x0A	; 10
    1b1c:	91 05       	cpc	r25, r1
    1b1e:	0c f0       	brlt	.+2      	; 0x1b22 <LED_voidLedOff+0xc8>
    1b20:	a1 c0       	rjmp	.+322    	; 0x1c64 <LED_voidLedOff+0x20a>
    1b22:	96 c0       	rjmp	.+300    	; 0x1c50 <LED_voidLedOff+0x1f6>
    1b24:	2a 81       	ldd	r18, Y+2	; 0x02
    1b26:	3b 81       	ldd	r19, Y+3	; 0x03
    1b28:	2d 30       	cpi	r18, 0x0D	; 13
    1b2a:	31 05       	cpc	r19, r1
    1b2c:	09 f4       	brne	.+2      	; 0x1b30 <LED_voidLedOff+0xd6>
    1b2e:	a9 c0       	rjmp	.+338    	; 0x1c82 <LED_voidLedOff+0x228>
    1b30:	8a 81       	ldd	r24, Y+2	; 0x02
    1b32:	9b 81       	ldd	r25, Y+3	; 0x03
    1b34:	8e 30       	cpi	r24, 0x0E	; 14
    1b36:	91 05       	cpc	r25, r1
    1b38:	0c f0       	brlt	.+2      	; 0x1b3c <LED_voidLedOff+0xe2>
    1b3a:	a8 c0       	rjmp	.+336    	; 0x1c8c <LED_voidLedOff+0x232>
    1b3c:	9d c0       	rjmp	.+314    	; 0x1c78 <LED_voidLedOff+0x21e>
    1b3e:	2a 81       	ldd	r18, Y+2	; 0x02
    1b40:	3b 81       	ldd	r19, Y+3	; 0x03
    1b42:	27 31       	cpi	r18, 0x17	; 23
    1b44:	31 05       	cpc	r19, r1
    1b46:	09 f4       	brne	.+2      	; 0x1b4a <LED_voidLedOff+0xf0>
    1b48:	ce c0       	rjmp	.+412    	; 0x1ce6 <LED_voidLedOff+0x28c>
    1b4a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b4c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b4e:	88 31       	cpi	r24, 0x18	; 24
    1b50:	91 05       	cpc	r25, r1
    1b52:	2c f5       	brge	.+74     	; 0x1b9e <LED_voidLedOff+0x144>
    1b54:	2a 81       	ldd	r18, Y+2	; 0x02
    1b56:	3b 81       	ldd	r19, Y+3	; 0x03
    1b58:	23 31       	cpi	r18, 0x13	; 19
    1b5a:	31 05       	cpc	r19, r1
    1b5c:	09 f4       	brne	.+2      	; 0x1b60 <LED_voidLedOff+0x106>
    1b5e:	af c0       	rjmp	.+350    	; 0x1cbe <LED_voidLedOff+0x264>
    1b60:	8a 81       	ldd	r24, Y+2	; 0x02
    1b62:	9b 81       	ldd	r25, Y+3	; 0x03
    1b64:	84 31       	cpi	r24, 0x14	; 20
    1b66:	91 05       	cpc	r25, r1
    1b68:	6c f4       	brge	.+26     	; 0x1b84 <LED_voidLedOff+0x12a>
    1b6a:	2a 81       	ldd	r18, Y+2	; 0x02
    1b6c:	3b 81       	ldd	r19, Y+3	; 0x03
    1b6e:	21 31       	cpi	r18, 0x11	; 17
    1b70:	31 05       	cpc	r19, r1
    1b72:	09 f4       	brne	.+2      	; 0x1b76 <LED_voidLedOff+0x11c>
    1b74:	9a c0       	rjmp	.+308    	; 0x1caa <LED_voidLedOff+0x250>
    1b76:	8a 81       	ldd	r24, Y+2	; 0x02
    1b78:	9b 81       	ldd	r25, Y+3	; 0x03
    1b7a:	82 31       	cpi	r24, 0x12	; 18
    1b7c:	91 05       	cpc	r25, r1
    1b7e:	0c f0       	brlt	.+2      	; 0x1b82 <LED_voidLedOff+0x128>
    1b80:	99 c0       	rjmp	.+306    	; 0x1cb4 <LED_voidLedOff+0x25a>
    1b82:	8e c0       	rjmp	.+284    	; 0x1ca0 <LED_voidLedOff+0x246>
    1b84:	2a 81       	ldd	r18, Y+2	; 0x02
    1b86:	3b 81       	ldd	r19, Y+3	; 0x03
    1b88:	25 31       	cpi	r18, 0x15	; 21
    1b8a:	31 05       	cpc	r19, r1
    1b8c:	09 f4       	brne	.+2      	; 0x1b90 <LED_voidLedOff+0x136>
    1b8e:	a1 c0       	rjmp	.+322    	; 0x1cd2 <LED_voidLedOff+0x278>
    1b90:	8a 81       	ldd	r24, Y+2	; 0x02
    1b92:	9b 81       	ldd	r25, Y+3	; 0x03
    1b94:	86 31       	cpi	r24, 0x16	; 22
    1b96:	91 05       	cpc	r25, r1
    1b98:	0c f0       	brlt	.+2      	; 0x1b9c <LED_voidLedOff+0x142>
    1b9a:	a0 c0       	rjmp	.+320    	; 0x1cdc <LED_voidLedOff+0x282>
    1b9c:	95 c0       	rjmp	.+298    	; 0x1cc8 <LED_voidLedOff+0x26e>
    1b9e:	2a 81       	ldd	r18, Y+2	; 0x02
    1ba0:	3b 81       	ldd	r19, Y+3	; 0x03
    1ba2:	2b 31       	cpi	r18, 0x1B	; 27
    1ba4:	31 05       	cpc	r19, r1
    1ba6:	09 f4       	brne	.+2      	; 0x1baa <LED_voidLedOff+0x150>
    1ba8:	b2 c0       	rjmp	.+356    	; 0x1d0e <LED_voidLedOff+0x2b4>
    1baa:	8a 81       	ldd	r24, Y+2	; 0x02
    1bac:	9b 81       	ldd	r25, Y+3	; 0x03
    1bae:	8c 31       	cpi	r24, 0x1C	; 28
    1bb0:	91 05       	cpc	r25, r1
    1bb2:	6c f4       	brge	.+26     	; 0x1bce <LED_voidLedOff+0x174>
    1bb4:	2a 81       	ldd	r18, Y+2	; 0x02
    1bb6:	3b 81       	ldd	r19, Y+3	; 0x03
    1bb8:	29 31       	cpi	r18, 0x19	; 25
    1bba:	31 05       	cpc	r19, r1
    1bbc:	09 f4       	brne	.+2      	; 0x1bc0 <LED_voidLedOff+0x166>
    1bbe:	9d c0       	rjmp	.+314    	; 0x1cfa <LED_voidLedOff+0x2a0>
    1bc0:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc2:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc4:	8a 31       	cpi	r24, 0x1A	; 26
    1bc6:	91 05       	cpc	r25, r1
    1bc8:	0c f0       	brlt	.+2      	; 0x1bcc <LED_voidLedOff+0x172>
    1bca:	9c c0       	rjmp	.+312    	; 0x1d04 <LED_voidLedOff+0x2aa>
    1bcc:	91 c0       	rjmp	.+290    	; 0x1cf0 <LED_voidLedOff+0x296>
    1bce:	2a 81       	ldd	r18, Y+2	; 0x02
    1bd0:	3b 81       	ldd	r19, Y+3	; 0x03
    1bd2:	2d 31       	cpi	r18, 0x1D	; 29
    1bd4:	31 05       	cpc	r19, r1
    1bd6:	09 f4       	brne	.+2      	; 0x1bda <LED_voidLedOff+0x180>
    1bd8:	a4 c0       	rjmp	.+328    	; 0x1d22 <LED_voidLedOff+0x2c8>
    1bda:	8a 81       	ldd	r24, Y+2	; 0x02
    1bdc:	9b 81       	ldd	r25, Y+3	; 0x03
    1bde:	8d 31       	cpi	r24, 0x1D	; 29
    1be0:	91 05       	cpc	r25, r1
    1be2:	0c f4       	brge	.+2      	; 0x1be6 <LED_voidLedOff+0x18c>
    1be4:	99 c0       	rjmp	.+306    	; 0x1d18 <LED_voidLedOff+0x2be>
    1be6:	2a 81       	ldd	r18, Y+2	; 0x02
    1be8:	3b 81       	ldd	r19, Y+3	; 0x03
    1bea:	2e 31       	cpi	r18, 0x1E	; 30
    1bec:	31 05       	cpc	r19, r1
    1bee:	09 f4       	brne	.+2      	; 0x1bf2 <LED_voidLedOff+0x198>
    1bf0:	9d c0       	rjmp	.+314    	; 0x1d2c <LED_voidLedOff+0x2d2>
    1bf2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf4:	9b 81       	ldd	r25, Y+3	; 0x03
    1bf6:	8f 31       	cpi	r24, 0x1F	; 31
    1bf8:	91 05       	cpc	r25, r1
    1bfa:	09 f4       	brne	.+2      	; 0x1bfe <LED_voidLedOff+0x1a4>
    1bfc:	9c c0       	rjmp	.+312    	; 0x1d36 <LED_voidLedOff+0x2dc>
    1bfe:	9f c0       	rjmp	.+318    	; 0x1d3e <LED_voidLedOff+0x2e4>
    {
    case LED0:
#if (LED0_CONN)
    {
        DIO_voidSetPin(LED0_PIN, LOW);
    1c00:	80 e1       	ldi	r24, 0x10	; 16
    1c02:	60 e0       	ldi	r22, 0x00	; 0
    1c04:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c08:	9a c0       	rjmp	.+308    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED1:
#if (LED1_CONN)
    {
        DIO_voidSetPin(LED1_PIN, LOW);
    1c0a:	81 e1       	ldi	r24, 0x11	; 17
    1c0c:	60 e0       	ldi	r22, 0x00	; 0
    1c0e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c12:	95 c0       	rjmp	.+298    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED2:
#if (LED2_CONN)
    {
        DIO_voidSetPin(LED2_PIN, LOW);
    1c14:	82 e1       	ldi	r24, 0x12	; 18
    1c16:	60 e0       	ldi	r22, 0x00	; 0
    1c18:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c1c:	90 c0       	rjmp	.+288    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED3:
#if (LED3_CONN)
    {
        DIO_voidSetPin(LED3_PIN, LOW);
    1c1e:	83 e1       	ldi	r24, 0x13	; 19
    1c20:	60 e0       	ldi	r22, 0x00	; 0
    1c22:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c26:	8b c0       	rjmp	.+278    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED4:
#if (LED4_CONN)
    {
        DIO_voidSetPin(LED4_PIN, LOW);
    1c28:	84 e1       	ldi	r24, 0x14	; 20
    1c2a:	60 e0       	ldi	r22, 0x00	; 0
    1c2c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c30:	86 c0       	rjmp	.+268    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED5:
#if (LED5_CONN)
    {
        DIO_voidSetPin(LED5_PIN, LOW);
    1c32:	85 e1       	ldi	r24, 0x15	; 21
    1c34:	60 e0       	ldi	r22, 0x00	; 0
    1c36:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c3a:	81 c0       	rjmp	.+258    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED6:
#if (LED6_CONN)
    {
        DIO_voidSetPin(LED6_PIN, LOW);
    1c3c:	80 e1       	ldi	r24, 0x10	; 16
    1c3e:	60 e0       	ldi	r22, 0x00	; 0
    1c40:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c44:	7c c0       	rjmp	.+248    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED7:
#if (LED7_CONN)
    {
        DIO_voidSetPin(LED7_PIN, LOW);
    1c46:	80 e1       	ldi	r24, 0x10	; 16
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c4e:	77 c0       	rjmp	.+238    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED8:
#if (LED8_CONN)
    {
        DIO_voidSetPin(LED8_PIN, LOW);
    1c50:	80 e1       	ldi	r24, 0x10	; 16
    1c52:	60 e0       	ldi	r22, 0x00	; 0
    1c54:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c58:	72 c0       	rjmp	.+228    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED9:
#if (LED9_CONN)
    {
        DIO_voidSetPin(LED9_PIN, LOW);
    1c5a:	80 e1       	ldi	r24, 0x10	; 16
    1c5c:	60 e0       	ldi	r22, 0x00	; 0
    1c5e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c62:	6d c0       	rjmp	.+218    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED10:
#if (LED10_CONN)
    {
        DIO_voidSetPin(LED10_PIN, LOW);
    1c64:	80 e1       	ldi	r24, 0x10	; 16
    1c66:	60 e0       	ldi	r22, 0x00	; 0
    1c68:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c6c:	68 c0       	rjmp	.+208    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED11:
#if (LED11_CONN)
    {
        DIO_voidSetPin(LED11_PIN, LOW);
    1c6e:	81 e1       	ldi	r24, 0x11	; 17
    1c70:	60 e0       	ldi	r22, 0x00	; 0
    1c72:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c76:	63 c0       	rjmp	.+198    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED12:
#if (LED12_CONN)
    {
        DIO_voidSetPin(LED12_PIN, LOW);
    1c78:	82 e1       	ldi	r24, 0x12	; 18
    1c7a:	60 e0       	ldi	r22, 0x00	; 0
    1c7c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c80:	5e c0       	rjmp	.+188    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED13:
#if (LED13_CONN)
    {
        DIO_voidSetPin(LED13_PIN, LOW);
    1c82:	80 e1       	ldi	r24, 0x10	; 16
    1c84:	60 e0       	ldi	r22, 0x00	; 0
    1c86:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c8a:	59 c0       	rjmp	.+178    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED14:
#if (LED14_CONN)
    {
        DIO_voidSetPin(LED14_PIN, LOW);
    1c8c:	80 e1       	ldi	r24, 0x10	; 16
    1c8e:	60 e0       	ldi	r22, 0x00	; 0
    1c90:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c94:	54 c0       	rjmp	.+168    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED15:
#if (LED15_CONN)
    {
        DIO_voidSetPin(LED15_PIN, LOW);
    1c96:	80 e1       	ldi	r24, 0x10	; 16
    1c98:	60 e0       	ldi	r22, 0x00	; 0
    1c9a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1c9e:	4f c0       	rjmp	.+158    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED16:
#if (LED16_CONN)
    {
        DIO_voidSetPin(LED16_PIN, LOW);
    1ca0:	80 e1       	ldi	r24, 0x10	; 16
    1ca2:	60 e0       	ldi	r22, 0x00	; 0
    1ca4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1ca8:	4a c0       	rjmp	.+148    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED17:
#if (LED17_CONN)
    {
        DIO_voidSetPin(LED17_PIN, LOW);
    1caa:	80 e1       	ldi	r24, 0x10	; 16
    1cac:	60 e0       	ldi	r22, 0x00	; 0
    1cae:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1cb2:	45 c0       	rjmp	.+138    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED18:
#if (LED18_CONN)
    {
        DIO_voidSetPin(LED18_PIN, LOW);
    1cb4:	80 e1       	ldi	r24, 0x10	; 16
    1cb6:	60 e0       	ldi	r22, 0x00	; 0
    1cb8:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1cbc:	40 c0       	rjmp	.+128    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED19:
#if (LED19_CONN)
    {
        DIO_voidSetPin(LED19_PIN, LOW);
    1cbe:	80 e1       	ldi	r24, 0x10	; 16
    1cc0:	60 e0       	ldi	r22, 0x00	; 0
    1cc2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1cc6:	3b c0       	rjmp	.+118    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED20:
#if (LED20_CONN)
    {
        DIO_voidSetPin(LED20_PIN, LOW);
    1cc8:	80 e1       	ldi	r24, 0x10	; 16
    1cca:	60 e0       	ldi	r22, 0x00	; 0
    1ccc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1cd0:	36 c0       	rjmp	.+108    	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED21:
#if (LED21_CONN)
    {
        DIO_voidSetPin(LED21_PIN, LOW);
    1cd2:	81 e1       	ldi	r24, 0x11	; 17
    1cd4:	60 e0       	ldi	r22, 0x00	; 0
    1cd6:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1cda:	31 c0       	rjmp	.+98     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED22:
#if (LED22_CONN)
    {
        DIO_voidSetPin(LED22_PIN, LOW);
    1cdc:	82 e1       	ldi	r24, 0x12	; 18
    1cde:	60 e0       	ldi	r22, 0x00	; 0
    1ce0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1ce4:	2c c0       	rjmp	.+88     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED23:
#if (LED23_CONN)
    {
        DIO_voidSetPin(LED23_PIN, LOW);
    1ce6:	80 e1       	ldi	r24, 0x10	; 16
    1ce8:	60 e0       	ldi	r22, 0x00	; 0
    1cea:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1cee:	27 c0       	rjmp	.+78     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED24:
#if (LED24_CONN)
    {
        DIO_voidSetPin(LED24_PIN, LOW);
    1cf0:	80 e1       	ldi	r24, 0x10	; 16
    1cf2:	60 e0       	ldi	r22, 0x00	; 0
    1cf4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1cf8:	22 c0       	rjmp	.+68     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED25:
#if (LED25_CONN)
    {
        DIO_voidSetPin(LED25_PIN, LOW);
    1cfa:	80 e1       	ldi	r24, 0x10	; 16
    1cfc:	60 e0       	ldi	r22, 0x00	; 0
    1cfe:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1d02:	1d c0       	rjmp	.+58     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED26:
#if (LED26_CONN)
    {
        DIO_voidSetPin(LED26_PIN, LOW);
    1d04:	80 e1       	ldi	r24, 0x10	; 16
    1d06:	60 e0       	ldi	r22, 0x00	; 0
    1d08:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1d0c:	18 c0       	rjmp	.+48     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED27:
#if (LED27_CONN)
    {
        DIO_voidSetPin(LED27_PIN, LOW);
    1d0e:	80 e1       	ldi	r24, 0x10	; 16
    1d10:	60 e0       	ldi	r22, 0x00	; 0
    1d12:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1d16:	13 c0       	rjmp	.+38     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED28:
#if (LED28_CONN)
    {
        DIO_voidSetPin(LED28_PIN, LOW);
    1d18:	80 e1       	ldi	r24, 0x10	; 16
    1d1a:	60 e0       	ldi	r22, 0x00	; 0
    1d1c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1d20:	0e c0       	rjmp	.+28     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED29:
#if (LED29_CONN)
    {
        DIO_voidSetPin(LED29_PIN, LOW);
    1d22:	80 e1       	ldi	r24, 0x10	; 16
    1d24:	60 e0       	ldi	r22, 0x00	; 0
    1d26:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1d2a:	09 c0       	rjmp	.+18     	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED30:
#if (LED30_CONN)
    {
        DIO_voidSetPin(LED30_PIN, LOW);
    1d2c:	80 e1       	ldi	r24, 0x10	; 16
    1d2e:	60 e0       	ldi	r22, 0x00	; 0
    1d30:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    1d34:	04 c0       	rjmp	.+8      	; 0x1d3e <LED_voidLedOff+0x2e4>
#endif
    break;
    case LED31:
#if (LED31_CONN)
    {
        DIO_voidSetPin(LED31_PIN, LOW);
    1d36:	80 e1       	ldi	r24, 0x10	; 16
    1d38:	60 e0       	ldi	r22, 0x00	; 0
    1d3a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    break;

    default:
        break;
    }
}
    1d3e:	0f 90       	pop	r0
    1d40:	0f 90       	pop	r0
    1d42:	0f 90       	pop	r0
    1d44:	cf 91       	pop	r28
    1d46:	df 91       	pop	r29
    1d48:	08 95       	ret

00001d4a <LED_voidLedTog>:
void LED_voidLedTog(u8 led)
{
    1d4a:	df 93       	push	r29
    1d4c:	cf 93       	push	r28
    1d4e:	00 d0       	rcall	.+0      	; 0x1d50 <LED_voidLedTog+0x6>
    1d50:	0f 92       	push	r0
    1d52:	cd b7       	in	r28, 0x3d	; 61
    1d54:	de b7       	in	r29, 0x3e	; 62
    1d56:	89 83       	std	Y+1, r24	; 0x01
    switch (led)
    1d58:	89 81       	ldd	r24, Y+1	; 0x01
    1d5a:	28 2f       	mov	r18, r24
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	3b 83       	std	Y+3, r19	; 0x03
    1d60:	2a 83       	std	Y+2, r18	; 0x02
    1d62:	8a 81       	ldd	r24, Y+2	; 0x02
    1d64:	9b 81       	ldd	r25, Y+3	; 0x03
    1d66:	8f 30       	cpi	r24, 0x0F	; 15
    1d68:	91 05       	cpc	r25, r1
    1d6a:	09 f4       	brne	.+2      	; 0x1d6e <LED_voidLedTog+0x24>
    1d6c:	fd c0       	rjmp	.+506    	; 0x1f68 <LED_voidLedTog+0x21e>
    1d6e:	2a 81       	ldd	r18, Y+2	; 0x02
    1d70:	3b 81       	ldd	r19, Y+3	; 0x03
    1d72:	20 31       	cpi	r18, 0x10	; 16
    1d74:	31 05       	cpc	r19, r1
    1d76:	0c f0       	brlt	.+2      	; 0x1d7a <LED_voidLedTog+0x30>
    1d78:	5a c0       	rjmp	.+180    	; 0x1e2e <LED_voidLedTog+0xe4>
    1d7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d7c:	9b 81       	ldd	r25, Y+3	; 0x03
    1d7e:	87 30       	cpi	r24, 0x07	; 7
    1d80:	91 05       	cpc	r25, r1
    1d82:	09 f4       	brne	.+2      	; 0x1d86 <LED_voidLedTog+0x3c>
    1d84:	d1 c0       	rjmp	.+418    	; 0x1f28 <LED_voidLedTog+0x1de>
    1d86:	2a 81       	ldd	r18, Y+2	; 0x02
    1d88:	3b 81       	ldd	r19, Y+3	; 0x03
    1d8a:	28 30       	cpi	r18, 0x08	; 8
    1d8c:	31 05       	cpc	r19, r1
    1d8e:	54 f5       	brge	.+84     	; 0x1de4 <LED_voidLedTog+0x9a>
    1d90:	8a 81       	ldd	r24, Y+2	; 0x02
    1d92:	9b 81       	ldd	r25, Y+3	; 0x03
    1d94:	83 30       	cpi	r24, 0x03	; 3
    1d96:	91 05       	cpc	r25, r1
    1d98:	09 f4       	brne	.+2      	; 0x1d9c <LED_voidLedTog+0x52>
    1d9a:	b6 c0       	rjmp	.+364    	; 0x1f08 <LED_voidLedTog+0x1be>
    1d9c:	2a 81       	ldd	r18, Y+2	; 0x02
    1d9e:	3b 81       	ldd	r19, Y+3	; 0x03
    1da0:	24 30       	cpi	r18, 0x04	; 4
    1da2:	31 05       	cpc	r19, r1
    1da4:	94 f4       	brge	.+36     	; 0x1dca <LED_voidLedTog+0x80>
    1da6:	8a 81       	ldd	r24, Y+2	; 0x02
    1da8:	9b 81       	ldd	r25, Y+3	; 0x03
    1daa:	81 30       	cpi	r24, 0x01	; 1
    1dac:	91 05       	cpc	r25, r1
    1dae:	09 f4       	brne	.+2      	; 0x1db2 <LED_voidLedTog+0x68>
    1db0:	a3 c0       	rjmp	.+326    	; 0x1ef8 <LED_voidLedTog+0x1ae>
    1db2:	2a 81       	ldd	r18, Y+2	; 0x02
    1db4:	3b 81       	ldd	r19, Y+3	; 0x03
    1db6:	22 30       	cpi	r18, 0x02	; 2
    1db8:	31 05       	cpc	r19, r1
    1dba:	0c f0       	brlt	.+2      	; 0x1dbe <LED_voidLedTog+0x74>
    1dbc:	a1 c0       	rjmp	.+322    	; 0x1f00 <LED_voidLedTog+0x1b6>
    1dbe:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc0:	9b 81       	ldd	r25, Y+3	; 0x03
    1dc2:	00 97       	sbiw	r24, 0x00	; 0
    1dc4:	09 f4       	brne	.+2      	; 0x1dc8 <LED_voidLedTog+0x7e>
    1dc6:	94 c0       	rjmp	.+296    	; 0x1ef0 <LED_voidLedTog+0x1a6>
    1dc8:	12 c1       	rjmp	.+548    	; 0x1fee <LED_voidLedTog+0x2a4>
    1dca:	2a 81       	ldd	r18, Y+2	; 0x02
    1dcc:	3b 81       	ldd	r19, Y+3	; 0x03
    1dce:	25 30       	cpi	r18, 0x05	; 5
    1dd0:	31 05       	cpc	r19, r1
    1dd2:	09 f4       	brne	.+2      	; 0x1dd6 <LED_voidLedTog+0x8c>
    1dd4:	a1 c0       	rjmp	.+322    	; 0x1f18 <LED_voidLedTog+0x1ce>
    1dd6:	8a 81       	ldd	r24, Y+2	; 0x02
    1dd8:	9b 81       	ldd	r25, Y+3	; 0x03
    1dda:	86 30       	cpi	r24, 0x06	; 6
    1ddc:	91 05       	cpc	r25, r1
    1dde:	0c f0       	brlt	.+2      	; 0x1de2 <LED_voidLedTog+0x98>
    1de0:	9f c0       	rjmp	.+318    	; 0x1f20 <LED_voidLedTog+0x1d6>
    1de2:	96 c0       	rjmp	.+300    	; 0x1f10 <LED_voidLedTog+0x1c6>
    1de4:	2a 81       	ldd	r18, Y+2	; 0x02
    1de6:	3b 81       	ldd	r19, Y+3	; 0x03
    1de8:	2b 30       	cpi	r18, 0x0B	; 11
    1dea:	31 05       	cpc	r19, r1
    1dec:	09 f4       	brne	.+2      	; 0x1df0 <LED_voidLedTog+0xa6>
    1dee:	ac c0       	rjmp	.+344    	; 0x1f48 <LED_voidLedTog+0x1fe>
    1df0:	8a 81       	ldd	r24, Y+2	; 0x02
    1df2:	9b 81       	ldd	r25, Y+3	; 0x03
    1df4:	8c 30       	cpi	r24, 0x0C	; 12
    1df6:	91 05       	cpc	r25, r1
    1df8:	6c f4       	brge	.+26     	; 0x1e14 <LED_voidLedTog+0xca>
    1dfa:	2a 81       	ldd	r18, Y+2	; 0x02
    1dfc:	3b 81       	ldd	r19, Y+3	; 0x03
    1dfe:	29 30       	cpi	r18, 0x09	; 9
    1e00:	31 05       	cpc	r19, r1
    1e02:	09 f4       	brne	.+2      	; 0x1e06 <LED_voidLedTog+0xbc>
    1e04:	99 c0       	rjmp	.+306    	; 0x1f38 <LED_voidLedTog+0x1ee>
    1e06:	8a 81       	ldd	r24, Y+2	; 0x02
    1e08:	9b 81       	ldd	r25, Y+3	; 0x03
    1e0a:	8a 30       	cpi	r24, 0x0A	; 10
    1e0c:	91 05       	cpc	r25, r1
    1e0e:	0c f0       	brlt	.+2      	; 0x1e12 <LED_voidLedTog+0xc8>
    1e10:	97 c0       	rjmp	.+302    	; 0x1f40 <LED_voidLedTog+0x1f6>
    1e12:	8e c0       	rjmp	.+284    	; 0x1f30 <LED_voidLedTog+0x1e6>
    1e14:	2a 81       	ldd	r18, Y+2	; 0x02
    1e16:	3b 81       	ldd	r19, Y+3	; 0x03
    1e18:	2d 30       	cpi	r18, 0x0D	; 13
    1e1a:	31 05       	cpc	r19, r1
    1e1c:	09 f4       	brne	.+2      	; 0x1e20 <LED_voidLedTog+0xd6>
    1e1e:	9c c0       	rjmp	.+312    	; 0x1f58 <LED_voidLedTog+0x20e>
    1e20:	8a 81       	ldd	r24, Y+2	; 0x02
    1e22:	9b 81       	ldd	r25, Y+3	; 0x03
    1e24:	8e 30       	cpi	r24, 0x0E	; 14
    1e26:	91 05       	cpc	r25, r1
    1e28:	0c f0       	brlt	.+2      	; 0x1e2c <LED_voidLedTog+0xe2>
    1e2a:	9a c0       	rjmp	.+308    	; 0x1f60 <LED_voidLedTog+0x216>
    1e2c:	91 c0       	rjmp	.+290    	; 0x1f50 <LED_voidLedTog+0x206>
    1e2e:	2a 81       	ldd	r18, Y+2	; 0x02
    1e30:	3b 81       	ldd	r19, Y+3	; 0x03
    1e32:	27 31       	cpi	r18, 0x17	; 23
    1e34:	31 05       	cpc	r19, r1
    1e36:	09 f4       	brne	.+2      	; 0x1e3a <LED_voidLedTog+0xf0>
    1e38:	b7 c0       	rjmp	.+366    	; 0x1fa8 <LED_voidLedTog+0x25e>
    1e3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e3c:	9b 81       	ldd	r25, Y+3	; 0x03
    1e3e:	88 31       	cpi	r24, 0x18	; 24
    1e40:	91 05       	cpc	r25, r1
    1e42:	2c f5       	brge	.+74     	; 0x1e8e <LED_voidLedTog+0x144>
    1e44:	2a 81       	ldd	r18, Y+2	; 0x02
    1e46:	3b 81       	ldd	r19, Y+3	; 0x03
    1e48:	23 31       	cpi	r18, 0x13	; 19
    1e4a:	31 05       	cpc	r19, r1
    1e4c:	09 f4       	brne	.+2      	; 0x1e50 <LED_voidLedTog+0x106>
    1e4e:	9c c0       	rjmp	.+312    	; 0x1f88 <LED_voidLedTog+0x23e>
    1e50:	8a 81       	ldd	r24, Y+2	; 0x02
    1e52:	9b 81       	ldd	r25, Y+3	; 0x03
    1e54:	84 31       	cpi	r24, 0x14	; 20
    1e56:	91 05       	cpc	r25, r1
    1e58:	6c f4       	brge	.+26     	; 0x1e74 <LED_voidLedTog+0x12a>
    1e5a:	2a 81       	ldd	r18, Y+2	; 0x02
    1e5c:	3b 81       	ldd	r19, Y+3	; 0x03
    1e5e:	21 31       	cpi	r18, 0x11	; 17
    1e60:	31 05       	cpc	r19, r1
    1e62:	09 f4       	brne	.+2      	; 0x1e66 <LED_voidLedTog+0x11c>
    1e64:	89 c0       	rjmp	.+274    	; 0x1f78 <LED_voidLedTog+0x22e>
    1e66:	8a 81       	ldd	r24, Y+2	; 0x02
    1e68:	9b 81       	ldd	r25, Y+3	; 0x03
    1e6a:	82 31       	cpi	r24, 0x12	; 18
    1e6c:	91 05       	cpc	r25, r1
    1e6e:	0c f0       	brlt	.+2      	; 0x1e72 <LED_voidLedTog+0x128>
    1e70:	87 c0       	rjmp	.+270    	; 0x1f80 <LED_voidLedTog+0x236>
    1e72:	7e c0       	rjmp	.+252    	; 0x1f70 <LED_voidLedTog+0x226>
    1e74:	2a 81       	ldd	r18, Y+2	; 0x02
    1e76:	3b 81       	ldd	r19, Y+3	; 0x03
    1e78:	25 31       	cpi	r18, 0x15	; 21
    1e7a:	31 05       	cpc	r19, r1
    1e7c:	09 f4       	brne	.+2      	; 0x1e80 <LED_voidLedTog+0x136>
    1e7e:	8c c0       	rjmp	.+280    	; 0x1f98 <LED_voidLedTog+0x24e>
    1e80:	8a 81       	ldd	r24, Y+2	; 0x02
    1e82:	9b 81       	ldd	r25, Y+3	; 0x03
    1e84:	86 31       	cpi	r24, 0x16	; 22
    1e86:	91 05       	cpc	r25, r1
    1e88:	0c f0       	brlt	.+2      	; 0x1e8c <LED_voidLedTog+0x142>
    1e8a:	8a c0       	rjmp	.+276    	; 0x1fa0 <LED_voidLedTog+0x256>
    1e8c:	81 c0       	rjmp	.+258    	; 0x1f90 <LED_voidLedTog+0x246>
    1e8e:	2a 81       	ldd	r18, Y+2	; 0x02
    1e90:	3b 81       	ldd	r19, Y+3	; 0x03
    1e92:	2b 31       	cpi	r18, 0x1B	; 27
    1e94:	31 05       	cpc	r19, r1
    1e96:	09 f4       	brne	.+2      	; 0x1e9a <LED_voidLedTog+0x150>
    1e98:	97 c0       	rjmp	.+302    	; 0x1fc8 <LED_voidLedTog+0x27e>
    1e9a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e9c:	9b 81       	ldd	r25, Y+3	; 0x03
    1e9e:	8c 31       	cpi	r24, 0x1C	; 28
    1ea0:	91 05       	cpc	r25, r1
    1ea2:	6c f4       	brge	.+26     	; 0x1ebe <LED_voidLedTog+0x174>
    1ea4:	2a 81       	ldd	r18, Y+2	; 0x02
    1ea6:	3b 81       	ldd	r19, Y+3	; 0x03
    1ea8:	29 31       	cpi	r18, 0x19	; 25
    1eaa:	31 05       	cpc	r19, r1
    1eac:	09 f4       	brne	.+2      	; 0x1eb0 <LED_voidLedTog+0x166>
    1eae:	84 c0       	rjmp	.+264    	; 0x1fb8 <LED_voidLedTog+0x26e>
    1eb0:	8a 81       	ldd	r24, Y+2	; 0x02
    1eb2:	9b 81       	ldd	r25, Y+3	; 0x03
    1eb4:	8a 31       	cpi	r24, 0x1A	; 26
    1eb6:	91 05       	cpc	r25, r1
    1eb8:	0c f0       	brlt	.+2      	; 0x1ebc <LED_voidLedTog+0x172>
    1eba:	82 c0       	rjmp	.+260    	; 0x1fc0 <LED_voidLedTog+0x276>
    1ebc:	79 c0       	rjmp	.+242    	; 0x1fb0 <LED_voidLedTog+0x266>
    1ebe:	2a 81       	ldd	r18, Y+2	; 0x02
    1ec0:	3b 81       	ldd	r19, Y+3	; 0x03
    1ec2:	2d 31       	cpi	r18, 0x1D	; 29
    1ec4:	31 05       	cpc	r19, r1
    1ec6:	09 f4       	brne	.+2      	; 0x1eca <LED_voidLedTog+0x180>
    1ec8:	87 c0       	rjmp	.+270    	; 0x1fd8 <LED_voidLedTog+0x28e>
    1eca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ecc:	9b 81       	ldd	r25, Y+3	; 0x03
    1ece:	8d 31       	cpi	r24, 0x1D	; 29
    1ed0:	91 05       	cpc	r25, r1
    1ed2:	0c f4       	brge	.+2      	; 0x1ed6 <LED_voidLedTog+0x18c>
    1ed4:	7d c0       	rjmp	.+250    	; 0x1fd0 <LED_voidLedTog+0x286>
    1ed6:	2a 81       	ldd	r18, Y+2	; 0x02
    1ed8:	3b 81       	ldd	r19, Y+3	; 0x03
    1eda:	2e 31       	cpi	r18, 0x1E	; 30
    1edc:	31 05       	cpc	r19, r1
    1ede:	09 f4       	brne	.+2      	; 0x1ee2 <LED_voidLedTog+0x198>
    1ee0:	7f c0       	rjmp	.+254    	; 0x1fe0 <LED_voidLedTog+0x296>
    1ee2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ee4:	9b 81       	ldd	r25, Y+3	; 0x03
    1ee6:	8f 31       	cpi	r24, 0x1F	; 31
    1ee8:	91 05       	cpc	r25, r1
    1eea:	09 f4       	brne	.+2      	; 0x1eee <LED_voidLedTog+0x1a4>
    1eec:	7d c0       	rjmp	.+250    	; 0x1fe8 <LED_voidLedTog+0x29e>
    1eee:	7f c0       	rjmp	.+254    	; 0x1fee <LED_voidLedTog+0x2a4>
    {
    case LED0:
        DIO_voidToggPin(LED0_PIN);
    1ef0:	80 e1       	ldi	r24, 0x10	; 16
    1ef2:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1ef6:	7b c0       	rjmp	.+246    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED1:
        DIO_voidToggPin(LED1_PIN);
    1ef8:	81 e1       	ldi	r24, 0x11	; 17
    1efa:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1efe:	77 c0       	rjmp	.+238    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED2:
        DIO_voidToggPin(LED2_PIN);
    1f00:	82 e1       	ldi	r24, 0x12	; 18
    1f02:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f06:	73 c0       	rjmp	.+230    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED3:
        DIO_voidToggPin(LED3_PIN);
    1f08:	83 e1       	ldi	r24, 0x13	; 19
    1f0a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f0e:	6f c0       	rjmp	.+222    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED4:
        DIO_voidToggPin(LED4_PIN);
    1f10:	84 e1       	ldi	r24, 0x14	; 20
    1f12:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f16:	6b c0       	rjmp	.+214    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED5:
        DIO_voidToggPin(LED5_PIN);
    1f18:	85 e1       	ldi	r24, 0x15	; 21
    1f1a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f1e:	67 c0       	rjmp	.+206    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED6:
        DIO_voidToggPin(LED6_PIN);
    1f20:	80 e1       	ldi	r24, 0x10	; 16
    1f22:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f26:	63 c0       	rjmp	.+198    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED7:
        DIO_voidToggPin(LED7_PIN);
    1f28:	80 e1       	ldi	r24, 0x10	; 16
    1f2a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f2e:	5f c0       	rjmp	.+190    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED8:
        DIO_voidToggPin(LED8_PIN);
    1f30:	80 e1       	ldi	r24, 0x10	; 16
    1f32:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f36:	5b c0       	rjmp	.+182    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED9:
        DIO_voidToggPin(LED9_PIN);
    1f38:	80 e1       	ldi	r24, 0x10	; 16
    1f3a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f3e:	57 c0       	rjmp	.+174    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED10:
        DIO_voidToggPin(LED10_PIN);
    1f40:	80 e1       	ldi	r24, 0x10	; 16
    1f42:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f46:	53 c0       	rjmp	.+166    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED11:
        DIO_voidToggPin(LED11_PIN);
    1f48:	81 e1       	ldi	r24, 0x11	; 17
    1f4a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f4e:	4f c0       	rjmp	.+158    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED12:
        DIO_voidToggPin(LED12_PIN);
    1f50:	82 e1       	ldi	r24, 0x12	; 18
    1f52:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f56:	4b c0       	rjmp	.+150    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED13:
        DIO_voidToggPin(LED13_PIN);
    1f58:	80 e1       	ldi	r24, 0x10	; 16
    1f5a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f5e:	47 c0       	rjmp	.+142    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED14:
        DIO_voidToggPin(LED14_PIN);
    1f60:	80 e1       	ldi	r24, 0x10	; 16
    1f62:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f66:	43 c0       	rjmp	.+134    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED15:
        DIO_voidToggPin(LED15_PIN);
    1f68:	80 e1       	ldi	r24, 0x10	; 16
    1f6a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f6e:	3f c0       	rjmp	.+126    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED16:
        DIO_voidToggPin(LED16_PIN);
    1f70:	80 e1       	ldi	r24, 0x10	; 16
    1f72:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f76:	3b c0       	rjmp	.+118    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED17:
        DIO_voidToggPin(LED17_PIN);
    1f78:	80 e1       	ldi	r24, 0x10	; 16
    1f7a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f7e:	37 c0       	rjmp	.+110    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED18:
        DIO_voidToggPin(LED18_PIN);
    1f80:	80 e1       	ldi	r24, 0x10	; 16
    1f82:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f86:	33 c0       	rjmp	.+102    	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED19:
        DIO_voidToggPin(LED19_PIN);
    1f88:	80 e1       	ldi	r24, 0x10	; 16
    1f8a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f8e:	2f c0       	rjmp	.+94     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED20:
        DIO_voidToggPin(LED20_PIN);
    1f90:	80 e1       	ldi	r24, 0x10	; 16
    1f92:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f96:	2b c0       	rjmp	.+86     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED21:
        DIO_voidToggPin(LED21_PIN);
    1f98:	81 e1       	ldi	r24, 0x11	; 17
    1f9a:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1f9e:	27 c0       	rjmp	.+78     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED22:
        DIO_voidToggPin(LED22_PIN);
    1fa0:	82 e1       	ldi	r24, 0x12	; 18
    1fa2:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fa6:	23 c0       	rjmp	.+70     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED23:
        DIO_voidToggPin(LED23_PIN);
    1fa8:	80 e1       	ldi	r24, 0x10	; 16
    1faa:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fae:	1f c0       	rjmp	.+62     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED24:
        DIO_voidToggPin(LED24_PIN);
    1fb0:	80 e1       	ldi	r24, 0x10	; 16
    1fb2:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fb6:	1b c0       	rjmp	.+54     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED25:
        DIO_voidToggPin(LED25_PIN);
    1fb8:	80 e1       	ldi	r24, 0x10	; 16
    1fba:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fbe:	17 c0       	rjmp	.+46     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED26:
        DIO_voidToggPin(LED26_PIN);
    1fc0:	80 e1       	ldi	r24, 0x10	; 16
    1fc2:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fc6:	13 c0       	rjmp	.+38     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED27:
        DIO_voidToggPin(LED27_PIN);
    1fc8:	80 e1       	ldi	r24, 0x10	; 16
    1fca:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fce:	0f c0       	rjmp	.+30     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED28:
        DIO_voidToggPin(LED28_PIN);
    1fd0:	80 e1       	ldi	r24, 0x10	; 16
    1fd2:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fd6:	0b c0       	rjmp	.+22     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED29:
        DIO_voidToggPin(LED29_PIN);
    1fd8:	80 e1       	ldi	r24, 0x10	; 16
    1fda:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fde:	07 c0       	rjmp	.+14     	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED30:
        DIO_voidToggPin(LED30_PIN);
    1fe0:	80 e1       	ldi	r24, 0x10	; 16
    1fe2:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
    1fe6:	03 c0       	rjmp	.+6      	; 0x1fee <LED_voidLedTog+0x2a4>
        break;
    case LED31:
        DIO_voidToggPin(LED31_PIN);
    1fe8:	80 e1       	ldi	r24, 0x10	; 16
    1fea:	0e 94 be 1c 	call	0x397c	; 0x397c <DIO_voidToggPin>
        break;

    default:
        break;
    }
}
    1fee:	0f 90       	pop	r0
    1ff0:	0f 90       	pop	r0
    1ff2:	0f 90       	pop	r0
    1ff4:	cf 91       	pop	r28
    1ff6:	df 91       	pop	r29
    1ff8:	08 95       	ret

00001ffa <LED_voidInitialize>:
void LED_voidInitialize()
{
    1ffa:	df 93       	push	r29
    1ffc:	cf 93       	push	r28
    1ffe:	cd b7       	in	r28, 0x3d	; 61
    2000:	de b7       	in	r29, 0x3e	; 62
#if (LED0_INIT_STATE == ON)
    LED_voidLedOn(LED0);
#else
    LED_voidLedOff(LED0);
    2002:	80 e0       	ldi	r24, 0x00	; 0
    2004:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LED_voidLedOff>
#endif

#if (LED1_INIT_STATE == ON)
    LED_voidLedOn(LED1);
#else
    LED_voidLedOff(LED1);
    2008:	81 e0       	ldi	r24, 0x01	; 1
    200a:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LED_voidLedOff>
#endif

#if (LED2_INIT_STATE == ON)
    LED_voidLedOn(LED2);
#else
    LED_voidLedOff(LED2);
    200e:	82 e0       	ldi	r24, 0x02	; 2
    2010:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LED_voidLedOff>
#endif

#if (LED3_INIT_STATE == ON)
    LED_voidLedOn(LED3);
#else
    LED_voidLedOff(LED3);
    2014:	83 e0       	ldi	r24, 0x03	; 3
    2016:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LED_voidLedOff>
#endif

#if (LED4_INIT_STATE == ON)
    LED_voidLedOn(LED4);
#else
    LED_voidLedOff(LED4);
    201a:	84 e0       	ldi	r24, 0x04	; 4
    201c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LED_voidLedOff>
#endif
}
    2020:	cf 91       	pop	r28
    2022:	df 91       	pop	r29
    2024:	08 95       	ret

00002026 <LED8X8_voidAllOn>:
#include "LED8X8_priv.h"
#include "LED8X8_cfg.h"
#include "LED8X8_int.h"

void LED8X8_voidAllOn(void)
{
    2026:	df 93       	push	r29
    2028:	cf 93       	push	r28
    202a:	cd b7       	in	r28, 0x3d	; 61
    202c:	de b7       	in	r29, 0x3e	; 62
    /* Specific to my Device */
    PORTA = 0B11001101;
    202e:	eb e3       	ldi	r30, 0x3B	; 59
    2030:	f0 e0       	ldi	r31, 0x00	; 0
    2032:	8d ec       	ldi	r24, 0xCD	; 205
    2034:	80 83       	st	Z, r24
    PORTC = 0B00101001;
    2036:	e5 e3       	ldi	r30, 0x35	; 53
    2038:	f0 e0       	ldi	r31, 0x00	; 0
    203a:	89 e2       	ldi	r24, 0x29	; 41
    203c:	80 83       	st	Z, r24
    /* For General purpose uncomment this section */
    /* 
        LED8X8_voidColsOn();
        LED8X8_voidRowsOn();
    */
}
    203e:	cf 91       	pop	r28
    2040:	df 91       	pop	r29
    2042:	08 95       	ret

00002044 <LED8X8_voidAllOff>:
void LED8X8_voidAllOff(void)
{
    2044:	df 93       	push	r29
    2046:	cf 93       	push	r28
    2048:	cd b7       	in	r28, 0x3d	; 61
    204a:	de b7       	in	r29, 0x3e	; 62
    /* Specific to my Device */
    PORTA = 0B00110010;
    204c:	eb e3       	ldi	r30, 0x3B	; 59
    204e:	f0 e0       	ldi	r31, 0x00	; 0
    2050:	82 e3       	ldi	r24, 0x32	; 50
    2052:	80 83       	st	Z, r24
    PORTC = 0B11010110;
    2054:	e5 e3       	ldi	r30, 0x35	; 53
    2056:	f0 e0       	ldi	r31, 0x00	; 0
    2058:	86 ed       	ldi	r24, 0xD6	; 214
    205a:	80 83       	st	Z, r24
    /* For General purpose uncomment this section */
    /* 
        LED8X8_voidColsOff();
        LED8X8_voidRowsOff();
    */
}
    205c:	cf 91       	pop	r28
    205e:	df 91       	pop	r29
    2060:	08 95       	ret

00002062 <LED8X8_voidRowOn>:

void LED8X8_voidRowOn(u8 rowNum)
{
    2062:	df 93       	push	r29
    2064:	cf 93       	push	r28
    2066:	00 d0       	rcall	.+0      	; 0x2068 <LED8X8_voidRowOn+0x6>
    2068:	cd b7       	in	r28, 0x3d	; 61
    206a:	de b7       	in	r29, 0x3e	; 62
    206c:	8a 83       	std	Y+2, r24	; 0x02
    u8 rowPin = LED8X8_u8LocalRowPinSelector(rowNum);
    206e:	8a 81       	ldd	r24, Y+2	; 0x02
    2070:	0e 94 19 11 	call	0x2232	; 0x2232 <LED8X8_u8LocalRowPinSelector>
    2074:	89 83       	std	Y+1, r24	; 0x01
    #if (LED8X8_ROWS_CONN == FORWORD)
    {
        DIO_voidSetPin(rowPin,HIGH);
    2076:	89 81       	ldd	r24, Y+1	; 0x01
    2078:	61 e0       	ldi	r22, 0x01	; 1
    207a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    #else
    {
        DIO_voidSetPin(rowPin,LOW);
    }
    #endif
}
    207e:	0f 90       	pop	r0
    2080:	0f 90       	pop	r0
    2082:	cf 91       	pop	r28
    2084:	df 91       	pop	r29
    2086:	08 95       	ret

00002088 <LED8X8_voidRowOff>:
void LED8X8_voidRowOff(u8 rowNum)
{
    2088:	df 93       	push	r29
    208a:	cf 93       	push	r28
    208c:	00 d0       	rcall	.+0      	; 0x208e <LED8X8_voidRowOff+0x6>
    208e:	cd b7       	in	r28, 0x3d	; 61
    2090:	de b7       	in	r29, 0x3e	; 62
    2092:	8a 83       	std	Y+2, r24	; 0x02
    u8 rowPin = LED8X8_u8LocalRowPinSelector(rowNum);
    2094:	8a 81       	ldd	r24, Y+2	; 0x02
    2096:	0e 94 19 11 	call	0x2232	; 0x2232 <LED8X8_u8LocalRowPinSelector>
    209a:	89 83       	std	Y+1, r24	; 0x01
    #if (LED8X8_ROWS_CONN == FORWORD)
    {
        DIO_voidSetPin(rowPin,LOW);
    209c:	89 81       	ldd	r24, Y+1	; 0x01
    209e:	60 e0       	ldi	r22, 0x00	; 0
    20a0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    #else
    {
        DIO_voidSetPin(rowPin,HIGH);
    }
    #endif
}
    20a4:	0f 90       	pop	r0
    20a6:	0f 90       	pop	r0
    20a8:	cf 91       	pop	r28
    20aa:	df 91       	pop	r29
    20ac:	08 95       	ret

000020ae <LED8X8_voidRowsOff>:
void LED8X8_voidRowsOff(void)
{
    20ae:	df 93       	push	r29
    20b0:	cf 93       	push	r28
    20b2:	cd b7       	in	r28, 0x3d	; 61
    20b4:	de b7       	in	r29, 0x3e	; 62
    #if (LED8X8_ROWS_CONN == FORWORD)
    {
        DIO_voidSetPin(LED8X8_R0_PIN,LOW);
    20b6:	83 e0       	ldi	r24, 0x03	; 3
    20b8:	60 e0       	ldi	r22, 0x00	; 0
    20ba:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R1_PIN,LOW);
    20be:	86 e0       	ldi	r24, 0x06	; 6
    20c0:	60 e0       	ldi	r22, 0x00	; 0
    20c2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R2_PIN,LOW);
    20c6:	82 e0       	ldi	r24, 0x02	; 2
    20c8:	60 e0       	ldi	r22, 0x00	; 0
    20ca:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R3_PIN,LOW);
    20ce:	87 e0       	ldi	r24, 0x07	; 7
    20d0:	60 e0       	ldi	r22, 0x00	; 0
    20d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R4_PIN,LOW);
    20d6:	83 e1       	ldi	r24, 0x13	; 19
    20d8:	60 e0       	ldi	r22, 0x00	; 0
    20da:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R5_PIN,LOW);
    20de:	80 e0       	ldi	r24, 0x00	; 0
    20e0:	60 e0       	ldi	r22, 0x00	; 0
    20e2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R6_PIN,LOW);
    20e6:	85 e1       	ldi	r24, 0x15	; 21
    20e8:	60 e0       	ldi	r22, 0x00	; 0
    20ea:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R7_PIN,LOW);
    20ee:	80 e1       	ldi	r24, 0x10	; 16
    20f0:	60 e0       	ldi	r22, 0x00	; 0
    20f2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R5_PIN,HIGH);
        DIO_voidSetPin(LED8X8_R6_PIN,HIGH);
        DIO_voidSetPin(LED8X8_R7_PIN,HIGH);
    }
    #endif
}
    20f6:	cf 91       	pop	r28
    20f8:	df 91       	pop	r29
    20fa:	08 95       	ret

000020fc <LED8X8_voidRowsOn>:
void LED8X8_voidRowsOn(void)
{
    20fc:	df 93       	push	r29
    20fe:	cf 93       	push	r28
    2100:	cd b7       	in	r28, 0x3d	; 61
    2102:	de b7       	in	r29, 0x3e	; 62
    #if (LED8X8_ROWS_CONN == FORWORD)
    {
        DIO_voidSetPin(LED8X8_R0_PIN,HIGH);
    2104:	83 e0       	ldi	r24, 0x03	; 3
    2106:	61 e0       	ldi	r22, 0x01	; 1
    2108:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R1_PIN,HIGH);
    210c:	86 e0       	ldi	r24, 0x06	; 6
    210e:	61 e0       	ldi	r22, 0x01	; 1
    2110:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R2_PIN,HIGH);
    2114:	82 e0       	ldi	r24, 0x02	; 2
    2116:	61 e0       	ldi	r22, 0x01	; 1
    2118:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R3_PIN,HIGH);
    211c:	87 e0       	ldi	r24, 0x07	; 7
    211e:	61 e0       	ldi	r22, 0x01	; 1
    2120:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R4_PIN,HIGH);
    2124:	83 e1       	ldi	r24, 0x13	; 19
    2126:	61 e0       	ldi	r22, 0x01	; 1
    2128:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R5_PIN,HIGH);
    212c:	80 e0       	ldi	r24, 0x00	; 0
    212e:	61 e0       	ldi	r22, 0x01	; 1
    2130:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R6_PIN,HIGH);
    2134:	85 e1       	ldi	r24, 0x15	; 21
    2136:	61 e0       	ldi	r22, 0x01	; 1
    2138:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R7_PIN,HIGH);
    213c:	80 e1       	ldi	r24, 0x10	; 16
    213e:	61 e0       	ldi	r22, 0x01	; 1
    2140:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_R5_PIN,LOW);
        DIO_voidSetPin(LED8X8_R6_PIN,LOW);
        DIO_voidSetPin(LED8X8_R7_PIN,LOW);
    }
    #endif
}
    2144:	cf 91       	pop	r28
    2146:	df 91       	pop	r29
    2148:	08 95       	ret

0000214a <LED8X8_voidColOn>:

void LED8X8_voidColOn(u8 colNum)
{
    214a:	df 93       	push	r29
    214c:	cf 93       	push	r28
    214e:	00 d0       	rcall	.+0      	; 0x2150 <LED8X8_voidColOn+0x6>
    2150:	cd b7       	in	r28, 0x3d	; 61
    2152:	de b7       	in	r29, 0x3e	; 62
    2154:	8a 83       	std	Y+2, r24	; 0x02
    u8 colPin = LED8X8_u8LocalColPinSelector(colNum);
    2156:	8a 81       	ldd	r24, Y+2	; 0x02
    2158:	0e 94 71 11 	call	0x22e2	; 0x22e2 <LED8X8_u8LocalColPinSelector>
    215c:	89 83       	std	Y+1, r24	; 0x01
    {
        DIO_voidSetPin(colPin,HIGH);
    }
    #else
    {
        DIO_voidSetPin(colPin,LOW);
    215e:	89 81       	ldd	r24, Y+1	; 0x01
    2160:	60 e0       	ldi	r22, 0x00	; 0
    2162:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    }
    #endif
}
    2166:	0f 90       	pop	r0
    2168:	0f 90       	pop	r0
    216a:	cf 91       	pop	r28
    216c:	df 91       	pop	r29
    216e:	08 95       	ret

00002170 <LED8X8_voidColOff>:
void LED8X8_voidColOff(u8 colNum)
{
    2170:	df 93       	push	r29
    2172:	cf 93       	push	r28
    2174:	00 d0       	rcall	.+0      	; 0x2176 <LED8X8_voidColOff+0x6>
    2176:	cd b7       	in	r28, 0x3d	; 61
    2178:	de b7       	in	r29, 0x3e	; 62
    217a:	8a 83       	std	Y+2, r24	; 0x02
    u8 colPin = LED8X8_u8LocalColPinSelector(colNum);
    217c:	8a 81       	ldd	r24, Y+2	; 0x02
    217e:	0e 94 71 11 	call	0x22e2	; 0x22e2 <LED8X8_u8LocalColPinSelector>
    2182:	89 83       	std	Y+1, r24	; 0x01
    {
        DIO_voidSetPin(colPin,LOW);
    }
    #else
    {
        DIO_voidSetPin(colPin,HIGH);
    2184:	89 81       	ldd	r24, Y+1	; 0x01
    2186:	61 e0       	ldi	r22, 0x01	; 1
    2188:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    }
    #endif
}
    218c:	0f 90       	pop	r0
    218e:	0f 90       	pop	r0
    2190:	cf 91       	pop	r28
    2192:	df 91       	pop	r29
    2194:	08 95       	ret

00002196 <LED8X8_voidColsOff>:
void LED8X8_voidColsOff(void)
{
    2196:	df 93       	push	r29
    2198:	cf 93       	push	r28
    219a:	cd b7       	in	r28, 0x3d	; 61
    219c:	de b7       	in	r29, 0x3e	; 62
        DIO_voidSetPin(LED8X8_C6_PIN,LOW);
        DIO_voidSetPin(LED8X8_C7_PIN,LOW);
    }
    #else
    {
        DIO_voidSetPin(LED8X8_C0_PIN,HIGH);
    219e:	87 e1       	ldi	r24, 0x17	; 23
    21a0:	61 e0       	ldi	r22, 0x01	; 1
    21a2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C1_PIN,HIGH);
    21a6:	86 e1       	ldi	r24, 0x16	; 22
    21a8:	61 e0       	ldi	r22, 0x01	; 1
    21aa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C2_PIN,HIGH);
    21ae:	82 e1       	ldi	r24, 0x12	; 18
    21b0:	61 e0       	ldi	r22, 0x01	; 1
    21b2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C3_PIN,HIGH);
    21b6:	81 e0       	ldi	r24, 0x01	; 1
    21b8:	61 e0       	ldi	r22, 0x01	; 1
    21ba:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C4_PIN,HIGH);
    21be:	81 e1       	ldi	r24, 0x11	; 17
    21c0:	61 e0       	ldi	r22, 0x01	; 1
    21c2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C5_PIN,HIGH);
    21c6:	84 e0       	ldi	r24, 0x04	; 4
    21c8:	61 e0       	ldi	r22, 0x01	; 1
    21ca:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C6_PIN,HIGH);
    21ce:	85 e0       	ldi	r24, 0x05	; 5
    21d0:	61 e0       	ldi	r22, 0x01	; 1
    21d2:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C7_PIN,HIGH);
    21d6:	84 e1       	ldi	r24, 0x14	; 20
    21d8:	61 e0       	ldi	r22, 0x01	; 1
    21da:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    }
    #endif
}
    21de:	cf 91       	pop	r28
    21e0:	df 91       	pop	r29
    21e2:	08 95       	ret

000021e4 <LED8X8_voidColsOn>:
void LED8X8_voidColsOn(void)
{
    21e4:	df 93       	push	r29
    21e6:	cf 93       	push	r28
    21e8:	cd b7       	in	r28, 0x3d	; 61
    21ea:	de b7       	in	r29, 0x3e	; 62
        DIO_voidSetPin(LED8X8_C6_PIN,HIGH);
        DIO_voidSetPin(LED8X8_C7_PIN,HIGH);
    }
    #else
    {
        DIO_voidSetPin(LED8X8_C0_PIN,LOW);
    21ec:	87 e1       	ldi	r24, 0x17	; 23
    21ee:	60 e0       	ldi	r22, 0x00	; 0
    21f0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C1_PIN,LOW);
    21f4:	86 e1       	ldi	r24, 0x16	; 22
    21f6:	60 e0       	ldi	r22, 0x00	; 0
    21f8:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C2_PIN,LOW);
    21fc:	82 e1       	ldi	r24, 0x12	; 18
    21fe:	60 e0       	ldi	r22, 0x00	; 0
    2200:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C3_PIN,LOW);
    2204:	81 e0       	ldi	r24, 0x01	; 1
    2206:	60 e0       	ldi	r22, 0x00	; 0
    2208:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C4_PIN,LOW);
    220c:	81 e1       	ldi	r24, 0x11	; 17
    220e:	60 e0       	ldi	r22, 0x00	; 0
    2210:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C5_PIN,LOW);
    2214:	84 e0       	ldi	r24, 0x04	; 4
    2216:	60 e0       	ldi	r22, 0x00	; 0
    2218:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C6_PIN,LOW);
    221c:	85 e0       	ldi	r24, 0x05	; 5
    221e:	60 e0       	ldi	r22, 0x00	; 0
    2220:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(LED8X8_C7_PIN,LOW);
    2224:	84 e1       	ldi	r24, 0x14	; 20
    2226:	60 e0       	ldi	r22, 0x00	; 0
    2228:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    }
    #endif
}
    222c:	cf 91       	pop	r28
    222e:	df 91       	pop	r29
    2230:	08 95       	ret

00002232 <LED8X8_u8LocalRowPinSelector>:


static u8 LED8X8_u8LocalRowPinSelector(u8 rowNum)
{
    2232:	df 93       	push	r29
    2234:	cf 93       	push	r28
    2236:	00 d0       	rcall	.+0      	; 0x2238 <LED8X8_u8LocalRowPinSelector+0x6>
    2238:	00 d0       	rcall	.+0      	; 0x223a <LED8X8_u8LocalRowPinSelector+0x8>
    223a:	cd b7       	in	r28, 0x3d	; 61
    223c:	de b7       	in	r29, 0x3e	; 62
    223e:	8a 83       	std	Y+2, r24	; 0x02
    u8 rowPin;
    switch (rowNum)
    2240:	8a 81       	ldd	r24, Y+2	; 0x02
    2242:	28 2f       	mov	r18, r24
    2244:	30 e0       	ldi	r19, 0x00	; 0
    2246:	3c 83       	std	Y+4, r19	; 0x04
    2248:	2b 83       	std	Y+3, r18	; 0x03
    224a:	8b 81       	ldd	r24, Y+3	; 0x03
    224c:	9c 81       	ldd	r25, Y+4	; 0x04
    224e:	83 30       	cpi	r24, 0x03	; 3
    2250:	91 05       	cpc	r25, r1
    2252:	91 f1       	breq	.+100    	; 0x22b8 <LED8X8_u8LocalRowPinSelector+0x86>
    2254:	2b 81       	ldd	r18, Y+3	; 0x03
    2256:	3c 81       	ldd	r19, Y+4	; 0x04
    2258:	24 30       	cpi	r18, 0x04	; 4
    225a:	31 05       	cpc	r19, r1
    225c:	7c f4       	brge	.+30     	; 0x227c <LED8X8_u8LocalRowPinSelector+0x4a>
    225e:	8b 81       	ldd	r24, Y+3	; 0x03
    2260:	9c 81       	ldd	r25, Y+4	; 0x04
    2262:	81 30       	cpi	r24, 0x01	; 1
    2264:	91 05       	cpc	r25, r1
    2266:	11 f1       	breq	.+68     	; 0x22ac <LED8X8_u8LocalRowPinSelector+0x7a>
    2268:	2b 81       	ldd	r18, Y+3	; 0x03
    226a:	3c 81       	ldd	r19, Y+4	; 0x04
    226c:	22 30       	cpi	r18, 0x02	; 2
    226e:	31 05       	cpc	r19, r1
    2270:	04 f5       	brge	.+64     	; 0x22b2 <LED8X8_u8LocalRowPinSelector+0x80>
    2272:	8b 81       	ldd	r24, Y+3	; 0x03
    2274:	9c 81       	ldd	r25, Y+4	; 0x04
    2276:	00 97       	sbiw	r24, 0x00	; 0
    2278:	b1 f0       	breq	.+44     	; 0x22a6 <LED8X8_u8LocalRowPinSelector+0x74>
    227a:	2b c0       	rjmp	.+86     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
    227c:	2b 81       	ldd	r18, Y+3	; 0x03
    227e:	3c 81       	ldd	r19, Y+4	; 0x04
    2280:	25 30       	cpi	r18, 0x05	; 5
    2282:	31 05       	cpc	r19, r1
    2284:	f9 f0       	breq	.+62     	; 0x22c4 <LED8X8_u8LocalRowPinSelector+0x92>
    2286:	8b 81       	ldd	r24, Y+3	; 0x03
    2288:	9c 81       	ldd	r25, Y+4	; 0x04
    228a:	85 30       	cpi	r24, 0x05	; 5
    228c:	91 05       	cpc	r25, r1
    228e:	bc f0       	brlt	.+46     	; 0x22be <LED8X8_u8LocalRowPinSelector+0x8c>
    2290:	2b 81       	ldd	r18, Y+3	; 0x03
    2292:	3c 81       	ldd	r19, Y+4	; 0x04
    2294:	26 30       	cpi	r18, 0x06	; 6
    2296:	31 05       	cpc	r19, r1
    2298:	b9 f0       	breq	.+46     	; 0x22c8 <LED8X8_u8LocalRowPinSelector+0x96>
    229a:	8b 81       	ldd	r24, Y+3	; 0x03
    229c:	9c 81       	ldd	r25, Y+4	; 0x04
    229e:	87 30       	cpi	r24, 0x07	; 7
    22a0:	91 05       	cpc	r25, r1
    22a2:	a9 f0       	breq	.+42     	; 0x22ce <LED8X8_u8LocalRowPinSelector+0x9c>
    22a4:	16 c0       	rjmp	.+44     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
    {
    case LED8X8_R0:
        rowPin = LED8X8_R0_PIN;
    22a6:	83 e0       	ldi	r24, 0x03	; 3
    22a8:	89 83       	std	Y+1, r24	; 0x01
    22aa:	13 c0       	rjmp	.+38     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
        break;
    case LED8X8_R1:
        rowPin = LED8X8_R1_PIN;
    22ac:	86 e0       	ldi	r24, 0x06	; 6
    22ae:	89 83       	std	Y+1, r24	; 0x01
    22b0:	10 c0       	rjmp	.+32     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
        break;
    case LED8X8_R2:
        rowPin = LED8X8_R2_PIN;
    22b2:	82 e0       	ldi	r24, 0x02	; 2
    22b4:	89 83       	std	Y+1, r24	; 0x01
    22b6:	0d c0       	rjmp	.+26     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
        break;
    case LED8X8_R3:
        rowPin = LED8X8_R3_PIN;
    22b8:	87 e0       	ldi	r24, 0x07	; 7
    22ba:	89 83       	std	Y+1, r24	; 0x01
    22bc:	0a c0       	rjmp	.+20     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
        break;
    case LED8X8_R4:
        rowPin = LED8X8_R4_PIN;
    22be:	83 e1       	ldi	r24, 0x13	; 19
    22c0:	89 83       	std	Y+1, r24	; 0x01
    22c2:	07 c0       	rjmp	.+14     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
        break;
    case LED8X8_R5:
        rowPin = LED8X8_R5_PIN;
    22c4:	19 82       	std	Y+1, r1	; 0x01
    22c6:	05 c0       	rjmp	.+10     	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
        break;
    case LED8X8_R6:
        rowPin = LED8X8_R6_PIN;
    22c8:	85 e1       	ldi	r24, 0x15	; 21
    22ca:	89 83       	std	Y+1, r24	; 0x01
    22cc:	02 c0       	rjmp	.+4      	; 0x22d2 <LED8X8_u8LocalRowPinSelector+0xa0>
        break;
    case LED8X8_R7:
        rowPin = LED8X8_R7_PIN;
    22ce:	80 e1       	ldi	r24, 0x10	; 16
    22d0:	89 83       	std	Y+1, r24	; 0x01
        break;
    
    default:
        break;
    }
    return rowPin;
    22d2:	89 81       	ldd	r24, Y+1	; 0x01
}
    22d4:	0f 90       	pop	r0
    22d6:	0f 90       	pop	r0
    22d8:	0f 90       	pop	r0
    22da:	0f 90       	pop	r0
    22dc:	cf 91       	pop	r28
    22de:	df 91       	pop	r29
    22e0:	08 95       	ret

000022e2 <LED8X8_u8LocalColPinSelector>:
static u8 LED8X8_u8LocalColPinSelector(u8 colNum)
{
    22e2:	df 93       	push	r29
    22e4:	cf 93       	push	r28
    22e6:	00 d0       	rcall	.+0      	; 0x22e8 <LED8X8_u8LocalColPinSelector+0x6>
    22e8:	00 d0       	rcall	.+0      	; 0x22ea <LED8X8_u8LocalColPinSelector+0x8>
    22ea:	cd b7       	in	r28, 0x3d	; 61
    22ec:	de b7       	in	r29, 0x3e	; 62
    22ee:	8a 83       	std	Y+2, r24	; 0x02
   u8 colPin;
   switch (colNum)
    22f0:	8a 81       	ldd	r24, Y+2	; 0x02
    22f2:	28 2f       	mov	r18, r24
    22f4:	30 e0       	ldi	r19, 0x00	; 0
    22f6:	3c 83       	std	Y+4, r19	; 0x04
    22f8:	2b 83       	std	Y+3, r18	; 0x03
    22fa:	8b 81       	ldd	r24, Y+3	; 0x03
    22fc:	9c 81       	ldd	r25, Y+4	; 0x04
    22fe:	83 30       	cpi	r24, 0x03	; 3
    2300:	91 05       	cpc	r25, r1
    2302:	91 f1       	breq	.+100    	; 0x2368 <LED8X8_u8LocalColPinSelector+0x86>
    2304:	2b 81       	ldd	r18, Y+3	; 0x03
    2306:	3c 81       	ldd	r19, Y+4	; 0x04
    2308:	24 30       	cpi	r18, 0x04	; 4
    230a:	31 05       	cpc	r19, r1
    230c:	7c f4       	brge	.+30     	; 0x232c <LED8X8_u8LocalColPinSelector+0x4a>
    230e:	8b 81       	ldd	r24, Y+3	; 0x03
    2310:	9c 81       	ldd	r25, Y+4	; 0x04
    2312:	81 30       	cpi	r24, 0x01	; 1
    2314:	91 05       	cpc	r25, r1
    2316:	11 f1       	breq	.+68     	; 0x235c <LED8X8_u8LocalColPinSelector+0x7a>
    2318:	2b 81       	ldd	r18, Y+3	; 0x03
    231a:	3c 81       	ldd	r19, Y+4	; 0x04
    231c:	22 30       	cpi	r18, 0x02	; 2
    231e:	31 05       	cpc	r19, r1
    2320:	04 f5       	brge	.+64     	; 0x2362 <LED8X8_u8LocalColPinSelector+0x80>
    2322:	8b 81       	ldd	r24, Y+3	; 0x03
    2324:	9c 81       	ldd	r25, Y+4	; 0x04
    2326:	00 97       	sbiw	r24, 0x00	; 0
    2328:	b1 f0       	breq	.+44     	; 0x2356 <LED8X8_u8LocalColPinSelector+0x74>
    232a:	2c c0       	rjmp	.+88     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
    232c:	2b 81       	ldd	r18, Y+3	; 0x03
    232e:	3c 81       	ldd	r19, Y+4	; 0x04
    2330:	25 30       	cpi	r18, 0x05	; 5
    2332:	31 05       	cpc	r19, r1
    2334:	f9 f0       	breq	.+62     	; 0x2374 <LED8X8_u8LocalColPinSelector+0x92>
    2336:	8b 81       	ldd	r24, Y+3	; 0x03
    2338:	9c 81       	ldd	r25, Y+4	; 0x04
    233a:	85 30       	cpi	r24, 0x05	; 5
    233c:	91 05       	cpc	r25, r1
    233e:	bc f0       	brlt	.+46     	; 0x236e <LED8X8_u8LocalColPinSelector+0x8c>
    2340:	2b 81       	ldd	r18, Y+3	; 0x03
    2342:	3c 81       	ldd	r19, Y+4	; 0x04
    2344:	26 30       	cpi	r18, 0x06	; 6
    2346:	31 05       	cpc	r19, r1
    2348:	c1 f0       	breq	.+48     	; 0x237a <LED8X8_u8LocalColPinSelector+0x98>
    234a:	8b 81       	ldd	r24, Y+3	; 0x03
    234c:	9c 81       	ldd	r25, Y+4	; 0x04
    234e:	87 30       	cpi	r24, 0x07	; 7
    2350:	91 05       	cpc	r25, r1
    2352:	b1 f0       	breq	.+44     	; 0x2380 <LED8X8_u8LocalColPinSelector+0x9e>
    2354:	17 c0       	rjmp	.+46     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
   {
   case LED8X8_C0:
       colPin = LED8X8_C0_PIN;
    2356:	87 e1       	ldi	r24, 0x17	; 23
    2358:	89 83       	std	Y+1, r24	; 0x01
    235a:	14 c0       	rjmp	.+40     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
       break;
   case LED8X8_C1:
       colPin = LED8X8_C1_PIN;
    235c:	86 e1       	ldi	r24, 0x16	; 22
    235e:	89 83       	std	Y+1, r24	; 0x01
    2360:	11 c0       	rjmp	.+34     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
       break;
   case LED8X8_C2:
       colPin = LED8X8_C2_PIN;
    2362:	82 e1       	ldi	r24, 0x12	; 18
    2364:	89 83       	std	Y+1, r24	; 0x01
    2366:	0e c0       	rjmp	.+28     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
       break;
   case LED8X8_C3:
       colPin = LED8X8_C3_PIN;
    2368:	81 e0       	ldi	r24, 0x01	; 1
    236a:	89 83       	std	Y+1, r24	; 0x01
    236c:	0b c0       	rjmp	.+22     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
       break;
   case LED8X8_C4:
       colPin = LED8X8_C4_PIN;
    236e:	81 e1       	ldi	r24, 0x11	; 17
    2370:	89 83       	std	Y+1, r24	; 0x01
    2372:	08 c0       	rjmp	.+16     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
       break;
   case LED8X8_C5:
       colPin = LED8X8_C5_PIN;
    2374:	84 e0       	ldi	r24, 0x04	; 4
    2376:	89 83       	std	Y+1, r24	; 0x01
    2378:	05 c0       	rjmp	.+10     	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
       break;
   case LED8X8_C6:
       colPin = LED8X8_C6_PIN;
    237a:	85 e0       	ldi	r24, 0x05	; 5
    237c:	89 83       	std	Y+1, r24	; 0x01
    237e:	02 c0       	rjmp	.+4      	; 0x2384 <LED8X8_u8LocalColPinSelector+0xa2>
       break;
   case LED8X8_C7:
       colPin = LED8X8_C7_PIN;
    2380:	84 e1       	ldi	r24, 0x14	; 20
    2382:	89 83       	std	Y+1, r24	; 0x01
       break;

   default:
       break;
   }
   return colPin;
    2384:	89 81       	ldd	r24, Y+1	; 0x01
}
    2386:	0f 90       	pop	r0
    2388:	0f 90       	pop	r0
    238a:	0f 90       	pop	r0
    238c:	0f 90       	pop	r0
    238e:	cf 91       	pop	r28
    2390:	df 91       	pop	r29
    2392:	08 95       	ret

00002394 <LED8X8_voidPrintMatrix64>:


void LED8X8_voidPrintMatrix64(u8 * field)
{
    2394:	df 93       	push	r29
    2396:	cf 93       	push	r28
    2398:	cd b7       	in	r28, 0x3d	; 61
    239a:	de b7       	in	r29, 0x3e	; 62
    239c:	65 97       	sbiw	r28, 0x15	; 21
    239e:	0f b6       	in	r0, 0x3f	; 63
    23a0:	f8 94       	cli
    23a2:	de bf       	out	0x3e, r29	; 62
    23a4:	0f be       	out	0x3f, r0	; 63
    23a6:	cd bf       	out	0x3d, r28	; 61
    23a8:	9d 8b       	std	Y+21, r25	; 0x15
    23aa:	8c 8b       	std	Y+20, r24	; 0x14
    u8 aspeed = 1;
    23ac:	81 e0       	ldi	r24, 0x01	; 1
    23ae:	8b 8b       	std	Y+19, r24	; 0x13
    for (int i = 0; i < 8; i++)
    23b0:	1a 8a       	std	Y+18, r1	; 0x12
    23b2:	19 8a       	std	Y+17, r1	; 0x11
    23b4:	a9 c0       	rjmp	.+338    	; 0x2508 <LED8X8_voidPrintMatrix64+0x174>
    {
        LED8X8_voidAllOff();
    23b6:	0e 94 22 10 	call	0x2044	; 0x2044 <LED8X8_voidAllOff>
        for (int j = 0; j < 8; j++)
    23ba:	18 8a       	std	Y+16, r1	; 0x10
    23bc:	1f 86       	std	Y+15, r1	; 0x0f
    23be:	1e c0       	rjmp	.+60     	; 0x23fc <LED8X8_voidPrintMatrix64+0x68>
        {
            if (field[i*8+j] > 0)
    23c0:	89 89       	ldd	r24, Y+17	; 0x11
    23c2:	9a 89       	ldd	r25, Y+18	; 0x12
    23c4:	9c 01       	movw	r18, r24
    23c6:	22 0f       	add	r18, r18
    23c8:	33 1f       	adc	r19, r19
    23ca:	22 0f       	add	r18, r18
    23cc:	33 1f       	adc	r19, r19
    23ce:	22 0f       	add	r18, r18
    23d0:	33 1f       	adc	r19, r19
    23d2:	8f 85       	ldd	r24, Y+15	; 0x0f
    23d4:	98 89       	ldd	r25, Y+16	; 0x10
    23d6:	82 0f       	add	r24, r18
    23d8:	93 1f       	adc	r25, r19
    23da:	9c 01       	movw	r18, r24
    23dc:	8c 89       	ldd	r24, Y+20	; 0x14
    23de:	9d 89       	ldd	r25, Y+21	; 0x15
    23e0:	fc 01       	movw	r30, r24
    23e2:	e2 0f       	add	r30, r18
    23e4:	f3 1f       	adc	r31, r19
    23e6:	80 81       	ld	r24, Z
    23e8:	88 23       	and	r24, r24
    23ea:	19 f0       	breq	.+6      	; 0x23f2 <LED8X8_voidPrintMatrix64+0x5e>
                LED8X8_voidColOn(j);
    23ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    23ee:	0e 94 a5 10 	call	0x214a	; 0x214a <LED8X8_voidColOn>
{
    u8 aspeed = 1;
    for (int i = 0; i < 8; i++)
    {
        LED8X8_voidAllOff();
        for (int j = 0; j < 8; j++)
    23f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    23f4:	98 89       	ldd	r25, Y+16	; 0x10
    23f6:	01 96       	adiw	r24, 0x01	; 1
    23f8:	98 8b       	std	Y+16, r25	; 0x10
    23fa:	8f 87       	std	Y+15, r24	; 0x0f
    23fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    23fe:	98 89       	ldd	r25, Y+16	; 0x10
    2400:	88 30       	cpi	r24, 0x08	; 8
    2402:	91 05       	cpc	r25, r1
    2404:	ec f2       	brlt	.-70     	; 0x23c0 <LED8X8_voidPrintMatrix64+0x2c>
        {
            if (field[i*8+j] > 0)
                LED8X8_voidColOn(j);
        }

        LED8X8_voidRowOn(i);
    2406:	89 89       	ldd	r24, Y+17	; 0x11
    2408:	0e 94 31 10 	call	0x2062	; 0x2062 <LED8X8_voidRowOn>
        _delay_ms(aspeed);
    240c:	8b 89       	ldd	r24, Y+19	; 0x13
    240e:	88 2f       	mov	r24, r24
    2410:	90 e0       	ldi	r25, 0x00	; 0
    2412:	a0 e0       	ldi	r26, 0x00	; 0
    2414:	b0 e0       	ldi	r27, 0x00	; 0
    2416:	bc 01       	movw	r22, r24
    2418:	cd 01       	movw	r24, r26
    241a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    241e:	dc 01       	movw	r26, r24
    2420:	cb 01       	movw	r24, r22
    2422:	8b 87       	std	Y+11, r24	; 0x0b
    2424:	9c 87       	std	Y+12, r25	; 0x0c
    2426:	ad 87       	std	Y+13, r26	; 0x0d
    2428:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    242a:	6b 85       	ldd	r22, Y+11	; 0x0b
    242c:	7c 85       	ldd	r23, Y+12	; 0x0c
    242e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2430:	9e 85       	ldd	r25, Y+14	; 0x0e
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	30 e0       	ldi	r19, 0x00	; 0
    2436:	4a e7       	ldi	r20, 0x7A	; 122
    2438:	55 e4       	ldi	r21, 0x45	; 69
    243a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    243e:	dc 01       	movw	r26, r24
    2440:	cb 01       	movw	r24, r22
    2442:	8f 83       	std	Y+7, r24	; 0x07
    2444:	98 87       	std	Y+8, r25	; 0x08
    2446:	a9 87       	std	Y+9, r26	; 0x09
    2448:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    244a:	6f 81       	ldd	r22, Y+7	; 0x07
    244c:	78 85       	ldd	r23, Y+8	; 0x08
    244e:	89 85       	ldd	r24, Y+9	; 0x09
    2450:	9a 85       	ldd	r25, Y+10	; 0x0a
    2452:	20 e0       	ldi	r18, 0x00	; 0
    2454:	30 e0       	ldi	r19, 0x00	; 0
    2456:	40 e8       	ldi	r20, 0x80	; 128
    2458:	5f e3       	ldi	r21, 0x3F	; 63
    245a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    245e:	88 23       	and	r24, r24
    2460:	2c f4       	brge	.+10     	; 0x246c <LED8X8_voidPrintMatrix64+0xd8>
		__ticks = 1;
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	90 e0       	ldi	r25, 0x00	; 0
    2466:	9e 83       	std	Y+6, r25	; 0x06
    2468:	8d 83       	std	Y+5, r24	; 0x05
    246a:	3f c0       	rjmp	.+126    	; 0x24ea <LED8X8_voidPrintMatrix64+0x156>
	else if (__tmp > 65535)
    246c:	6f 81       	ldd	r22, Y+7	; 0x07
    246e:	78 85       	ldd	r23, Y+8	; 0x08
    2470:	89 85       	ldd	r24, Y+9	; 0x09
    2472:	9a 85       	ldd	r25, Y+10	; 0x0a
    2474:	20 e0       	ldi	r18, 0x00	; 0
    2476:	3f ef       	ldi	r19, 0xFF	; 255
    2478:	4f e7       	ldi	r20, 0x7F	; 127
    247a:	57 e4       	ldi	r21, 0x47	; 71
    247c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2480:	18 16       	cp	r1, r24
    2482:	4c f5       	brge	.+82     	; 0x24d6 <LED8X8_voidPrintMatrix64+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2484:	6b 85       	ldd	r22, Y+11	; 0x0b
    2486:	7c 85       	ldd	r23, Y+12	; 0x0c
    2488:	8d 85       	ldd	r24, Y+13	; 0x0d
    248a:	9e 85       	ldd	r25, Y+14	; 0x0e
    248c:	20 e0       	ldi	r18, 0x00	; 0
    248e:	30 e0       	ldi	r19, 0x00	; 0
    2490:	40 e2       	ldi	r20, 0x20	; 32
    2492:	51 e4       	ldi	r21, 0x41	; 65
    2494:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2498:	dc 01       	movw	r26, r24
    249a:	cb 01       	movw	r24, r22
    249c:	bc 01       	movw	r22, r24
    249e:	cd 01       	movw	r24, r26
    24a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24a4:	dc 01       	movw	r26, r24
    24a6:	cb 01       	movw	r24, r22
    24a8:	9e 83       	std	Y+6, r25	; 0x06
    24aa:	8d 83       	std	Y+5, r24	; 0x05
    24ac:	0f c0       	rjmp	.+30     	; 0x24cc <LED8X8_voidPrintMatrix64+0x138>
    24ae:	80 e9       	ldi	r24, 0x90	; 144
    24b0:	91 e0       	ldi	r25, 0x01	; 1
    24b2:	9c 83       	std	Y+4, r25	; 0x04
    24b4:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    24b6:	8b 81       	ldd	r24, Y+3	; 0x03
    24b8:	9c 81       	ldd	r25, Y+4	; 0x04
    24ba:	01 97       	sbiw	r24, 0x01	; 1
    24bc:	f1 f7       	brne	.-4      	; 0x24ba <LED8X8_voidPrintMatrix64+0x126>
    24be:	9c 83       	std	Y+4, r25	; 0x04
    24c0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24c2:	8d 81       	ldd	r24, Y+5	; 0x05
    24c4:	9e 81       	ldd	r25, Y+6	; 0x06
    24c6:	01 97       	sbiw	r24, 0x01	; 1
    24c8:	9e 83       	std	Y+6, r25	; 0x06
    24ca:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24cc:	8d 81       	ldd	r24, Y+5	; 0x05
    24ce:	9e 81       	ldd	r25, Y+6	; 0x06
    24d0:	00 97       	sbiw	r24, 0x00	; 0
    24d2:	69 f7       	brne	.-38     	; 0x24ae <LED8X8_voidPrintMatrix64+0x11a>
    24d4:	14 c0       	rjmp	.+40     	; 0x24fe <LED8X8_voidPrintMatrix64+0x16a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24d6:	6f 81       	ldd	r22, Y+7	; 0x07
    24d8:	78 85       	ldd	r23, Y+8	; 0x08
    24da:	89 85       	ldd	r24, Y+9	; 0x09
    24dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    24de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24e2:	dc 01       	movw	r26, r24
    24e4:	cb 01       	movw	r24, r22
    24e6:	9e 83       	std	Y+6, r25	; 0x06
    24e8:	8d 83       	std	Y+5, r24	; 0x05
    24ea:	8d 81       	ldd	r24, Y+5	; 0x05
    24ec:	9e 81       	ldd	r25, Y+6	; 0x06
    24ee:	9a 83       	std	Y+2, r25	; 0x02
    24f0:	89 83       	std	Y+1, r24	; 0x01
    24f2:	89 81       	ldd	r24, Y+1	; 0x01
    24f4:	9a 81       	ldd	r25, Y+2	; 0x02
    24f6:	01 97       	sbiw	r24, 0x01	; 1
    24f8:	f1 f7       	brne	.-4      	; 0x24f6 <LED8X8_voidPrintMatrix64+0x162>
    24fa:	9a 83       	std	Y+2, r25	; 0x02
    24fc:	89 83       	std	Y+1, r24	; 0x01


void LED8X8_voidPrintMatrix64(u8 * field)
{
    u8 aspeed = 1;
    for (int i = 0; i < 8; i++)
    24fe:	89 89       	ldd	r24, Y+17	; 0x11
    2500:	9a 89       	ldd	r25, Y+18	; 0x12
    2502:	01 96       	adiw	r24, 0x01	; 1
    2504:	9a 8b       	std	Y+18, r25	; 0x12
    2506:	89 8b       	std	Y+17, r24	; 0x11
    2508:	89 89       	ldd	r24, Y+17	; 0x11
    250a:	9a 89       	ldd	r25, Y+18	; 0x12
    250c:	88 30       	cpi	r24, 0x08	; 8
    250e:	91 05       	cpc	r25, r1
    2510:	0c f4       	brge	.+2      	; 0x2514 <LED8X8_voidPrintMatrix64+0x180>
    2512:	51 cf       	rjmp	.-350    	; 0x23b6 <LED8X8_voidPrintMatrix64+0x22>
        }

        LED8X8_voidRowOn(i);
        _delay_ms(aspeed);
    }
}
    2514:	65 96       	adiw	r28, 0x15	; 21
    2516:	0f b6       	in	r0, 0x3f	; 63
    2518:	f8 94       	cli
    251a:	de bf       	out	0x3e, r29	; 62
    251c:	0f be       	out	0x3f, r0	; 63
    251e:	cd bf       	out	0x3d, r28	; 61
    2520:	cf 91       	pop	r28
    2522:	df 91       	pop	r29
    2524:	08 95       	ret

00002526 <LED8X8_voidPrintMatrix8>:

void LED8X8_voidPrintMatrix8(u8 *field)
{
    2526:	df 93       	push	r29
    2528:	cf 93       	push	r28
    252a:	cd b7       	in	r28, 0x3d	; 61
    252c:	de b7       	in	r29, 0x3e	; 62
    252e:	65 97       	sbiw	r28, 0x15	; 21
    2530:	0f b6       	in	r0, 0x3f	; 63
    2532:	f8 94       	cli
    2534:	de bf       	out	0x3e, r29	; 62
    2536:	0f be       	out	0x3f, r0	; 63
    2538:	cd bf       	out	0x3d, r28	; 61
    253a:	9d 8b       	std	Y+21, r25	; 0x15
    253c:	8c 8b       	std	Y+20, r24	; 0x14
    u8 aspeed = 3;
    253e:	83 e0       	ldi	r24, 0x03	; 3
    2540:	8b 8b       	std	Y+19, r24	; 0x13
    for (int i = 0; i < 8; i++)
    2542:	1a 8a       	std	Y+18, r1	; 0x12
    2544:	19 8a       	std	Y+17, r1	; 0x11
    2546:	a9 c0       	rjmp	.+338    	; 0x269a <LED8X8_voidPrintMatrix8+0x174>
    {
        LED8X8_voidAllOff();
    2548:	0e 94 22 10 	call	0x2044	; 0x2044 <LED8X8_voidAllOff>
        for (int j = 0; j < 8; j++)
    254c:	18 8a       	std	Y+16, r1	; 0x10
    254e:	1f 86       	std	Y+15, r1	; 0x0f
    2550:	1e c0       	rjmp	.+60     	; 0x258e <LED8X8_voidPrintMatrix8+0x68>
        {
            if (GET_BIT(field[i], j) == 1)
    2552:	29 89       	ldd	r18, Y+17	; 0x11
    2554:	3a 89       	ldd	r19, Y+18	; 0x12
    2556:	8c 89       	ldd	r24, Y+20	; 0x14
    2558:	9d 89       	ldd	r25, Y+21	; 0x15
    255a:	fc 01       	movw	r30, r24
    255c:	e2 0f       	add	r30, r18
    255e:	f3 1f       	adc	r31, r19
    2560:	80 81       	ld	r24, Z
    2562:	88 2f       	mov	r24, r24
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	0f 84       	ldd	r0, Y+15	; 0x0f
    2568:	02 c0       	rjmp	.+4      	; 0x256e <LED8X8_voidPrintMatrix8+0x48>
    256a:	95 95       	asr	r25
    256c:	87 95       	ror	r24
    256e:	0a 94       	dec	r0
    2570:	e2 f7       	brpl	.-8      	; 0x256a <LED8X8_voidPrintMatrix8+0x44>
    2572:	88 2f       	mov	r24, r24
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	81 70       	andi	r24, 0x01	; 1
    2578:	90 70       	andi	r25, 0x00	; 0
    257a:	88 23       	and	r24, r24
    257c:	19 f0       	breq	.+6      	; 0x2584 <LED8X8_voidPrintMatrix8+0x5e>
                LED8X8_voidColOn(j);
    257e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2580:	0e 94 a5 10 	call	0x214a	; 0x214a <LED8X8_voidColOn>
{
    u8 aspeed = 3;
    for (int i = 0; i < 8; i++)
    {
        LED8X8_voidAllOff();
        for (int j = 0; j < 8; j++)
    2584:	8f 85       	ldd	r24, Y+15	; 0x0f
    2586:	98 89       	ldd	r25, Y+16	; 0x10
    2588:	01 96       	adiw	r24, 0x01	; 1
    258a:	98 8b       	std	Y+16, r25	; 0x10
    258c:	8f 87       	std	Y+15, r24	; 0x0f
    258e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2590:	98 89       	ldd	r25, Y+16	; 0x10
    2592:	88 30       	cpi	r24, 0x08	; 8
    2594:	91 05       	cpc	r25, r1
    2596:	ec f2       	brlt	.-70     	; 0x2552 <LED8X8_voidPrintMatrix8+0x2c>
        {
            if (GET_BIT(field[i], j) == 1)
                LED8X8_voidColOn(j);
        }
        LED8X8_voidRowOn(i);
    2598:	89 89       	ldd	r24, Y+17	; 0x11
    259a:	0e 94 31 10 	call	0x2062	; 0x2062 <LED8X8_voidRowOn>
        _delay_ms(aspeed);
    259e:	8b 89       	ldd	r24, Y+19	; 0x13
    25a0:	88 2f       	mov	r24, r24
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	a0 e0       	ldi	r26, 0x00	; 0
    25a6:	b0 e0       	ldi	r27, 0x00	; 0
    25a8:	bc 01       	movw	r22, r24
    25aa:	cd 01       	movw	r24, r26
    25ac:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    25b0:	dc 01       	movw	r26, r24
    25b2:	cb 01       	movw	r24, r22
    25b4:	8b 87       	std	Y+11, r24	; 0x0b
    25b6:	9c 87       	std	Y+12, r25	; 0x0c
    25b8:	ad 87       	std	Y+13, r26	; 0x0d
    25ba:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    25be:	7c 85       	ldd	r23, Y+12	; 0x0c
    25c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    25c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    25c4:	20 e0       	ldi	r18, 0x00	; 0
    25c6:	30 e0       	ldi	r19, 0x00	; 0
    25c8:	4a e7       	ldi	r20, 0x7A	; 122
    25ca:	55 e4       	ldi	r21, 0x45	; 69
    25cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25d0:	dc 01       	movw	r26, r24
    25d2:	cb 01       	movw	r24, r22
    25d4:	8f 83       	std	Y+7, r24	; 0x07
    25d6:	98 87       	std	Y+8, r25	; 0x08
    25d8:	a9 87       	std	Y+9, r26	; 0x09
    25da:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    25dc:	6f 81       	ldd	r22, Y+7	; 0x07
    25de:	78 85       	ldd	r23, Y+8	; 0x08
    25e0:	89 85       	ldd	r24, Y+9	; 0x09
    25e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    25e4:	20 e0       	ldi	r18, 0x00	; 0
    25e6:	30 e0       	ldi	r19, 0x00	; 0
    25e8:	40 e8       	ldi	r20, 0x80	; 128
    25ea:	5f e3       	ldi	r21, 0x3F	; 63
    25ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25f0:	88 23       	and	r24, r24
    25f2:	2c f4       	brge	.+10     	; 0x25fe <LED8X8_voidPrintMatrix8+0xd8>
		__ticks = 1;
    25f4:	81 e0       	ldi	r24, 0x01	; 1
    25f6:	90 e0       	ldi	r25, 0x00	; 0
    25f8:	9e 83       	std	Y+6, r25	; 0x06
    25fa:	8d 83       	std	Y+5, r24	; 0x05
    25fc:	3f c0       	rjmp	.+126    	; 0x267c <LED8X8_voidPrintMatrix8+0x156>
	else if (__tmp > 65535)
    25fe:	6f 81       	ldd	r22, Y+7	; 0x07
    2600:	78 85       	ldd	r23, Y+8	; 0x08
    2602:	89 85       	ldd	r24, Y+9	; 0x09
    2604:	9a 85       	ldd	r25, Y+10	; 0x0a
    2606:	20 e0       	ldi	r18, 0x00	; 0
    2608:	3f ef       	ldi	r19, 0xFF	; 255
    260a:	4f e7       	ldi	r20, 0x7F	; 127
    260c:	57 e4       	ldi	r21, 0x47	; 71
    260e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2612:	18 16       	cp	r1, r24
    2614:	4c f5       	brge	.+82     	; 0x2668 <LED8X8_voidPrintMatrix8+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2616:	6b 85       	ldd	r22, Y+11	; 0x0b
    2618:	7c 85       	ldd	r23, Y+12	; 0x0c
    261a:	8d 85       	ldd	r24, Y+13	; 0x0d
    261c:	9e 85       	ldd	r25, Y+14	; 0x0e
    261e:	20 e0       	ldi	r18, 0x00	; 0
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	40 e2       	ldi	r20, 0x20	; 32
    2624:	51 e4       	ldi	r21, 0x41	; 65
    2626:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    262a:	dc 01       	movw	r26, r24
    262c:	cb 01       	movw	r24, r22
    262e:	bc 01       	movw	r22, r24
    2630:	cd 01       	movw	r24, r26
    2632:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2636:	dc 01       	movw	r26, r24
    2638:	cb 01       	movw	r24, r22
    263a:	9e 83       	std	Y+6, r25	; 0x06
    263c:	8d 83       	std	Y+5, r24	; 0x05
    263e:	0f c0       	rjmp	.+30     	; 0x265e <LED8X8_voidPrintMatrix8+0x138>
    2640:	80 e9       	ldi	r24, 0x90	; 144
    2642:	91 e0       	ldi	r25, 0x01	; 1
    2644:	9c 83       	std	Y+4, r25	; 0x04
    2646:	8b 83       	std	Y+3, r24	; 0x03
    2648:	8b 81       	ldd	r24, Y+3	; 0x03
    264a:	9c 81       	ldd	r25, Y+4	; 0x04
    264c:	01 97       	sbiw	r24, 0x01	; 1
    264e:	f1 f7       	brne	.-4      	; 0x264c <LED8X8_voidPrintMatrix8+0x126>
    2650:	9c 83       	std	Y+4, r25	; 0x04
    2652:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2654:	8d 81       	ldd	r24, Y+5	; 0x05
    2656:	9e 81       	ldd	r25, Y+6	; 0x06
    2658:	01 97       	sbiw	r24, 0x01	; 1
    265a:	9e 83       	std	Y+6, r25	; 0x06
    265c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    265e:	8d 81       	ldd	r24, Y+5	; 0x05
    2660:	9e 81       	ldd	r25, Y+6	; 0x06
    2662:	00 97       	sbiw	r24, 0x00	; 0
    2664:	69 f7       	brne	.-38     	; 0x2640 <LED8X8_voidPrintMatrix8+0x11a>
    2666:	14 c0       	rjmp	.+40     	; 0x2690 <LED8X8_voidPrintMatrix8+0x16a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2668:	6f 81       	ldd	r22, Y+7	; 0x07
    266a:	78 85       	ldd	r23, Y+8	; 0x08
    266c:	89 85       	ldd	r24, Y+9	; 0x09
    266e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2670:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2674:	dc 01       	movw	r26, r24
    2676:	cb 01       	movw	r24, r22
    2678:	9e 83       	std	Y+6, r25	; 0x06
    267a:	8d 83       	std	Y+5, r24	; 0x05
    267c:	8d 81       	ldd	r24, Y+5	; 0x05
    267e:	9e 81       	ldd	r25, Y+6	; 0x06
    2680:	9a 83       	std	Y+2, r25	; 0x02
    2682:	89 83       	std	Y+1, r24	; 0x01
    2684:	89 81       	ldd	r24, Y+1	; 0x01
    2686:	9a 81       	ldd	r25, Y+2	; 0x02
    2688:	01 97       	sbiw	r24, 0x01	; 1
    268a:	f1 f7       	brne	.-4      	; 0x2688 <LED8X8_voidPrintMatrix8+0x162>
    268c:	9a 83       	std	Y+2, r25	; 0x02
    268e:	89 83       	std	Y+1, r24	; 0x01
}

void LED8X8_voidPrintMatrix8(u8 *field)
{
    u8 aspeed = 3;
    for (int i = 0; i < 8; i++)
    2690:	89 89       	ldd	r24, Y+17	; 0x11
    2692:	9a 89       	ldd	r25, Y+18	; 0x12
    2694:	01 96       	adiw	r24, 0x01	; 1
    2696:	9a 8b       	std	Y+18, r25	; 0x12
    2698:	89 8b       	std	Y+17, r24	; 0x11
    269a:	89 89       	ldd	r24, Y+17	; 0x11
    269c:	9a 89       	ldd	r25, Y+18	; 0x12
    269e:	88 30       	cpi	r24, 0x08	; 8
    26a0:	91 05       	cpc	r25, r1
    26a2:	0c f4       	brge	.+2      	; 0x26a6 <LED8X8_voidPrintMatrix8+0x180>
    26a4:	51 cf       	rjmp	.-350    	; 0x2548 <LED8X8_voidPrintMatrix8+0x22>
                LED8X8_voidColOn(j);
        }
        LED8X8_voidRowOn(i);
        _delay_ms(aspeed);
    }
}
    26a6:	65 96       	adiw	r28, 0x15	; 21
    26a8:	0f b6       	in	r0, 0x3f	; 63
    26aa:	f8 94       	cli
    26ac:	de bf       	out	0x3e, r29	; 62
    26ae:	0f be       	out	0x3f, r0	; 63
    26b0:	cd bf       	out	0x3d, r28	; 61
    26b2:	cf 91       	pop	r28
    26b4:	df 91       	pop	r29
    26b6:	08 95       	ret

000026b8 <LCD_voidInitialize>:
#include "LCD_priv.h"
#include "LCD_cfg.h"
#include "LCD_int.h"

void LCD_voidInitialize()
{
    26b8:	0f 93       	push	r16
    26ba:	1f 93       	push	r17
    26bc:	df 93       	push	r29
    26be:	cf 93       	push	r28
    26c0:	cd b7       	in	r28, 0x3d	; 61
    26c2:	de b7       	in	r29, 0x3e	; 62
    26c4:	c4 55       	subi	r28, 0x54	; 84
    26c6:	d0 40       	sbci	r29, 0x00	; 0
    26c8:	0f b6       	in	r0, 0x3f	; 63
    26ca:	f8 94       	cli
    26cc:	de bf       	out	0x3e, r29	; 62
    26ce:	0f be       	out	0x3f, r0	; 63
    26d0:	cd bf       	out	0x3d, r28	; 61
    26d2:	fe 01       	movw	r30, r28
    26d4:	ef 5a       	subi	r30, 0xAF	; 175
    26d6:	ff 4f       	sbci	r31, 0xFF	; 255
    26d8:	80 e0       	ldi	r24, 0x00	; 0
    26da:	90 e0       	ldi	r25, 0x00	; 0
    26dc:	ac e0       	ldi	r26, 0x0C	; 12
    26de:	b2 e4       	ldi	r27, 0x42	; 66
    26e0:	80 83       	st	Z, r24
    26e2:	91 83       	std	Z+1, r25	; 0x01
    26e4:	a2 83       	std	Z+2, r26	; 0x02
    26e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26e8:	8e 01       	movw	r16, r28
    26ea:	03 5b       	subi	r16, 0xB3	; 179
    26ec:	1f 4f       	sbci	r17, 0xFF	; 255
    26ee:	fe 01       	movw	r30, r28
    26f0:	ef 5a       	subi	r30, 0xAF	; 175
    26f2:	ff 4f       	sbci	r31, 0xFF	; 255
    26f4:	60 81       	ld	r22, Z
    26f6:	71 81       	ldd	r23, Z+1	; 0x01
    26f8:	82 81       	ldd	r24, Z+2	; 0x02
    26fa:	93 81       	ldd	r25, Z+3	; 0x03
    26fc:	20 e0       	ldi	r18, 0x00	; 0
    26fe:	30 e0       	ldi	r19, 0x00	; 0
    2700:	4a e7       	ldi	r20, 0x7A	; 122
    2702:	55 e4       	ldi	r21, 0x45	; 69
    2704:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2708:	dc 01       	movw	r26, r24
    270a:	cb 01       	movw	r24, r22
    270c:	f8 01       	movw	r30, r16
    270e:	80 83       	st	Z, r24
    2710:	91 83       	std	Z+1, r25	; 0x01
    2712:	a2 83       	std	Z+2, r26	; 0x02
    2714:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2716:	fe 01       	movw	r30, r28
    2718:	e3 5b       	subi	r30, 0xB3	; 179
    271a:	ff 4f       	sbci	r31, 0xFF	; 255
    271c:	60 81       	ld	r22, Z
    271e:	71 81       	ldd	r23, Z+1	; 0x01
    2720:	82 81       	ldd	r24, Z+2	; 0x02
    2722:	93 81       	ldd	r25, Z+3	; 0x03
    2724:	20 e0       	ldi	r18, 0x00	; 0
    2726:	30 e0       	ldi	r19, 0x00	; 0
    2728:	40 e8       	ldi	r20, 0x80	; 128
    272a:	5f e3       	ldi	r21, 0x3F	; 63
    272c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2730:	88 23       	and	r24, r24
    2732:	44 f4       	brge	.+16     	; 0x2744 <LCD_voidInitialize+0x8c>
		__ticks = 1;
    2734:	fe 01       	movw	r30, r28
    2736:	e5 5b       	subi	r30, 0xB5	; 181
    2738:	ff 4f       	sbci	r31, 0xFF	; 255
    273a:	81 e0       	ldi	r24, 0x01	; 1
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	91 83       	std	Z+1, r25	; 0x01
    2740:	80 83       	st	Z, r24
    2742:	64 c0       	rjmp	.+200    	; 0x280c <LCD_voidInitialize+0x154>
	else if (__tmp > 65535)
    2744:	fe 01       	movw	r30, r28
    2746:	e3 5b       	subi	r30, 0xB3	; 179
    2748:	ff 4f       	sbci	r31, 0xFF	; 255
    274a:	60 81       	ld	r22, Z
    274c:	71 81       	ldd	r23, Z+1	; 0x01
    274e:	82 81       	ldd	r24, Z+2	; 0x02
    2750:	93 81       	ldd	r25, Z+3	; 0x03
    2752:	20 e0       	ldi	r18, 0x00	; 0
    2754:	3f ef       	ldi	r19, 0xFF	; 255
    2756:	4f e7       	ldi	r20, 0x7F	; 127
    2758:	57 e4       	ldi	r21, 0x47	; 71
    275a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    275e:	18 16       	cp	r1, r24
    2760:	0c f0       	brlt	.+2      	; 0x2764 <LCD_voidInitialize+0xac>
    2762:	43 c0       	rjmp	.+134    	; 0x27ea <LCD_voidInitialize+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2764:	fe 01       	movw	r30, r28
    2766:	ef 5a       	subi	r30, 0xAF	; 175
    2768:	ff 4f       	sbci	r31, 0xFF	; 255
    276a:	60 81       	ld	r22, Z
    276c:	71 81       	ldd	r23, Z+1	; 0x01
    276e:	82 81       	ldd	r24, Z+2	; 0x02
    2770:	93 81       	ldd	r25, Z+3	; 0x03
    2772:	20 e0       	ldi	r18, 0x00	; 0
    2774:	30 e0       	ldi	r19, 0x00	; 0
    2776:	40 e2       	ldi	r20, 0x20	; 32
    2778:	51 e4       	ldi	r21, 0x41	; 65
    277a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    277e:	dc 01       	movw	r26, r24
    2780:	cb 01       	movw	r24, r22
    2782:	8e 01       	movw	r16, r28
    2784:	05 5b       	subi	r16, 0xB5	; 181
    2786:	1f 4f       	sbci	r17, 0xFF	; 255
    2788:	bc 01       	movw	r22, r24
    278a:	cd 01       	movw	r24, r26
    278c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2790:	dc 01       	movw	r26, r24
    2792:	cb 01       	movw	r24, r22
    2794:	f8 01       	movw	r30, r16
    2796:	91 83       	std	Z+1, r25	; 0x01
    2798:	80 83       	st	Z, r24
    279a:	1f c0       	rjmp	.+62     	; 0x27da <LCD_voidInitialize+0x122>
    279c:	fe 01       	movw	r30, r28
    279e:	e7 5b       	subi	r30, 0xB7	; 183
    27a0:	ff 4f       	sbci	r31, 0xFF	; 255
    27a2:	80 e9       	ldi	r24, 0x90	; 144
    27a4:	91 e0       	ldi	r25, 0x01	; 1
    27a6:	91 83       	std	Z+1, r25	; 0x01
    27a8:	80 83       	st	Z, r24
    27aa:	fe 01       	movw	r30, r28
    27ac:	e7 5b       	subi	r30, 0xB7	; 183
    27ae:	ff 4f       	sbci	r31, 0xFF	; 255
    27b0:	80 81       	ld	r24, Z
    27b2:	91 81       	ldd	r25, Z+1	; 0x01
    27b4:	01 97       	sbiw	r24, 0x01	; 1
    27b6:	f1 f7       	brne	.-4      	; 0x27b4 <LCD_voidInitialize+0xfc>
    27b8:	fe 01       	movw	r30, r28
    27ba:	e7 5b       	subi	r30, 0xB7	; 183
    27bc:	ff 4f       	sbci	r31, 0xFF	; 255
    27be:	91 83       	std	Z+1, r25	; 0x01
    27c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27c2:	de 01       	movw	r26, r28
    27c4:	a5 5b       	subi	r26, 0xB5	; 181
    27c6:	bf 4f       	sbci	r27, 0xFF	; 255
    27c8:	fe 01       	movw	r30, r28
    27ca:	e5 5b       	subi	r30, 0xB5	; 181
    27cc:	ff 4f       	sbci	r31, 0xFF	; 255
    27ce:	80 81       	ld	r24, Z
    27d0:	91 81       	ldd	r25, Z+1	; 0x01
    27d2:	01 97       	sbiw	r24, 0x01	; 1
    27d4:	11 96       	adiw	r26, 0x01	; 1
    27d6:	9c 93       	st	X, r25
    27d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27da:	fe 01       	movw	r30, r28
    27dc:	e5 5b       	subi	r30, 0xB5	; 181
    27de:	ff 4f       	sbci	r31, 0xFF	; 255
    27e0:	80 81       	ld	r24, Z
    27e2:	91 81       	ldd	r25, Z+1	; 0x01
    27e4:	00 97       	sbiw	r24, 0x00	; 0
    27e6:	d1 f6       	brne	.-76     	; 0x279c <LCD_voidInitialize+0xe4>
    27e8:	27 c0       	rjmp	.+78     	; 0x2838 <LCD_voidInitialize+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27ea:	8e 01       	movw	r16, r28
    27ec:	05 5b       	subi	r16, 0xB5	; 181
    27ee:	1f 4f       	sbci	r17, 0xFF	; 255
    27f0:	fe 01       	movw	r30, r28
    27f2:	e3 5b       	subi	r30, 0xB3	; 179
    27f4:	ff 4f       	sbci	r31, 0xFF	; 255
    27f6:	60 81       	ld	r22, Z
    27f8:	71 81       	ldd	r23, Z+1	; 0x01
    27fa:	82 81       	ldd	r24, Z+2	; 0x02
    27fc:	93 81       	ldd	r25, Z+3	; 0x03
    27fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2802:	dc 01       	movw	r26, r24
    2804:	cb 01       	movw	r24, r22
    2806:	f8 01       	movw	r30, r16
    2808:	91 83       	std	Z+1, r25	; 0x01
    280a:	80 83       	st	Z, r24
    280c:	de 01       	movw	r26, r28
    280e:	a9 5b       	subi	r26, 0xB9	; 185
    2810:	bf 4f       	sbci	r27, 0xFF	; 255
    2812:	fe 01       	movw	r30, r28
    2814:	e5 5b       	subi	r30, 0xB5	; 181
    2816:	ff 4f       	sbci	r31, 0xFF	; 255
    2818:	80 81       	ld	r24, Z
    281a:	91 81       	ldd	r25, Z+1	; 0x01
    281c:	8d 93       	st	X+, r24
    281e:	9c 93       	st	X, r25
    2820:	fe 01       	movw	r30, r28
    2822:	e9 5b       	subi	r30, 0xB9	; 185
    2824:	ff 4f       	sbci	r31, 0xFF	; 255
    2826:	80 81       	ld	r24, Z
    2828:	91 81       	ldd	r25, Z+1	; 0x01
    282a:	01 97       	sbiw	r24, 0x01	; 1
    282c:	f1 f7       	brne	.-4      	; 0x282a <LCD_voidInitialize+0x172>
    282e:	fe 01       	movw	r30, r28
    2830:	e9 5b       	subi	r30, 0xB9	; 185
    2832:	ff 4f       	sbci	r31, 0xFF	; 255
    2834:	91 83       	std	Z+1, r25	; 0x01
    2836:	80 83       	st	Z, r24
#if (LCD_MODE == FOUR_BIT)
    {
        _delay_ms(35);

        LCD_voidWriteCmd(0b00000010);
    2838:	82 e0       	ldi	r24, 0x02	; 2
    283a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    283e:	fe 01       	movw	r30, r28
    2840:	ed 5b       	subi	r30, 0xBD	; 189
    2842:	ff 4f       	sbci	r31, 0xFF	; 255
    2844:	80 e0       	ldi	r24, 0x00	; 0
    2846:	90 e0       	ldi	r25, 0x00	; 0
    2848:	a0 ea       	ldi	r26, 0xA0	; 160
    284a:	b0 e4       	ldi	r27, 0x40	; 64
    284c:	80 83       	st	Z, r24
    284e:	91 83       	std	Z+1, r25	; 0x01
    2850:	a2 83       	std	Z+2, r26	; 0x02
    2852:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2854:	8e 01       	movw	r16, r28
    2856:	01 5c       	subi	r16, 0xC1	; 193
    2858:	1f 4f       	sbci	r17, 0xFF	; 255
    285a:	fe 01       	movw	r30, r28
    285c:	ed 5b       	subi	r30, 0xBD	; 189
    285e:	ff 4f       	sbci	r31, 0xFF	; 255
    2860:	60 81       	ld	r22, Z
    2862:	71 81       	ldd	r23, Z+1	; 0x01
    2864:	82 81       	ldd	r24, Z+2	; 0x02
    2866:	93 81       	ldd	r25, Z+3	; 0x03
    2868:	20 e0       	ldi	r18, 0x00	; 0
    286a:	30 e0       	ldi	r19, 0x00	; 0
    286c:	4a e7       	ldi	r20, 0x7A	; 122
    286e:	55 e4       	ldi	r21, 0x45	; 69
    2870:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2874:	dc 01       	movw	r26, r24
    2876:	cb 01       	movw	r24, r22
    2878:	f8 01       	movw	r30, r16
    287a:	80 83       	st	Z, r24
    287c:	91 83       	std	Z+1, r25	; 0x01
    287e:	a2 83       	std	Z+2, r26	; 0x02
    2880:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2882:	fe 01       	movw	r30, r28
    2884:	ff 96       	adiw	r30, 0x3f	; 63
    2886:	60 81       	ld	r22, Z
    2888:	71 81       	ldd	r23, Z+1	; 0x01
    288a:	82 81       	ldd	r24, Z+2	; 0x02
    288c:	93 81       	ldd	r25, Z+3	; 0x03
    288e:	20 e0       	ldi	r18, 0x00	; 0
    2890:	30 e0       	ldi	r19, 0x00	; 0
    2892:	40 e8       	ldi	r20, 0x80	; 128
    2894:	5f e3       	ldi	r21, 0x3F	; 63
    2896:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    289a:	88 23       	and	r24, r24
    289c:	2c f4       	brge	.+10     	; 0x28a8 <LCD_voidInitialize+0x1f0>
		__ticks = 1;
    289e:	81 e0       	ldi	r24, 0x01	; 1
    28a0:	90 e0       	ldi	r25, 0x00	; 0
    28a2:	9e af       	std	Y+62, r25	; 0x3e
    28a4:	8d af       	std	Y+61, r24	; 0x3d
    28a6:	46 c0       	rjmp	.+140    	; 0x2934 <LCD_voidInitialize+0x27c>
	else if (__tmp > 65535)
    28a8:	fe 01       	movw	r30, r28
    28aa:	ff 96       	adiw	r30, 0x3f	; 63
    28ac:	60 81       	ld	r22, Z
    28ae:	71 81       	ldd	r23, Z+1	; 0x01
    28b0:	82 81       	ldd	r24, Z+2	; 0x02
    28b2:	93 81       	ldd	r25, Z+3	; 0x03
    28b4:	20 e0       	ldi	r18, 0x00	; 0
    28b6:	3f ef       	ldi	r19, 0xFF	; 255
    28b8:	4f e7       	ldi	r20, 0x7F	; 127
    28ba:	57 e4       	ldi	r21, 0x47	; 71
    28bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28c0:	18 16       	cp	r1, r24
    28c2:	64 f5       	brge	.+88     	; 0x291c <LCD_voidInitialize+0x264>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28c4:	fe 01       	movw	r30, r28
    28c6:	ed 5b       	subi	r30, 0xBD	; 189
    28c8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ca:	60 81       	ld	r22, Z
    28cc:	71 81       	ldd	r23, Z+1	; 0x01
    28ce:	82 81       	ldd	r24, Z+2	; 0x02
    28d0:	93 81       	ldd	r25, Z+3	; 0x03
    28d2:	20 e0       	ldi	r18, 0x00	; 0
    28d4:	30 e0       	ldi	r19, 0x00	; 0
    28d6:	40 e2       	ldi	r20, 0x20	; 32
    28d8:	51 e4       	ldi	r21, 0x41	; 65
    28da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28de:	dc 01       	movw	r26, r24
    28e0:	cb 01       	movw	r24, r22
    28e2:	bc 01       	movw	r22, r24
    28e4:	cd 01       	movw	r24, r26
    28e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28ea:	dc 01       	movw	r26, r24
    28ec:	cb 01       	movw	r24, r22
    28ee:	9e af       	std	Y+62, r25	; 0x3e
    28f0:	8d af       	std	Y+61, r24	; 0x3d
    28f2:	0f c0       	rjmp	.+30     	; 0x2912 <LCD_voidInitialize+0x25a>
    28f4:	80 e9       	ldi	r24, 0x90	; 144
    28f6:	91 e0       	ldi	r25, 0x01	; 1
    28f8:	9c af       	std	Y+60, r25	; 0x3c
    28fa:	8b af       	std	Y+59, r24	; 0x3b
    28fc:	8b ad       	ldd	r24, Y+59	; 0x3b
    28fe:	9c ad       	ldd	r25, Y+60	; 0x3c
    2900:	01 97       	sbiw	r24, 0x01	; 1
    2902:	f1 f7       	brne	.-4      	; 0x2900 <LCD_voidInitialize+0x248>
    2904:	9c af       	std	Y+60, r25	; 0x3c
    2906:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2908:	8d ad       	ldd	r24, Y+61	; 0x3d
    290a:	9e ad       	ldd	r25, Y+62	; 0x3e
    290c:	01 97       	sbiw	r24, 0x01	; 1
    290e:	9e af       	std	Y+62, r25	; 0x3e
    2910:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2912:	8d ad       	ldd	r24, Y+61	; 0x3d
    2914:	9e ad       	ldd	r25, Y+62	; 0x3e
    2916:	00 97       	sbiw	r24, 0x00	; 0
    2918:	69 f7       	brne	.-38     	; 0x28f4 <LCD_voidInitialize+0x23c>
    291a:	16 c0       	rjmp	.+44     	; 0x2948 <LCD_voidInitialize+0x290>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    291c:	fe 01       	movw	r30, r28
    291e:	ff 96       	adiw	r30, 0x3f	; 63
    2920:	60 81       	ld	r22, Z
    2922:	71 81       	ldd	r23, Z+1	; 0x01
    2924:	82 81       	ldd	r24, Z+2	; 0x02
    2926:	93 81       	ldd	r25, Z+3	; 0x03
    2928:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    292c:	dc 01       	movw	r26, r24
    292e:	cb 01       	movw	r24, r22
    2930:	9e af       	std	Y+62, r25	; 0x3e
    2932:	8d af       	std	Y+61, r24	; 0x3d
    2934:	8d ad       	ldd	r24, Y+61	; 0x3d
    2936:	9e ad       	ldd	r25, Y+62	; 0x3e
    2938:	9a af       	std	Y+58, r25	; 0x3a
    293a:	89 af       	std	Y+57, r24	; 0x39
    293c:	89 ad       	ldd	r24, Y+57	; 0x39
    293e:	9a ad       	ldd	r25, Y+58	; 0x3a
    2940:	01 97       	sbiw	r24, 0x01	; 1
    2942:	f1 f7       	brne	.-4      	; 0x2940 <LCD_voidInitialize+0x288>
    2944:	9a af       	std	Y+58, r25	; 0x3a
    2946:	89 af       	std	Y+57, r24	; 0x39
        _delay_ms(5);

        LCD_voidWriteCmd(0b00101000);
    2948:	88 e2       	ldi	r24, 0x28	; 40
    294a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    294e:	80 e0       	ldi	r24, 0x00	; 0
    2950:	90 e0       	ldi	r25, 0x00	; 0
    2952:	a0 e8       	ldi	r26, 0x80	; 128
    2954:	bf e3       	ldi	r27, 0x3F	; 63
    2956:	8d ab       	std	Y+53, r24	; 0x35
    2958:	9e ab       	std	Y+54, r25	; 0x36
    295a:	af ab       	std	Y+55, r26	; 0x37
    295c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    295e:	6d a9       	ldd	r22, Y+53	; 0x35
    2960:	7e a9       	ldd	r23, Y+54	; 0x36
    2962:	8f a9       	ldd	r24, Y+55	; 0x37
    2964:	98 ad       	ldd	r25, Y+56	; 0x38
    2966:	20 e0       	ldi	r18, 0x00	; 0
    2968:	30 e0       	ldi	r19, 0x00	; 0
    296a:	4a e7       	ldi	r20, 0x7A	; 122
    296c:	55 e4       	ldi	r21, 0x45	; 69
    296e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2972:	dc 01       	movw	r26, r24
    2974:	cb 01       	movw	r24, r22
    2976:	89 ab       	std	Y+49, r24	; 0x31
    2978:	9a ab       	std	Y+50, r25	; 0x32
    297a:	ab ab       	std	Y+51, r26	; 0x33
    297c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    297e:	69 a9       	ldd	r22, Y+49	; 0x31
    2980:	7a a9       	ldd	r23, Y+50	; 0x32
    2982:	8b a9       	ldd	r24, Y+51	; 0x33
    2984:	9c a9       	ldd	r25, Y+52	; 0x34
    2986:	20 e0       	ldi	r18, 0x00	; 0
    2988:	30 e0       	ldi	r19, 0x00	; 0
    298a:	40 e8       	ldi	r20, 0x80	; 128
    298c:	5f e3       	ldi	r21, 0x3F	; 63
    298e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2992:	88 23       	and	r24, r24
    2994:	2c f4       	brge	.+10     	; 0x29a0 <LCD_voidInitialize+0x2e8>
		__ticks = 1;
    2996:	81 e0       	ldi	r24, 0x01	; 1
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	98 ab       	std	Y+48, r25	; 0x30
    299c:	8f a7       	std	Y+47, r24	; 0x2f
    299e:	3f c0       	rjmp	.+126    	; 0x2a1e <LCD_voidInitialize+0x366>
	else if (__tmp > 65535)
    29a0:	69 a9       	ldd	r22, Y+49	; 0x31
    29a2:	7a a9       	ldd	r23, Y+50	; 0x32
    29a4:	8b a9       	ldd	r24, Y+51	; 0x33
    29a6:	9c a9       	ldd	r25, Y+52	; 0x34
    29a8:	20 e0       	ldi	r18, 0x00	; 0
    29aa:	3f ef       	ldi	r19, 0xFF	; 255
    29ac:	4f e7       	ldi	r20, 0x7F	; 127
    29ae:	57 e4       	ldi	r21, 0x47	; 71
    29b0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29b4:	18 16       	cp	r1, r24
    29b6:	4c f5       	brge	.+82     	; 0x2a0a <LCD_voidInitialize+0x352>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29b8:	6d a9       	ldd	r22, Y+53	; 0x35
    29ba:	7e a9       	ldd	r23, Y+54	; 0x36
    29bc:	8f a9       	ldd	r24, Y+55	; 0x37
    29be:	98 ad       	ldd	r25, Y+56	; 0x38
    29c0:	20 e0       	ldi	r18, 0x00	; 0
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	40 e2       	ldi	r20, 0x20	; 32
    29c6:	51 e4       	ldi	r21, 0x41	; 65
    29c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29cc:	dc 01       	movw	r26, r24
    29ce:	cb 01       	movw	r24, r22
    29d0:	bc 01       	movw	r22, r24
    29d2:	cd 01       	movw	r24, r26
    29d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29d8:	dc 01       	movw	r26, r24
    29da:	cb 01       	movw	r24, r22
    29dc:	98 ab       	std	Y+48, r25	; 0x30
    29de:	8f a7       	std	Y+47, r24	; 0x2f
    29e0:	0f c0       	rjmp	.+30     	; 0x2a00 <LCD_voidInitialize+0x348>
    29e2:	80 e9       	ldi	r24, 0x90	; 144
    29e4:	91 e0       	ldi	r25, 0x01	; 1
    29e6:	9e a7       	std	Y+46, r25	; 0x2e
    29e8:	8d a7       	std	Y+45, r24	; 0x2d
    29ea:	8d a5       	ldd	r24, Y+45	; 0x2d
    29ec:	9e a5       	ldd	r25, Y+46	; 0x2e
    29ee:	01 97       	sbiw	r24, 0x01	; 1
    29f0:	f1 f7       	brne	.-4      	; 0x29ee <LCD_voidInitialize+0x336>
    29f2:	9e a7       	std	Y+46, r25	; 0x2e
    29f4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29f6:	8f a5       	ldd	r24, Y+47	; 0x2f
    29f8:	98 a9       	ldd	r25, Y+48	; 0x30
    29fa:	01 97       	sbiw	r24, 0x01	; 1
    29fc:	98 ab       	std	Y+48, r25	; 0x30
    29fe:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a00:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a02:	98 a9       	ldd	r25, Y+48	; 0x30
    2a04:	00 97       	sbiw	r24, 0x00	; 0
    2a06:	69 f7       	brne	.-38     	; 0x29e2 <LCD_voidInitialize+0x32a>
    2a08:	14 c0       	rjmp	.+40     	; 0x2a32 <LCD_voidInitialize+0x37a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a0a:	69 a9       	ldd	r22, Y+49	; 0x31
    2a0c:	7a a9       	ldd	r23, Y+50	; 0x32
    2a0e:	8b a9       	ldd	r24, Y+51	; 0x33
    2a10:	9c a9       	ldd	r25, Y+52	; 0x34
    2a12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a16:	dc 01       	movw	r26, r24
    2a18:	cb 01       	movw	r24, r22
    2a1a:	98 ab       	std	Y+48, r25	; 0x30
    2a1c:	8f a7       	std	Y+47, r24	; 0x2f
    2a1e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a20:	98 a9       	ldd	r25, Y+48	; 0x30
    2a22:	9c a7       	std	Y+44, r25	; 0x2c
    2a24:	8b a7       	std	Y+43, r24	; 0x2b
    2a26:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a28:	9c a5       	ldd	r25, Y+44	; 0x2c
    2a2a:	01 97       	sbiw	r24, 0x01	; 1
    2a2c:	f1 f7       	brne	.-4      	; 0x2a2a <LCD_voidInitialize+0x372>
    2a2e:	9c a7       	std	Y+44, r25	; 0x2c
    2a30:	8b a7       	std	Y+43, r24	; 0x2b
        _delay_ms(1);

        LCD_voidWriteCmd(0b00000010);
    2a32:	82 e0       	ldi	r24, 0x02	; 2
    2a34:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    2a38:	80 e0       	ldi	r24, 0x00	; 0
    2a3a:	90 e0       	ldi	r25, 0x00	; 0
    2a3c:	a0 ea       	ldi	r26, 0xA0	; 160
    2a3e:	b0 e4       	ldi	r27, 0x40	; 64
    2a40:	8f a3       	std	Y+39, r24	; 0x27
    2a42:	98 a7       	std	Y+40, r25	; 0x28
    2a44:	a9 a7       	std	Y+41, r26	; 0x29
    2a46:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a48:	6f a1       	ldd	r22, Y+39	; 0x27
    2a4a:	78 a5       	ldd	r23, Y+40	; 0x28
    2a4c:	89 a5       	ldd	r24, Y+41	; 0x29
    2a4e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a50:	20 e0       	ldi	r18, 0x00	; 0
    2a52:	30 e0       	ldi	r19, 0x00	; 0
    2a54:	4a e7       	ldi	r20, 0x7A	; 122
    2a56:	55 e4       	ldi	r21, 0x45	; 69
    2a58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a5c:	dc 01       	movw	r26, r24
    2a5e:	cb 01       	movw	r24, r22
    2a60:	8b a3       	std	Y+35, r24	; 0x23
    2a62:	9c a3       	std	Y+36, r25	; 0x24
    2a64:	ad a3       	std	Y+37, r26	; 0x25
    2a66:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2a68:	6b a1       	ldd	r22, Y+35	; 0x23
    2a6a:	7c a1       	ldd	r23, Y+36	; 0x24
    2a6c:	8d a1       	ldd	r24, Y+37	; 0x25
    2a6e:	9e a1       	ldd	r25, Y+38	; 0x26
    2a70:	20 e0       	ldi	r18, 0x00	; 0
    2a72:	30 e0       	ldi	r19, 0x00	; 0
    2a74:	40 e8       	ldi	r20, 0x80	; 128
    2a76:	5f e3       	ldi	r21, 0x3F	; 63
    2a78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a7c:	88 23       	and	r24, r24
    2a7e:	2c f4       	brge	.+10     	; 0x2a8a <LCD_voidInitialize+0x3d2>
		__ticks = 1;
    2a80:	81 e0       	ldi	r24, 0x01	; 1
    2a82:	90 e0       	ldi	r25, 0x00	; 0
    2a84:	9a a3       	std	Y+34, r25	; 0x22
    2a86:	89 a3       	std	Y+33, r24	; 0x21
    2a88:	3f c0       	rjmp	.+126    	; 0x2b08 <LCD_voidInitialize+0x450>
	else if (__tmp > 65535)
    2a8a:	6b a1       	ldd	r22, Y+35	; 0x23
    2a8c:	7c a1       	ldd	r23, Y+36	; 0x24
    2a8e:	8d a1       	ldd	r24, Y+37	; 0x25
    2a90:	9e a1       	ldd	r25, Y+38	; 0x26
    2a92:	20 e0       	ldi	r18, 0x00	; 0
    2a94:	3f ef       	ldi	r19, 0xFF	; 255
    2a96:	4f e7       	ldi	r20, 0x7F	; 127
    2a98:	57 e4       	ldi	r21, 0x47	; 71
    2a9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a9e:	18 16       	cp	r1, r24
    2aa0:	4c f5       	brge	.+82     	; 0x2af4 <LCD_voidInitialize+0x43c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2aa2:	6f a1       	ldd	r22, Y+39	; 0x27
    2aa4:	78 a5       	ldd	r23, Y+40	; 0x28
    2aa6:	89 a5       	ldd	r24, Y+41	; 0x29
    2aa8:	9a a5       	ldd	r25, Y+42	; 0x2a
    2aaa:	20 e0       	ldi	r18, 0x00	; 0
    2aac:	30 e0       	ldi	r19, 0x00	; 0
    2aae:	40 e2       	ldi	r20, 0x20	; 32
    2ab0:	51 e4       	ldi	r21, 0x41	; 65
    2ab2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ab6:	dc 01       	movw	r26, r24
    2ab8:	cb 01       	movw	r24, r22
    2aba:	bc 01       	movw	r22, r24
    2abc:	cd 01       	movw	r24, r26
    2abe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ac2:	dc 01       	movw	r26, r24
    2ac4:	cb 01       	movw	r24, r22
    2ac6:	9a a3       	std	Y+34, r25	; 0x22
    2ac8:	89 a3       	std	Y+33, r24	; 0x21
    2aca:	0f c0       	rjmp	.+30     	; 0x2aea <LCD_voidInitialize+0x432>
    2acc:	80 e9       	ldi	r24, 0x90	; 144
    2ace:	91 e0       	ldi	r25, 0x01	; 1
    2ad0:	98 a3       	std	Y+32, r25	; 0x20
    2ad2:	8f 8f       	std	Y+31, r24	; 0x1f
    2ad4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2ad6:	98 a1       	ldd	r25, Y+32	; 0x20
    2ad8:	01 97       	sbiw	r24, 0x01	; 1
    2ada:	f1 f7       	brne	.-4      	; 0x2ad8 <LCD_voidInitialize+0x420>
    2adc:	98 a3       	std	Y+32, r25	; 0x20
    2ade:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ae0:	89 a1       	ldd	r24, Y+33	; 0x21
    2ae2:	9a a1       	ldd	r25, Y+34	; 0x22
    2ae4:	01 97       	sbiw	r24, 0x01	; 1
    2ae6:	9a a3       	std	Y+34, r25	; 0x22
    2ae8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aea:	89 a1       	ldd	r24, Y+33	; 0x21
    2aec:	9a a1       	ldd	r25, Y+34	; 0x22
    2aee:	00 97       	sbiw	r24, 0x00	; 0
    2af0:	69 f7       	brne	.-38     	; 0x2acc <LCD_voidInitialize+0x414>
    2af2:	14 c0       	rjmp	.+40     	; 0x2b1c <LCD_voidInitialize+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2af4:	6b a1       	ldd	r22, Y+35	; 0x23
    2af6:	7c a1       	ldd	r23, Y+36	; 0x24
    2af8:	8d a1       	ldd	r24, Y+37	; 0x25
    2afa:	9e a1       	ldd	r25, Y+38	; 0x26
    2afc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b00:	dc 01       	movw	r26, r24
    2b02:	cb 01       	movw	r24, r22
    2b04:	9a a3       	std	Y+34, r25	; 0x22
    2b06:	89 a3       	std	Y+33, r24	; 0x21
    2b08:	89 a1       	ldd	r24, Y+33	; 0x21
    2b0a:	9a a1       	ldd	r25, Y+34	; 0x22
    2b0c:	9e 8f       	std	Y+30, r25	; 0x1e
    2b0e:	8d 8f       	std	Y+29, r24	; 0x1d
    2b10:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b12:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2b14:	01 97       	sbiw	r24, 0x01	; 1
    2b16:	f1 f7       	brne	.-4      	; 0x2b14 <LCD_voidInitialize+0x45c>
    2b18:	9e 8f       	std	Y+30, r25	; 0x1e
    2b1a:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(5);

        LCD_voidWriteCmd(0b00001100);
    2b1c:	8c e0       	ldi	r24, 0x0C	; 12
    2b1e:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    2b22:	80 e0       	ldi	r24, 0x00	; 0
    2b24:	90 e0       	ldi	r25, 0x00	; 0
    2b26:	a0 e8       	ldi	r26, 0x80	; 128
    2b28:	bf e3       	ldi	r27, 0x3F	; 63
    2b2a:	89 8f       	std	Y+25, r24	; 0x19
    2b2c:	9a 8f       	std	Y+26, r25	; 0x1a
    2b2e:	ab 8f       	std	Y+27, r26	; 0x1b
    2b30:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b32:	69 8d       	ldd	r22, Y+25	; 0x19
    2b34:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b36:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b38:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b3a:	20 e0       	ldi	r18, 0x00	; 0
    2b3c:	30 e0       	ldi	r19, 0x00	; 0
    2b3e:	4a e7       	ldi	r20, 0x7A	; 122
    2b40:	55 e4       	ldi	r21, 0x45	; 69
    2b42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b46:	dc 01       	movw	r26, r24
    2b48:	cb 01       	movw	r24, r22
    2b4a:	8d 8b       	std	Y+21, r24	; 0x15
    2b4c:	9e 8b       	std	Y+22, r25	; 0x16
    2b4e:	af 8b       	std	Y+23, r26	; 0x17
    2b50:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2b52:	6d 89       	ldd	r22, Y+21	; 0x15
    2b54:	7e 89       	ldd	r23, Y+22	; 0x16
    2b56:	8f 89       	ldd	r24, Y+23	; 0x17
    2b58:	98 8d       	ldd	r25, Y+24	; 0x18
    2b5a:	20 e0       	ldi	r18, 0x00	; 0
    2b5c:	30 e0       	ldi	r19, 0x00	; 0
    2b5e:	40 e8       	ldi	r20, 0x80	; 128
    2b60:	5f e3       	ldi	r21, 0x3F	; 63
    2b62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b66:	88 23       	and	r24, r24
    2b68:	2c f4       	brge	.+10     	; 0x2b74 <LCD_voidInitialize+0x4bc>
		__ticks = 1;
    2b6a:	81 e0       	ldi	r24, 0x01	; 1
    2b6c:	90 e0       	ldi	r25, 0x00	; 0
    2b6e:	9c 8b       	std	Y+20, r25	; 0x14
    2b70:	8b 8b       	std	Y+19, r24	; 0x13
    2b72:	3f c0       	rjmp	.+126    	; 0x2bf2 <LCD_voidInitialize+0x53a>
	else if (__tmp > 65535)
    2b74:	6d 89       	ldd	r22, Y+21	; 0x15
    2b76:	7e 89       	ldd	r23, Y+22	; 0x16
    2b78:	8f 89       	ldd	r24, Y+23	; 0x17
    2b7a:	98 8d       	ldd	r25, Y+24	; 0x18
    2b7c:	20 e0       	ldi	r18, 0x00	; 0
    2b7e:	3f ef       	ldi	r19, 0xFF	; 255
    2b80:	4f e7       	ldi	r20, 0x7F	; 127
    2b82:	57 e4       	ldi	r21, 0x47	; 71
    2b84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b88:	18 16       	cp	r1, r24
    2b8a:	4c f5       	brge	.+82     	; 0x2bde <LCD_voidInitialize+0x526>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b8c:	69 8d       	ldd	r22, Y+25	; 0x19
    2b8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b90:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b92:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b94:	20 e0       	ldi	r18, 0x00	; 0
    2b96:	30 e0       	ldi	r19, 0x00	; 0
    2b98:	40 e2       	ldi	r20, 0x20	; 32
    2b9a:	51 e4       	ldi	r21, 0x41	; 65
    2b9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ba0:	dc 01       	movw	r26, r24
    2ba2:	cb 01       	movw	r24, r22
    2ba4:	bc 01       	movw	r22, r24
    2ba6:	cd 01       	movw	r24, r26
    2ba8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bac:	dc 01       	movw	r26, r24
    2bae:	cb 01       	movw	r24, r22
    2bb0:	9c 8b       	std	Y+20, r25	; 0x14
    2bb2:	8b 8b       	std	Y+19, r24	; 0x13
    2bb4:	0f c0       	rjmp	.+30     	; 0x2bd4 <LCD_voidInitialize+0x51c>
    2bb6:	80 e9       	ldi	r24, 0x90	; 144
    2bb8:	91 e0       	ldi	r25, 0x01	; 1
    2bba:	9a 8b       	std	Y+18, r25	; 0x12
    2bbc:	89 8b       	std	Y+17, r24	; 0x11
    2bbe:	89 89       	ldd	r24, Y+17	; 0x11
    2bc0:	9a 89       	ldd	r25, Y+18	; 0x12
    2bc2:	01 97       	sbiw	r24, 0x01	; 1
    2bc4:	f1 f7       	brne	.-4      	; 0x2bc2 <LCD_voidInitialize+0x50a>
    2bc6:	9a 8b       	std	Y+18, r25	; 0x12
    2bc8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bca:	8b 89       	ldd	r24, Y+19	; 0x13
    2bcc:	9c 89       	ldd	r25, Y+20	; 0x14
    2bce:	01 97       	sbiw	r24, 0x01	; 1
    2bd0:	9c 8b       	std	Y+20, r25	; 0x14
    2bd2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bd4:	8b 89       	ldd	r24, Y+19	; 0x13
    2bd6:	9c 89       	ldd	r25, Y+20	; 0x14
    2bd8:	00 97       	sbiw	r24, 0x00	; 0
    2bda:	69 f7       	brne	.-38     	; 0x2bb6 <LCD_voidInitialize+0x4fe>
    2bdc:	14 c0       	rjmp	.+40     	; 0x2c06 <LCD_voidInitialize+0x54e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bde:	6d 89       	ldd	r22, Y+21	; 0x15
    2be0:	7e 89       	ldd	r23, Y+22	; 0x16
    2be2:	8f 89       	ldd	r24, Y+23	; 0x17
    2be4:	98 8d       	ldd	r25, Y+24	; 0x18
    2be6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bea:	dc 01       	movw	r26, r24
    2bec:	cb 01       	movw	r24, r22
    2bee:	9c 8b       	std	Y+20, r25	; 0x14
    2bf0:	8b 8b       	std	Y+19, r24	; 0x13
    2bf2:	8b 89       	ldd	r24, Y+19	; 0x13
    2bf4:	9c 89       	ldd	r25, Y+20	; 0x14
    2bf6:	98 8b       	std	Y+16, r25	; 0x10
    2bf8:	8f 87       	std	Y+15, r24	; 0x0f
    2bfa:	8f 85       	ldd	r24, Y+15	; 0x0f
    2bfc:	98 89       	ldd	r25, Y+16	; 0x10
    2bfe:	01 97       	sbiw	r24, 0x01	; 1
    2c00:	f1 f7       	brne	.-4      	; 0x2bfe <LCD_voidInitialize+0x546>
    2c02:	98 8b       	std	Y+16, r25	; 0x10
    2c04:	8f 87       	std	Y+15, r24	; 0x0f

        _delay_ms(1);
        LCD_voidWriteCmd(0b00000001);
    2c06:	81 e0       	ldi	r24, 0x01	; 1
    2c08:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    2c0c:	80 e0       	ldi	r24, 0x00	; 0
    2c0e:	90 e0       	ldi	r25, 0x00	; 0
    2c10:	a0 e0       	ldi	r26, 0x00	; 0
    2c12:	b0 e4       	ldi	r27, 0x40	; 64
    2c14:	8b 87       	std	Y+11, r24	; 0x0b
    2c16:	9c 87       	std	Y+12, r25	; 0x0c
    2c18:	ad 87       	std	Y+13, r26	; 0x0d
    2c1a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c1c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c1e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c20:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c22:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c24:	20 e0       	ldi	r18, 0x00	; 0
    2c26:	30 e0       	ldi	r19, 0x00	; 0
    2c28:	4a e7       	ldi	r20, 0x7A	; 122
    2c2a:	55 e4       	ldi	r21, 0x45	; 69
    2c2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c30:	dc 01       	movw	r26, r24
    2c32:	cb 01       	movw	r24, r22
    2c34:	8f 83       	std	Y+7, r24	; 0x07
    2c36:	98 87       	std	Y+8, r25	; 0x08
    2c38:	a9 87       	std	Y+9, r26	; 0x09
    2c3a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c3c:	6f 81       	ldd	r22, Y+7	; 0x07
    2c3e:	78 85       	ldd	r23, Y+8	; 0x08
    2c40:	89 85       	ldd	r24, Y+9	; 0x09
    2c42:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c44:	20 e0       	ldi	r18, 0x00	; 0
    2c46:	30 e0       	ldi	r19, 0x00	; 0
    2c48:	40 e8       	ldi	r20, 0x80	; 128
    2c4a:	5f e3       	ldi	r21, 0x3F	; 63
    2c4c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c50:	88 23       	and	r24, r24
    2c52:	2c f4       	brge	.+10     	; 0x2c5e <LCD_voidInitialize+0x5a6>
		__ticks = 1;
    2c54:	81 e0       	ldi	r24, 0x01	; 1
    2c56:	90 e0       	ldi	r25, 0x00	; 0
    2c58:	9e 83       	std	Y+6, r25	; 0x06
    2c5a:	8d 83       	std	Y+5, r24	; 0x05
    2c5c:	3f c0       	rjmp	.+126    	; 0x2cdc <LCD_voidInitialize+0x624>
	else if (__tmp > 65535)
    2c5e:	6f 81       	ldd	r22, Y+7	; 0x07
    2c60:	78 85       	ldd	r23, Y+8	; 0x08
    2c62:	89 85       	ldd	r24, Y+9	; 0x09
    2c64:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c66:	20 e0       	ldi	r18, 0x00	; 0
    2c68:	3f ef       	ldi	r19, 0xFF	; 255
    2c6a:	4f e7       	ldi	r20, 0x7F	; 127
    2c6c:	57 e4       	ldi	r21, 0x47	; 71
    2c6e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c72:	18 16       	cp	r1, r24
    2c74:	4c f5       	brge	.+82     	; 0x2cc8 <LCD_voidInitialize+0x610>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c76:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c78:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c7a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c7c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c7e:	20 e0       	ldi	r18, 0x00	; 0
    2c80:	30 e0       	ldi	r19, 0x00	; 0
    2c82:	40 e2       	ldi	r20, 0x20	; 32
    2c84:	51 e4       	ldi	r21, 0x41	; 65
    2c86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c8a:	dc 01       	movw	r26, r24
    2c8c:	cb 01       	movw	r24, r22
    2c8e:	bc 01       	movw	r22, r24
    2c90:	cd 01       	movw	r24, r26
    2c92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c96:	dc 01       	movw	r26, r24
    2c98:	cb 01       	movw	r24, r22
    2c9a:	9e 83       	std	Y+6, r25	; 0x06
    2c9c:	8d 83       	std	Y+5, r24	; 0x05
    2c9e:	0f c0       	rjmp	.+30     	; 0x2cbe <LCD_voidInitialize+0x606>
    2ca0:	80 e9       	ldi	r24, 0x90	; 144
    2ca2:	91 e0       	ldi	r25, 0x01	; 1
    2ca4:	9c 83       	std	Y+4, r25	; 0x04
    2ca6:	8b 83       	std	Y+3, r24	; 0x03
    2ca8:	8b 81       	ldd	r24, Y+3	; 0x03
    2caa:	9c 81       	ldd	r25, Y+4	; 0x04
    2cac:	01 97       	sbiw	r24, 0x01	; 1
    2cae:	f1 f7       	brne	.-4      	; 0x2cac <LCD_voidInitialize+0x5f4>
    2cb0:	9c 83       	std	Y+4, r25	; 0x04
    2cb2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cb4:	8d 81       	ldd	r24, Y+5	; 0x05
    2cb6:	9e 81       	ldd	r25, Y+6	; 0x06
    2cb8:	01 97       	sbiw	r24, 0x01	; 1
    2cba:	9e 83       	std	Y+6, r25	; 0x06
    2cbc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cbe:	8d 81       	ldd	r24, Y+5	; 0x05
    2cc0:	9e 81       	ldd	r25, Y+6	; 0x06
    2cc2:	00 97       	sbiw	r24, 0x00	; 0
    2cc4:	69 f7       	brne	.-38     	; 0x2ca0 <LCD_voidInitialize+0x5e8>
    2cc6:	14 c0       	rjmp	.+40     	; 0x2cf0 <LCD_voidInitialize+0x638>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cc8:	6f 81       	ldd	r22, Y+7	; 0x07
    2cca:	78 85       	ldd	r23, Y+8	; 0x08
    2ccc:	89 85       	ldd	r24, Y+9	; 0x09
    2cce:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cd4:	dc 01       	movw	r26, r24
    2cd6:	cb 01       	movw	r24, r22
    2cd8:	9e 83       	std	Y+6, r25	; 0x06
    2cda:	8d 83       	std	Y+5, r24	; 0x05
    2cdc:	8d 81       	ldd	r24, Y+5	; 0x05
    2cde:	9e 81       	ldd	r25, Y+6	; 0x06
    2ce0:	9a 83       	std	Y+2, r25	; 0x02
    2ce2:	89 83       	std	Y+1, r24	; 0x01
    2ce4:	89 81       	ldd	r24, Y+1	; 0x01
    2ce6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ce8:	01 97       	sbiw	r24, 0x01	; 1
    2cea:	f1 f7       	brne	.-4      	; 0x2ce8 <LCD_voidInitialize+0x630>
    2cec:	9a 83       	std	Y+2, r25	; 0x02
    2cee:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(2);
    }
#elif (LCD_MODE == EIGHT_BIT)
#endif
}
    2cf0:	cc 5a       	subi	r28, 0xAC	; 172
    2cf2:	df 4f       	sbci	r29, 0xFF	; 255
    2cf4:	0f b6       	in	r0, 0x3f	; 63
    2cf6:	f8 94       	cli
    2cf8:	de bf       	out	0x3e, r29	; 62
    2cfa:	0f be       	out	0x3f, r0	; 63
    2cfc:	cd bf       	out	0x3d, r28	; 61
    2cfe:	cf 91       	pop	r28
    2d00:	df 91       	pop	r29
    2d02:	1f 91       	pop	r17
    2d04:	0f 91       	pop	r16
    2d06:	08 95       	ret

00002d08 <LCD_voidWriteData>:

void LCD_voidWriteData(u8 Data)
{
    2d08:	df 93       	push	r29
    2d0a:	cf 93       	push	r28
    2d0c:	0f 92       	push	r0
    2d0e:	cd b7       	in	r28, 0x3d	; 61
    2d10:	de b7       	in	r29, 0x3e	; 62
    2d12:	89 83       	std	Y+1, r24	; 0x01
    DIO_voidSetPin(RS_PIN, HIGH);
    2d14:	81 e0       	ldi	r24, 0x01	; 1
    2d16:	61 e0       	ldi	r22, 0x01	; 1
    2d18:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    DIO_voidSetPin(RW_PIN, LOW);
    2d1c:	8f e1       	ldi	r24, 0x1F	; 31
    2d1e:	60 e0       	ldi	r22, 0x00	; 0
    2d20:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    LCD_help(Data);
    2d24:	89 81       	ldd	r24, Y+1	; 0x01
    2d26:	0e 94 8a 19 	call	0x3314	; 0x3314 <LCD_help>
}
    2d2a:	0f 90       	pop	r0
    2d2c:	cf 91       	pop	r28
    2d2e:	df 91       	pop	r29
    2d30:	08 95       	ret

00002d32 <LCD_voidWriteCmd>:
void LCD_voidWriteCmd(u8 Data)
{
    2d32:	df 93       	push	r29
    2d34:	cf 93       	push	r28
    2d36:	0f 92       	push	r0
    2d38:	cd b7       	in	r28, 0x3d	; 61
    2d3a:	de b7       	in	r29, 0x3e	; 62
    2d3c:	89 83       	std	Y+1, r24	; 0x01
    DIO_voidSetPin(RS_PIN, LOW);
    2d3e:	81 e0       	ldi	r24, 0x01	; 1
    2d40:	60 e0       	ldi	r22, 0x00	; 0
    2d42:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    DIO_voidSetPin(RW_PIN, LOW);
    2d46:	8f e1       	ldi	r24, 0x1F	; 31
    2d48:	60 e0       	ldi	r22, 0x00	; 0
    2d4a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    LCD_help(Data);
    2d4e:	89 81       	ldd	r24, Y+1	; 0x01
    2d50:	0e 94 8a 19 	call	0x3314	; 0x3314 <LCD_help>
}
    2d54:	0f 90       	pop	r0
    2d56:	cf 91       	pop	r28
    2d58:	df 91       	pop	r29
    2d5a:	08 95       	ret

00002d5c <LCD_voidWriteString>:
void LCD_voidWriteString(s8 *Str)
{
    2d5c:	df 93       	push	r29
    2d5e:	cf 93       	push	r28
    2d60:	00 d0       	rcall	.+0      	; 0x2d62 <LCD_voidWriteString+0x6>
    2d62:	00 d0       	rcall	.+0      	; 0x2d64 <LCD_voidWriteString+0x8>
    2d64:	0f 92       	push	r0
    2d66:	cd b7       	in	r28, 0x3d	; 61
    2d68:	de b7       	in	r29, 0x3e	; 62
    2d6a:	9d 83       	std	Y+5, r25	; 0x05
    2d6c:	8c 83       	std	Y+4, r24	; 0x04
    u8 i = 0;
    2d6e:	1b 82       	std	Y+3, r1	; 0x03
    u8 *String = (u8 *)Str;
    2d70:	8c 81       	ldd	r24, Y+4	; 0x04
    2d72:	9d 81       	ldd	r25, Y+5	; 0x05
    2d74:	9a 83       	std	Y+2, r25	; 0x02
    2d76:	89 83       	std	Y+1, r24	; 0x01
    2d78:	0e c0       	rjmp	.+28     	; 0x2d96 <LCD_voidWriteString+0x3a>
    while (String[i] != '\0' && i < 30)
    {
        LCD_voidWriteData(String[i]);
    2d7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2d7c:	28 2f       	mov	r18, r24
    2d7e:	30 e0       	ldi	r19, 0x00	; 0
    2d80:	89 81       	ldd	r24, Y+1	; 0x01
    2d82:	9a 81       	ldd	r25, Y+2	; 0x02
    2d84:	fc 01       	movw	r30, r24
    2d86:	e2 0f       	add	r30, r18
    2d88:	f3 1f       	adc	r31, r19
    2d8a:	80 81       	ld	r24, Z
    2d8c:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
        i++;
    2d90:	8b 81       	ldd	r24, Y+3	; 0x03
    2d92:	8f 5f       	subi	r24, 0xFF	; 255
    2d94:	8b 83       	std	Y+3, r24	; 0x03
}
void LCD_voidWriteString(s8 *Str)
{
    u8 i = 0;
    u8 *String = (u8 *)Str;
    while (String[i] != '\0' && i < 30)
    2d96:	8b 81       	ldd	r24, Y+3	; 0x03
    2d98:	28 2f       	mov	r18, r24
    2d9a:	30 e0       	ldi	r19, 0x00	; 0
    2d9c:	89 81       	ldd	r24, Y+1	; 0x01
    2d9e:	9a 81       	ldd	r25, Y+2	; 0x02
    2da0:	fc 01       	movw	r30, r24
    2da2:	e2 0f       	add	r30, r18
    2da4:	f3 1f       	adc	r31, r19
    2da6:	80 81       	ld	r24, Z
    2da8:	88 23       	and	r24, r24
    2daa:	19 f0       	breq	.+6      	; 0x2db2 <LCD_voidWriteString+0x56>
    2dac:	8b 81       	ldd	r24, Y+3	; 0x03
    2dae:	8e 31       	cpi	r24, 0x1E	; 30
    2db0:	20 f3       	brcs	.-56     	; 0x2d7a <LCD_voidWriteString+0x1e>
    {
        LCD_voidWriteData(String[i]);
        i++;
    }
}
    2db2:	0f 90       	pop	r0
    2db4:	0f 90       	pop	r0
    2db6:	0f 90       	pop	r0
    2db8:	0f 90       	pop	r0
    2dba:	0f 90       	pop	r0
    2dbc:	cf 91       	pop	r28
    2dbe:	df 91       	pop	r29
    2dc0:	08 95       	ret

00002dc2 <LCD_voidWriteIntegerDec>:

void LCD_voidWriteIntegerDec(s32 number)
{
    2dc2:	df 93       	push	r29
    2dc4:	cf 93       	push	r28
    2dc6:	cd b7       	in	r28, 0x3d	; 61
    2dc8:	de b7       	in	r29, 0x3e	; 62
    2dca:	64 97       	sbiw	r28, 0x14	; 20
    2dcc:	0f b6       	in	r0, 0x3f	; 63
    2dce:	f8 94       	cli
    2dd0:	de bf       	out	0x3e, r29	; 62
    2dd2:	0f be       	out	0x3f, r0	; 63
    2dd4:	cd bf       	out	0x3d, r28	; 61
    2dd6:	9c 8b       	std	Y+20, r25	; 0x14
    2dd8:	8b 8b       	std	Y+19, r24	; 0x13
    u8 stackOfDec[15];
    u8 counter = 0;
    2dda:	1b 82       	std	Y+3, r1	; 0x03
    2ddc:	1e c0       	rjmp	.+60     	; 0x2e1a <LCD_voidWriteIntegerDec+0x58>
    while (number > 0)
    {
        stackOfDec[counter] = (number % 10) + 48;
    2dde:	8b 81       	ldd	r24, Y+3	; 0x03
    2de0:	e8 2f       	mov	r30, r24
    2de2:	f0 e0       	ldi	r31, 0x00	; 0
    2de4:	8b 89       	ldd	r24, Y+19	; 0x13
    2de6:	9c 89       	ldd	r25, Y+20	; 0x14
    2de8:	2a e0       	ldi	r18, 0x0A	; 10
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	b9 01       	movw	r22, r18
    2dee:	0e 94 f9 2f 	call	0x5ff2	; 0x5ff2 <__divmodhi4>
    2df2:	28 2f       	mov	r18, r24
    2df4:	20 5d       	subi	r18, 0xD0	; 208
    2df6:	ce 01       	movw	r24, r28
    2df8:	04 96       	adiw	r24, 0x04	; 4
    2dfa:	e8 0f       	add	r30, r24
    2dfc:	f9 1f       	adc	r31, r25
    2dfe:	20 83       	st	Z, r18
        number /= 10;
    2e00:	8b 89       	ldd	r24, Y+19	; 0x13
    2e02:	9c 89       	ldd	r25, Y+20	; 0x14
    2e04:	2a e0       	ldi	r18, 0x0A	; 10
    2e06:	30 e0       	ldi	r19, 0x00	; 0
    2e08:	b9 01       	movw	r22, r18
    2e0a:	0e 94 f9 2f 	call	0x5ff2	; 0x5ff2 <__divmodhi4>
    2e0e:	cb 01       	movw	r24, r22
    2e10:	9c 8b       	std	Y+20, r25	; 0x14
    2e12:	8b 8b       	std	Y+19, r24	; 0x13
        counter++;
    2e14:	8b 81       	ldd	r24, Y+3	; 0x03
    2e16:	8f 5f       	subi	r24, 0xFF	; 255
    2e18:	8b 83       	std	Y+3, r24	; 0x03

void LCD_voidWriteIntegerDec(s32 number)
{
    u8 stackOfDec[15];
    u8 counter = 0;
    while (number > 0)
    2e1a:	8b 89       	ldd	r24, Y+19	; 0x13
    2e1c:	9c 89       	ldd	r25, Y+20	; 0x14
    2e1e:	18 16       	cp	r1, r24
    2e20:	19 06       	cpc	r1, r25
    2e22:	ec f2       	brlt	.-70     	; 0x2dde <LCD_voidWriteIntegerDec+0x1c>
        stackOfDec[counter] = (number % 10) + 48;
        number /= 10;
        counter++;
    }

    for (int i = counter - 1; i >= 0; i--)
    2e24:	8b 81       	ldd	r24, Y+3	; 0x03
    2e26:	88 2f       	mov	r24, r24
    2e28:	90 e0       	ldi	r25, 0x00	; 0
    2e2a:	01 97       	sbiw	r24, 0x01	; 1
    2e2c:	9a 83       	std	Y+2, r25	; 0x02
    2e2e:	89 83       	std	Y+1, r24	; 0x01
    2e30:	0f c0       	rjmp	.+30     	; 0x2e50 <LCD_voidWriteIntegerDec+0x8e>
    {
        LCD_voidWriteData(stackOfDec[i]);
    2e32:	29 81       	ldd	r18, Y+1	; 0x01
    2e34:	3a 81       	ldd	r19, Y+2	; 0x02
    2e36:	ce 01       	movw	r24, r28
    2e38:	04 96       	adiw	r24, 0x04	; 4
    2e3a:	fc 01       	movw	r30, r24
    2e3c:	e2 0f       	add	r30, r18
    2e3e:	f3 1f       	adc	r31, r19
    2e40:	80 81       	ld	r24, Z
    2e42:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
        stackOfDec[counter] = (number % 10) + 48;
        number /= 10;
        counter++;
    }

    for (int i = counter - 1; i >= 0; i--)
    2e46:	89 81       	ldd	r24, Y+1	; 0x01
    2e48:	9a 81       	ldd	r25, Y+2	; 0x02
    2e4a:	01 97       	sbiw	r24, 0x01	; 1
    2e4c:	9a 83       	std	Y+2, r25	; 0x02
    2e4e:	89 83       	std	Y+1, r24	; 0x01
    2e50:	89 81       	ldd	r24, Y+1	; 0x01
    2e52:	9a 81       	ldd	r25, Y+2	; 0x02
    2e54:	99 23       	and	r25, r25
    2e56:	6c f7       	brge	.-38     	; 0x2e32 <LCD_voidWriteIntegerDec+0x70>
    {
        LCD_voidWriteData(stackOfDec[i]);
    }
}
    2e58:	64 96       	adiw	r28, 0x14	; 20
    2e5a:	0f b6       	in	r0, 0x3f	; 63
    2e5c:	f8 94       	cli
    2e5e:	de bf       	out	0x3e, r29	; 62
    2e60:	0f be       	out	0x3f, r0	; 63
    2e62:	cd bf       	out	0x3d, r28	; 61
    2e64:	cf 91       	pop	r28
    2e66:	df 91       	pop	r29
    2e68:	08 95       	ret

00002e6a <LCD_voidWriteIntegerDecFLored>:

void LCD_voidWriteIntegerDecFLored(s32 number, s32 flor)
{
    2e6a:	df 93       	push	r29
    2e6c:	cf 93       	push	r28
    2e6e:	cd b7       	in	r28, 0x3d	; 61
    2e70:	de b7       	in	r29, 0x3e	; 62
    2e72:	66 97       	sbiw	r28, 0x16	; 22
    2e74:	0f b6       	in	r0, 0x3f	; 63
    2e76:	f8 94       	cli
    2e78:	de bf       	out	0x3e, r29	; 62
    2e7a:	0f be       	out	0x3f, r0	; 63
    2e7c:	cd bf       	out	0x3d, r28	; 61
    2e7e:	9c 8b       	std	Y+20, r25	; 0x14
    2e80:	8b 8b       	std	Y+19, r24	; 0x13
    2e82:	7e 8b       	std	Y+22, r23	; 0x16
    2e84:	6d 8b       	std	Y+21, r22	; 0x15
    u8 stackOfDec[15];
    u8 counter = 0;
    2e86:	1b 82       	std	Y+3, r1	; 0x03
    2e88:	1e c0       	rjmp	.+60     	; 0x2ec6 <LCD_voidWriteIntegerDecFLored+0x5c>
    while (number > 0)
    {
        stackOfDec[counter] = (number % 10) + 48;
    2e8a:	8b 81       	ldd	r24, Y+3	; 0x03
    2e8c:	e8 2f       	mov	r30, r24
    2e8e:	f0 e0       	ldi	r31, 0x00	; 0
    2e90:	8b 89       	ldd	r24, Y+19	; 0x13
    2e92:	9c 89       	ldd	r25, Y+20	; 0x14
    2e94:	2a e0       	ldi	r18, 0x0A	; 10
    2e96:	30 e0       	ldi	r19, 0x00	; 0
    2e98:	b9 01       	movw	r22, r18
    2e9a:	0e 94 f9 2f 	call	0x5ff2	; 0x5ff2 <__divmodhi4>
    2e9e:	28 2f       	mov	r18, r24
    2ea0:	20 5d       	subi	r18, 0xD0	; 208
    2ea2:	ce 01       	movw	r24, r28
    2ea4:	04 96       	adiw	r24, 0x04	; 4
    2ea6:	e8 0f       	add	r30, r24
    2ea8:	f9 1f       	adc	r31, r25
    2eaa:	20 83       	st	Z, r18
        number /= 10;
    2eac:	8b 89       	ldd	r24, Y+19	; 0x13
    2eae:	9c 89       	ldd	r25, Y+20	; 0x14
    2eb0:	2a e0       	ldi	r18, 0x0A	; 10
    2eb2:	30 e0       	ldi	r19, 0x00	; 0
    2eb4:	b9 01       	movw	r22, r18
    2eb6:	0e 94 f9 2f 	call	0x5ff2	; 0x5ff2 <__divmodhi4>
    2eba:	cb 01       	movw	r24, r22
    2ebc:	9c 8b       	std	Y+20, r25	; 0x14
    2ebe:	8b 8b       	std	Y+19, r24	; 0x13
        counter++;
    2ec0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ec2:	8f 5f       	subi	r24, 0xFF	; 255
    2ec4:	8b 83       	std	Y+3, r24	; 0x03

void LCD_voidWriteIntegerDecFLored(s32 number, s32 flor)
{
    u8 stackOfDec[15];
    u8 counter = 0;
    while (number > 0)
    2ec6:	8b 89       	ldd	r24, Y+19	; 0x13
    2ec8:	9c 89       	ldd	r25, Y+20	; 0x14
    2eca:	18 16       	cp	r1, r24
    2ecc:	19 06       	cpc	r1, r25
    2ece:	ec f2       	brlt	.-70     	; 0x2e8a <LCD_voidWriteIntegerDecFLored+0x20>
        stackOfDec[counter] = (number % 10) + 48;
        number /= 10;
        counter++;
    }

    for (int i = counter - 1; i >= (counter - (flor)); i--)
    2ed0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed2:	88 2f       	mov	r24, r24
    2ed4:	90 e0       	ldi	r25, 0x00	; 0
    2ed6:	01 97       	sbiw	r24, 0x01	; 1
    2ed8:	9a 83       	std	Y+2, r25	; 0x02
    2eda:	89 83       	std	Y+1, r24	; 0x01
    2edc:	0f c0       	rjmp	.+30     	; 0x2efc <LCD_voidWriteIntegerDecFLored+0x92>
    {
        LCD_voidWriteData(stackOfDec[i]);
    2ede:	29 81       	ldd	r18, Y+1	; 0x01
    2ee0:	3a 81       	ldd	r19, Y+2	; 0x02
    2ee2:	ce 01       	movw	r24, r28
    2ee4:	04 96       	adiw	r24, 0x04	; 4
    2ee6:	fc 01       	movw	r30, r24
    2ee8:	e2 0f       	add	r30, r18
    2eea:	f3 1f       	adc	r31, r19
    2eec:	80 81       	ld	r24, Z
    2eee:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
        stackOfDec[counter] = (number % 10) + 48;
        number /= 10;
        counter++;
    }

    for (int i = counter - 1; i >= (counter - (flor)); i--)
    2ef2:	89 81       	ldd	r24, Y+1	; 0x01
    2ef4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ef6:	01 97       	sbiw	r24, 0x01	; 1
    2ef8:	9a 83       	std	Y+2, r25	; 0x02
    2efa:	89 83       	std	Y+1, r24	; 0x01
    2efc:	8b 81       	ldd	r24, Y+3	; 0x03
    2efe:	28 2f       	mov	r18, r24
    2f00:	30 e0       	ldi	r19, 0x00	; 0
    2f02:	8d 89       	ldd	r24, Y+21	; 0x15
    2f04:	9e 89       	ldd	r25, Y+22	; 0x16
    2f06:	28 1b       	sub	r18, r24
    2f08:	39 0b       	sbc	r19, r25
    2f0a:	89 81       	ldd	r24, Y+1	; 0x01
    2f0c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f0e:	82 17       	cp	r24, r18
    2f10:	93 07       	cpc	r25, r19
    2f12:	2c f7       	brge	.-54     	; 0x2ede <LCD_voidWriteIntegerDecFLored+0x74>
    {
        LCD_voidWriteData(stackOfDec[i]);
    }
}
    2f14:	66 96       	adiw	r28, 0x16	; 22
    2f16:	0f b6       	in	r0, 0x3f	; 63
    2f18:	f8 94       	cli
    2f1a:	de bf       	out	0x3e, r29	; 62
    2f1c:	0f be       	out	0x3f, r0	; 63
    2f1e:	cd bf       	out	0x3d, r28	; 61
    2f20:	cf 91       	pop	r28
    2f22:	df 91       	pop	r29
    2f24:	08 95       	ret

00002f26 <LCD_voidWriteIntegerHex>:

void LCD_voidWriteIntegerHex(s32 number)
{
    2f26:	df 93       	push	r29
    2f28:	cf 93       	push	r28
    2f2a:	cd b7       	in	r28, 0x3d	; 61
    2f2c:	de b7       	in	r29, 0x3e	; 62
    2f2e:	67 97       	sbiw	r28, 0x17	; 23
    2f30:	0f b6       	in	r0, 0x3f	; 63
    2f32:	f8 94       	cli
    2f34:	de bf       	out	0x3e, r29	; 62
    2f36:	0f be       	out	0x3f, r0	; 63
    2f38:	cd bf       	out	0x3d, r28	; 61
    2f3a:	9d 8b       	std	Y+21, r25	; 0x15
    2f3c:	8c 8b       	std	Y+20, r24	; 0x14
    u8 stackOfHex[15];
    u8 counter = 0;
    2f3e:	1c 82       	std	Y+4, r1	; 0x04
    2f40:	40 c0       	rjmp	.+128    	; 0x2fc2 <LCD_voidWriteIntegerHex+0x9c>
    u8 residue;
    while (number > 0)
    {
        residue  = number % 16;
    2f42:	8c 89       	ldd	r24, Y+20	; 0x14
    2f44:	9d 89       	ldd	r25, Y+21	; 0x15
    2f46:	20 e1       	ldi	r18, 0x10	; 16
    2f48:	30 e0       	ldi	r19, 0x00	; 0
    2f4a:	b9 01       	movw	r22, r18
    2f4c:	0e 94 f9 2f 	call	0x5ff2	; 0x5ff2 <__divmodhi4>
    2f50:	8b 83       	std	Y+3, r24	; 0x03
        if (residue > 9)
    2f52:	8b 81       	ldd	r24, Y+3	; 0x03
    2f54:	8a 30       	cpi	r24, 0x0A	; 10
    2f56:	68 f0       	brcs	.+26     	; 0x2f72 <LCD_voidWriteIntegerHex+0x4c>
        {
            stackOfHex[counter] = residue + 55; /* Ascii for letters */
    2f58:	8c 81       	ldd	r24, Y+4	; 0x04
    2f5a:	28 2f       	mov	r18, r24
    2f5c:	30 e0       	ldi	r19, 0x00	; 0
    2f5e:	8b 81       	ldd	r24, Y+3	; 0x03
    2f60:	48 2f       	mov	r20, r24
    2f62:	49 5c       	subi	r20, 0xC9	; 201
    2f64:	ce 01       	movw	r24, r28
    2f66:	05 96       	adiw	r24, 0x05	; 5
    2f68:	fc 01       	movw	r30, r24
    2f6a:	e2 0f       	add	r30, r18
    2f6c:	f3 1f       	adc	r31, r19
    2f6e:	40 83       	st	Z, r20
    2f70:	0c c0       	rjmp	.+24     	; 0x2f8a <LCD_voidWriteIntegerHex+0x64>
        } else
        {
            stackOfHex[counter] = residue + 48; /* Ascii for numbers added */
    2f72:	8c 81       	ldd	r24, Y+4	; 0x04
    2f74:	28 2f       	mov	r18, r24
    2f76:	30 e0       	ldi	r19, 0x00	; 0
    2f78:	8b 81       	ldd	r24, Y+3	; 0x03
    2f7a:	48 2f       	mov	r20, r24
    2f7c:	40 5d       	subi	r20, 0xD0	; 208
    2f7e:	ce 01       	movw	r24, r28
    2f80:	05 96       	adiw	r24, 0x05	; 5
    2f82:	fc 01       	movw	r30, r24
    2f84:	e2 0f       	add	r30, r18
    2f86:	f3 1f       	adc	r31, r19
    2f88:	40 83       	st	Z, r20
        }
        number /= 16;
    2f8a:	8c 89       	ldd	r24, Y+20	; 0x14
    2f8c:	9d 89       	ldd	r25, Y+21	; 0x15
    2f8e:	9f 8b       	std	Y+23, r25	; 0x17
    2f90:	8e 8b       	std	Y+22, r24	; 0x16
    2f92:	8e 89       	ldd	r24, Y+22	; 0x16
    2f94:	9f 89       	ldd	r25, Y+23	; 0x17
    2f96:	99 23       	and	r25, r25
    2f98:	2c f4       	brge	.+10     	; 0x2fa4 <LCD_voidWriteIntegerHex+0x7e>
    2f9a:	8e 89       	ldd	r24, Y+22	; 0x16
    2f9c:	9f 89       	ldd	r25, Y+23	; 0x17
    2f9e:	0f 96       	adiw	r24, 0x0f	; 15
    2fa0:	9f 8b       	std	Y+23, r25	; 0x17
    2fa2:	8e 8b       	std	Y+22, r24	; 0x16
    2fa4:	8e 89       	ldd	r24, Y+22	; 0x16
    2fa6:	9f 89       	ldd	r25, Y+23	; 0x17
    2fa8:	95 95       	asr	r25
    2faa:	87 95       	ror	r24
    2fac:	95 95       	asr	r25
    2fae:	87 95       	ror	r24
    2fb0:	95 95       	asr	r25
    2fb2:	87 95       	ror	r24
    2fb4:	95 95       	asr	r25
    2fb6:	87 95       	ror	r24
    2fb8:	9d 8b       	std	Y+21, r25	; 0x15
    2fba:	8c 8b       	std	Y+20, r24	; 0x14
        counter++;
    2fbc:	8c 81       	ldd	r24, Y+4	; 0x04
    2fbe:	8f 5f       	subi	r24, 0xFF	; 255
    2fc0:	8c 83       	std	Y+4, r24	; 0x04
void LCD_voidWriteIntegerHex(s32 number)
{
    u8 stackOfHex[15];
    u8 counter = 0;
    u8 residue;
    while (number > 0)
    2fc2:	8c 89       	ldd	r24, Y+20	; 0x14
    2fc4:	9d 89       	ldd	r25, Y+21	; 0x15
    2fc6:	18 16       	cp	r1, r24
    2fc8:	19 06       	cpc	r1, r25
    2fca:	0c f4       	brge	.+2      	; 0x2fce <LCD_voidWriteIntegerHex+0xa8>
    2fcc:	ba cf       	rjmp	.-140    	; 0x2f42 <LCD_voidWriteIntegerHex+0x1c>
            stackOfHex[counter] = residue + 48; /* Ascii for numbers added */
        }
        number /= 16;
        counter++;
    }
    LCD_voidWriteData('0');
    2fce:	80 e3       	ldi	r24, 0x30	; 48
    2fd0:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
    LCD_voidWriteData('X');
    2fd4:	88 e5       	ldi	r24, 0x58	; 88
    2fd6:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
    
    for (int i = counter - 1; i >= 0; i--)
    2fda:	8c 81       	ldd	r24, Y+4	; 0x04
    2fdc:	88 2f       	mov	r24, r24
    2fde:	90 e0       	ldi	r25, 0x00	; 0
    2fe0:	01 97       	sbiw	r24, 0x01	; 1
    2fe2:	9a 83       	std	Y+2, r25	; 0x02
    2fe4:	89 83       	std	Y+1, r24	; 0x01
    2fe6:	0f c0       	rjmp	.+30     	; 0x3006 <LCD_voidWriteIntegerHex+0xe0>
    {
        LCD_voidWriteData(stackOfHex[i]);
    2fe8:	29 81       	ldd	r18, Y+1	; 0x01
    2fea:	3a 81       	ldd	r19, Y+2	; 0x02
    2fec:	ce 01       	movw	r24, r28
    2fee:	05 96       	adiw	r24, 0x05	; 5
    2ff0:	fc 01       	movw	r30, r24
    2ff2:	e2 0f       	add	r30, r18
    2ff4:	f3 1f       	adc	r31, r19
    2ff6:	80 81       	ld	r24, Z
    2ff8:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
        counter++;
    }
    LCD_voidWriteData('0');
    LCD_voidWriteData('X');
    
    for (int i = counter - 1; i >= 0; i--)
    2ffc:	89 81       	ldd	r24, Y+1	; 0x01
    2ffe:	9a 81       	ldd	r25, Y+2	; 0x02
    3000:	01 97       	sbiw	r24, 0x01	; 1
    3002:	9a 83       	std	Y+2, r25	; 0x02
    3004:	89 83       	std	Y+1, r24	; 0x01
    3006:	89 81       	ldd	r24, Y+1	; 0x01
    3008:	9a 81       	ldd	r25, Y+2	; 0x02
    300a:	99 23       	and	r25, r25
    300c:	6c f7       	brge	.-38     	; 0x2fe8 <LCD_voidWriteIntegerHex+0xc2>
    {
        LCD_voidWriteData(stackOfHex[i]);
    }
}
    300e:	67 96       	adiw	r28, 0x17	; 23
    3010:	0f b6       	in	r0, 0x3f	; 63
    3012:	f8 94       	cli
    3014:	de bf       	out	0x3e, r29	; 62
    3016:	0f be       	out	0x3f, r0	; 63
    3018:	cd bf       	out	0x3d, r28	; 61
    301a:	cf 91       	pop	r28
    301c:	df 91       	pop	r29
    301e:	08 95       	ret

00003020 <LCD_voidClrScreen>:

void LCD_voidClrScreen()
{
    3020:	df 93       	push	r29
    3022:	cf 93       	push	r28
    3024:	cd b7       	in	r28, 0x3d	; 61
    3026:	de b7       	in	r29, 0x3e	; 62
    LCD_voidWriteCmd(1);
    3028:	81 e0       	ldi	r24, 0x01	; 1
    302a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
}
    302e:	cf 91       	pop	r28
    3030:	df 91       	pop	r29
    3032:	08 95       	ret

00003034 <LCD_voidInsertTab>:

void LCD_voidInsertTab()
{
    3034:	df 93       	push	r29
    3036:	cf 93       	push	r28
    3038:	0f 92       	push	r0
    303a:	cd b7       	in	r28, 0x3d	; 61
    303c:	de b7       	in	r29, 0x3e	; 62
    for (u8 i = 0; i < LCD_TAB; i++)
    303e:	19 82       	std	Y+1, r1	; 0x01
    3040:	06 c0       	rjmp	.+12     	; 0x304e <LCD_voidInsertTab+0x1a>
    {
        LCD_voidWriteData(' ');
    3042:	80 e2       	ldi	r24, 0x20	; 32
    3044:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
    LCD_voidWriteCmd(1);
}

void LCD_voidInsertTab()
{
    for (u8 i = 0; i < LCD_TAB; i++)
    3048:	89 81       	ldd	r24, Y+1	; 0x01
    304a:	8f 5f       	subi	r24, 0xFF	; 255
    304c:	89 83       	std	Y+1, r24	; 0x01
    304e:	89 81       	ldd	r24, Y+1	; 0x01
    3050:	83 30       	cpi	r24, 0x03	; 3
    3052:	b8 f3       	brcs	.-18     	; 0x3042 <LCD_voidInsertTab+0xe>
    {
        LCD_voidWriteData(' ');
    }
    
}
    3054:	0f 90       	pop	r0
    3056:	cf 91       	pop	r28
    3058:	df 91       	pop	r29
    305a:	08 95       	ret

0000305c <LCD_voidGoToXY>:

void LCD_voidGoToXY(u8 x, u8 y)
{
    305c:	df 93       	push	r29
    305e:	cf 93       	push	r28
    3060:	00 d0       	rcall	.+0      	; 0x3062 <LCD_voidGoToXY+0x6>
    3062:	0f 92       	push	r0
    3064:	cd b7       	in	r28, 0x3d	; 61
    3066:	de b7       	in	r29, 0x3e	; 62
    3068:	8a 83       	std	Y+2, r24	; 0x02
    306a:	6b 83       	std	Y+3, r22	; 0x03
    u8 yAddressShift = ((y%2) * 0x40) + 0x40;
    306c:	8b 81       	ldd	r24, Y+3	; 0x03
    306e:	88 2f       	mov	r24, r24
    3070:	90 e0       	ldi	r25, 0x00	; 0
    3072:	81 70       	andi	r24, 0x01	; 1
    3074:	90 70       	andi	r25, 0x00	; 0
    3076:	01 96       	adiw	r24, 0x01	; 1
    3078:	00 24       	eor	r0, r0
    307a:	96 95       	lsr	r25
    307c:	87 95       	ror	r24
    307e:	07 94       	ror	r0
    3080:	96 95       	lsr	r25
    3082:	87 95       	ror	r24
    3084:	07 94       	ror	r0
    3086:	98 2f       	mov	r25, r24
    3088:	80 2d       	mov	r24, r0
    308a:	89 83       	std	Y+1, r24	; 0x01
    LCD_voidWriteCmd(yAddressShift + x *2);
    308c:	8a 81       	ldd	r24, Y+2	; 0x02
    308e:	88 2f       	mov	r24, r24
    3090:	90 e0       	ldi	r25, 0x00	; 0
    3092:	88 0f       	add	r24, r24
    3094:	99 1f       	adc	r25, r25
    3096:	98 2f       	mov	r25, r24
    3098:	89 81       	ldd	r24, Y+1	; 0x01
    309a:	89 0f       	add	r24, r25
    309c:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
}
    30a0:	0f 90       	pop	r0
    30a2:	0f 90       	pop	r0
    30a4:	0f 90       	pop	r0
    30a6:	cf 91       	pop	r28
    30a8:	df 91       	pop	r29
    30aa:	08 95       	ret

000030ac <LCD_voidPrintf>:

void LCD_voidPrintf(s8 *formated, ...)
{
    30ac:	df 93       	push	r29
    30ae:	cf 93       	push	r28
    30b0:	cd b7       	in	r28, 0x3d	; 61
    30b2:	de b7       	in	r29, 0x3e	; 62
    30b4:	61 97       	sbiw	r28, 0x11	; 17
    30b6:	0f b6       	in	r0, 0x3f	; 63
    30b8:	f8 94       	cli
    30ba:	de bf       	out	0x3e, r29	; 62
    30bc:	0f be       	out	0x3f, r0	; 63
    30be:	cd bf       	out	0x3d, r28	; 61
    /* Character Counter */
    u8 i = 0;
    30c0:	1f 86       	std	Y+15, r1	; 0x0f
    u8 *String = (u8 *)formated;
    30c2:	8e 89       	ldd	r24, Y+22	; 0x16
    30c4:	9f 89       	ldd	r25, Y+23	; 0x17
    30c6:	9e 87       	std	Y+14, r25	; 0x0e
    30c8:	8d 87       	std	Y+13, r24	; 0x0d

    // u8 *ap = (u8 *)(&(formated) + 1);
    va_list ap;
    va_start(ap, formated);
    30ca:	ce 01       	movw	r24, r28
    30cc:	46 96       	adiw	r24, 0x16	; 22
    30ce:	02 96       	adiw	r24, 0x02	; 2
    30d0:	9c 87       	std	Y+12, r25	; 0x0c
    30d2:	8b 87       	std	Y+11, r24	; 0x0b
    30d4:	0a c1       	rjmp	.+532    	; 0x32ea <LCD_voidPrintf+0x23e>
    while (String[i] != '\0')
    {
        if (String[i] == '%')
    30d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    30d8:	28 2f       	mov	r18, r24
    30da:	30 e0       	ldi	r19, 0x00	; 0
    30dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    30de:	9e 85       	ldd	r25, Y+14	; 0x0e
    30e0:	fc 01       	movw	r30, r24
    30e2:	e2 0f       	add	r30, r18
    30e4:	f3 1f       	adc	r31, r19
    30e6:	80 81       	ld	r24, Z
    30e8:	85 32       	cpi	r24, 0x25	; 37
    30ea:	09 f0       	breq	.+2      	; 0x30ee <LCD_voidPrintf+0x42>
    30ec:	d3 c0       	rjmp	.+422    	; 0x3294 <LCD_voidPrintf+0x1e8>
        {
            i++;
    30ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    30f0:	8f 5f       	subi	r24, 0xFF	; 255
    30f2:	8f 87       	std	Y+15, r24	; 0x0f
            switch (String[i])
    30f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    30f6:	28 2f       	mov	r18, r24
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    30fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    30fe:	fc 01       	movw	r30, r24
    3100:	e2 0f       	add	r30, r18
    3102:	f3 1f       	adc	r31, r19
    3104:	80 81       	ld	r24, Z
    3106:	28 2f       	mov	r18, r24
    3108:	30 e0       	ldi	r19, 0x00	; 0
    310a:	39 8b       	std	Y+17, r19	; 0x11
    310c:	28 8b       	std	Y+16, r18	; 0x10
    310e:	88 89       	ldd	r24, Y+16	; 0x10
    3110:	99 89       	ldd	r25, Y+17	; 0x11
    3112:	83 36       	cpi	r24, 0x63	; 99
    3114:	91 05       	cpc	r25, r1
    3116:	f1 f0       	breq	.+60     	; 0x3154 <LCD_voidPrintf+0xa8>
    3118:	28 89       	ldd	r18, Y+16	; 0x10
    311a:	39 89       	ldd	r19, Y+17	; 0x11
    311c:	24 36       	cpi	r18, 0x64	; 100
    311e:	31 05       	cpc	r19, r1
    3120:	44 f4       	brge	.+16     	; 0x3132 <LCD_voidPrintf+0x86>
    3122:	88 89       	ldd	r24, Y+16	; 0x10
    3124:	99 89       	ldd	r25, Y+17	; 0x11
    3126:	c2 97       	sbiw	r24, 0x32	; 50
    3128:	88 30       	cpi	r24, 0x08	; 8
    312a:	91 05       	cpc	r25, r1
    312c:	08 f0       	brcs	.+2      	; 0x3130 <LCD_voidPrintf+0x84>
    312e:	a3 c0       	rjmp	.+326    	; 0x3276 <LCD_voidPrintf+0x1ca>
    3130:	61 c0       	rjmp	.+194    	; 0x31f4 <LCD_voidPrintf+0x148>
    3132:	88 89       	ldd	r24, Y+16	; 0x10
    3134:	99 89       	ldd	r25, Y+17	; 0x11
    3136:	83 37       	cpi	r24, 0x73	; 115
    3138:	91 05       	cpc	r25, r1
    313a:	09 f4       	brne	.+2      	; 0x313e <LCD_voidPrintf+0x92>
    313c:	49 c0       	rjmp	.+146    	; 0x31d0 <LCD_voidPrintf+0x124>
    313e:	28 89       	ldd	r18, Y+16	; 0x10
    3140:	39 89       	ldd	r19, Y+17	; 0x11
    3142:	28 37       	cpi	r18, 0x78	; 120
    3144:	31 05       	cpc	r19, r1
    3146:	91 f1       	breq	.+100    	; 0x31ac <LCD_voidPrintf+0x100>
    3148:	88 89       	ldd	r24, Y+16	; 0x10
    314a:	99 89       	ldd	r25, Y+17	; 0x11
    314c:	84 36       	cpi	r24, 0x64	; 100
    314e:	91 05       	cpc	r25, r1
    3150:	d9 f0       	breq	.+54     	; 0x3188 <LCD_voidPrintf+0xdc>
    3152:	91 c0       	rjmp	.+290    	; 0x3276 <LCD_voidPrintf+0x1ca>
            {
            case 'c':
            {
                // u8 tempChar = *((u8 *)ap);
                // ap += sizeof(u8);
                u8 tempChar = va_arg(ap, u8);
    3154:	8b 85       	ldd	r24, Y+11	; 0x0b
    3156:	9c 85       	ldd	r25, Y+12	; 0x0c
    3158:	01 96       	adiw	r24, 0x01	; 1
    315a:	9c 87       	std	Y+12, r25	; 0x0c
    315c:	8b 87       	std	Y+11, r24	; 0x0b
    315e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3160:	9c 85       	ldd	r25, Y+12	; 0x0c
    3162:	fc 01       	movw	r30, r24
    3164:	31 97       	sbiw	r30, 0x01	; 1
    3166:	80 81       	ld	r24, Z
    3168:	8a 87       	std	Y+10, r24	; 0x0a
                LCD_voidWriteData(tempChar);
    316a:	8a 85       	ldd	r24, Y+10	; 0x0a
    316c:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
                tempChar = va_arg(ap, u8); /* memory skipping */
    3170:	8b 85       	ldd	r24, Y+11	; 0x0b
    3172:	9c 85       	ldd	r25, Y+12	; 0x0c
    3174:	01 96       	adiw	r24, 0x01	; 1
    3176:	9c 87       	std	Y+12, r25	; 0x0c
    3178:	8b 87       	std	Y+11, r24	; 0x0b
    317a:	8b 85       	ldd	r24, Y+11	; 0x0b
    317c:	9c 85       	ldd	r25, Y+12	; 0x0c
    317e:	fc 01       	movw	r30, r24
    3180:	31 97       	sbiw	r30, 0x01	; 1
    3182:	80 81       	ld	r24, Z
    3184:	8a 87       	std	Y+10, r24	; 0x0a
    3186:	ae c0       	rjmp	.+348    	; 0x32e4 <LCD_voidPrintf+0x238>
                break;
            }
            case 'd':
            {
                s32 tempIntDec = va_arg(ap, s32);
    3188:	8b 85       	ldd	r24, Y+11	; 0x0b
    318a:	9c 85       	ldd	r25, Y+12	; 0x0c
    318c:	02 96       	adiw	r24, 0x02	; 2
    318e:	9c 87       	std	Y+12, r25	; 0x0c
    3190:	8b 87       	std	Y+11, r24	; 0x0b
    3192:	8b 85       	ldd	r24, Y+11	; 0x0b
    3194:	9c 85       	ldd	r25, Y+12	; 0x0c
    3196:	fc 01       	movw	r30, r24
    3198:	32 97       	sbiw	r30, 0x02	; 2
    319a:	80 81       	ld	r24, Z
    319c:	91 81       	ldd	r25, Z+1	; 0x01
    319e:	99 87       	std	Y+9, r25	; 0x09
    31a0:	88 87       	std	Y+8, r24	; 0x08
                LCD_voidWriteIntegerDec(tempIntDec);
    31a2:	88 85       	ldd	r24, Y+8	; 0x08
    31a4:	99 85       	ldd	r25, Y+9	; 0x09
    31a6:	0e 94 e1 16 	call	0x2dc2	; 0x2dc2 <LCD_voidWriteIntegerDec>
    31aa:	9c c0       	rjmp	.+312    	; 0x32e4 <LCD_voidPrintf+0x238>
                break;
            }
            case 'x':
            {
                s32 tempIntHex = va_arg(ap, s32);
    31ac:	8b 85       	ldd	r24, Y+11	; 0x0b
    31ae:	9c 85       	ldd	r25, Y+12	; 0x0c
    31b0:	02 96       	adiw	r24, 0x02	; 2
    31b2:	9c 87       	std	Y+12, r25	; 0x0c
    31b4:	8b 87       	std	Y+11, r24	; 0x0b
    31b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    31b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    31ba:	fc 01       	movw	r30, r24
    31bc:	32 97       	sbiw	r30, 0x02	; 2
    31be:	80 81       	ld	r24, Z
    31c0:	91 81       	ldd	r25, Z+1	; 0x01
    31c2:	9f 83       	std	Y+7, r25	; 0x07
    31c4:	8e 83       	std	Y+6, r24	; 0x06
                LCD_voidWriteIntegerHex(tempIntHex);
    31c6:	8e 81       	ldd	r24, Y+6	; 0x06
    31c8:	9f 81       	ldd	r25, Y+7	; 0x07
    31ca:	0e 94 93 17 	call	0x2f26	; 0x2f26 <LCD_voidWriteIntegerHex>
    31ce:	8a c0       	rjmp	.+276    	; 0x32e4 <LCD_voidPrintf+0x238>
                break;
            }
            case 's':
            {
                s8 *tempStr = va_arg(ap, s8 *);
    31d0:	8b 85       	ldd	r24, Y+11	; 0x0b
    31d2:	9c 85       	ldd	r25, Y+12	; 0x0c
    31d4:	02 96       	adiw	r24, 0x02	; 2
    31d6:	9c 87       	std	Y+12, r25	; 0x0c
    31d8:	8b 87       	std	Y+11, r24	; 0x0b
    31da:	8b 85       	ldd	r24, Y+11	; 0x0b
    31dc:	9c 85       	ldd	r25, Y+12	; 0x0c
    31de:	fc 01       	movw	r30, r24
    31e0:	32 97       	sbiw	r30, 0x02	; 2
    31e2:	80 81       	ld	r24, Z
    31e4:	91 81       	ldd	r25, Z+1	; 0x01
    31e6:	9d 83       	std	Y+5, r25	; 0x05
    31e8:	8c 83       	std	Y+4, r24	; 0x04
                LCD_voidWriteString(tempStr);
    31ea:	8c 81       	ldd	r24, Y+4	; 0x04
    31ec:	9d 81       	ldd	r25, Y+5	; 0x05
    31ee:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <LCD_voidWriteString>
    31f2:	78 c0       	rjmp	.+240    	; 0x32e4 <LCD_voidPrintf+0x238>
            case '6':
            case '7':
            case '8':
            case '9':
            {
                u8 floringBy = String[i] - 48;
    31f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    31f6:	28 2f       	mov	r18, r24
    31f8:	30 e0       	ldi	r19, 0x00	; 0
    31fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    31fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    31fe:	fc 01       	movw	r30, r24
    3200:	e2 0f       	add	r30, r18
    3202:	f3 1f       	adc	r31, r19
    3204:	80 81       	ld	r24, Z
    3206:	80 53       	subi	r24, 0x30	; 48
    3208:	8b 83       	std	Y+3, r24	; 0x03
                if (String[i+1] == 'd')
    320a:	8f 85       	ldd	r24, Y+15	; 0x0f
    320c:	88 2f       	mov	r24, r24
    320e:	90 e0       	ldi	r25, 0x00	; 0
    3210:	9c 01       	movw	r18, r24
    3212:	2f 5f       	subi	r18, 0xFF	; 255
    3214:	3f 4f       	sbci	r19, 0xFF	; 255
    3216:	8d 85       	ldd	r24, Y+13	; 0x0d
    3218:	9e 85       	ldd	r25, Y+14	; 0x0e
    321a:	fc 01       	movw	r30, r24
    321c:	e2 0f       	add	r30, r18
    321e:	f3 1f       	adc	r31, r19
    3220:	80 81       	ld	r24, Z
    3222:	84 36       	cpi	r24, 0x64	; 100
    3224:	c9 f4       	brne	.+50     	; 0x3258 <LCD_voidPrintf+0x1ac>
                {
                    i++;
    3226:	8f 85       	ldd	r24, Y+15	; 0x0f
    3228:	8f 5f       	subi	r24, 0xFF	; 255
    322a:	8f 87       	std	Y+15, r24	; 0x0f
                    s32 tempIntDec = va_arg(ap, s32);
    322c:	8b 85       	ldd	r24, Y+11	; 0x0b
    322e:	9c 85       	ldd	r25, Y+12	; 0x0c
    3230:	02 96       	adiw	r24, 0x02	; 2
    3232:	9c 87       	std	Y+12, r25	; 0x0c
    3234:	8b 87       	std	Y+11, r24	; 0x0b
    3236:	8b 85       	ldd	r24, Y+11	; 0x0b
    3238:	9c 85       	ldd	r25, Y+12	; 0x0c
    323a:	fc 01       	movw	r30, r24
    323c:	32 97       	sbiw	r30, 0x02	; 2
    323e:	80 81       	ld	r24, Z
    3240:	91 81       	ldd	r25, Z+1	; 0x01
    3242:	9a 83       	std	Y+2, r25	; 0x02
    3244:	89 83       	std	Y+1, r24	; 0x01
                    LCD_voidWriteIntegerDecFLored(tempIntDec,floringBy);
    3246:	8b 81       	ldd	r24, Y+3	; 0x03
    3248:	28 2f       	mov	r18, r24
    324a:	30 e0       	ldi	r19, 0x00	; 0
    324c:	89 81       	ldd	r24, Y+1	; 0x01
    324e:	9a 81       	ldd	r25, Y+2	; 0x02
    3250:	b9 01       	movw	r22, r18
    3252:	0e 94 35 17 	call	0x2e6a	; 0x2e6a <LCD_voidWriteIntegerDecFLored>
    3256:	46 c0       	rjmp	.+140    	; 0x32e4 <LCD_voidPrintf+0x238>
                }else
                {
                    LCD_voidWriteData('%');
    3258:	85 e2       	ldi	r24, 0x25	; 37
    325a:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
                    LCD_voidWriteData(String[i]);
    325e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3260:	28 2f       	mov	r18, r24
    3262:	30 e0       	ldi	r19, 0x00	; 0
    3264:	8d 85       	ldd	r24, Y+13	; 0x0d
    3266:	9e 85       	ldd	r25, Y+14	; 0x0e
    3268:	fc 01       	movw	r30, r24
    326a:	e2 0f       	add	r30, r18
    326c:	f3 1f       	adc	r31, r19
    326e:	80 81       	ld	r24, Z
    3270:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
    3274:	37 c0       	rjmp	.+110    	; 0x32e4 <LCD_voidPrintf+0x238>
                
                break;
            }

            default:
                LCD_voidWriteData('%');
    3276:	85 e2       	ldi	r24, 0x25	; 37
    3278:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
                LCD_voidWriteData(String[i]);
    327c:	8f 85       	ldd	r24, Y+15	; 0x0f
    327e:	28 2f       	mov	r18, r24
    3280:	30 e0       	ldi	r19, 0x00	; 0
    3282:	8d 85       	ldd	r24, Y+13	; 0x0d
    3284:	9e 85       	ldd	r25, Y+14	; 0x0e
    3286:	fc 01       	movw	r30, r24
    3288:	e2 0f       	add	r30, r18
    328a:	f3 1f       	adc	r31, r19
    328c:	80 81       	ld	r24, Z
    328e:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
    3292:	28 c0       	rjmp	.+80     	; 0x32e4 <LCD_voidPrintf+0x238>
                break;
            }
        }
        else if (String[i] == '\n')
    3294:	8f 85       	ldd	r24, Y+15	; 0x0f
    3296:	28 2f       	mov	r18, r24
    3298:	30 e0       	ldi	r19, 0x00	; 0
    329a:	8d 85       	ldd	r24, Y+13	; 0x0d
    329c:	9e 85       	ldd	r25, Y+14	; 0x0e
    329e:	fc 01       	movw	r30, r24
    32a0:	e2 0f       	add	r30, r18
    32a2:	f3 1f       	adc	r31, r19
    32a4:	80 81       	ld	r24, Z
    32a6:	8a 30       	cpi	r24, 0x0A	; 10
    32a8:	21 f4       	brne	.+8      	; 0x32b2 <LCD_voidPrintf+0x206>
        {
            LCD_voidWriteCmd(CURSOR_TO_LINE2);
    32aa:	80 ec       	ldi	r24, 0xC0	; 192
    32ac:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    32b0:	19 c0       	rjmp	.+50     	; 0x32e4 <LCD_voidPrintf+0x238>
        }
        else if (String[i] == '\t')
    32b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    32b4:	28 2f       	mov	r18, r24
    32b6:	30 e0       	ldi	r19, 0x00	; 0
    32b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    32ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    32bc:	fc 01       	movw	r30, r24
    32be:	e2 0f       	add	r30, r18
    32c0:	f3 1f       	adc	r31, r19
    32c2:	80 81       	ld	r24, Z
    32c4:	89 30       	cpi	r24, 0x09	; 9
    32c6:	19 f4       	brne	.+6      	; 0x32ce <LCD_voidPrintf+0x222>
        {
            LCD_voidInsertTab();
    32c8:	0e 94 1a 18 	call	0x3034	; 0x3034 <LCD_voidInsertTab>
    32cc:	0b c0       	rjmp	.+22     	; 0x32e4 <LCD_voidPrintf+0x238>
        }
        else
        {
            LCD_voidWriteData(String[i]);
    32ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    32d0:	28 2f       	mov	r18, r24
    32d2:	30 e0       	ldi	r19, 0x00	; 0
    32d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    32d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    32d8:	fc 01       	movw	r30, r24
    32da:	e2 0f       	add	r30, r18
    32dc:	f3 1f       	adc	r31, r19
    32de:	80 81       	ld	r24, Z
    32e0:	0e 94 84 16 	call	0x2d08	; 0x2d08 <LCD_voidWriteData>
        }

        i++;
    32e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    32e6:	8f 5f       	subi	r24, 0xFF	; 255
    32e8:	8f 87       	std	Y+15, r24	; 0x0f
    u8 *String = (u8 *)formated;

    // u8 *ap = (u8 *)(&(formated) + 1);
    va_list ap;
    va_start(ap, formated);
    while (String[i] != '\0')
    32ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    32ec:	28 2f       	mov	r18, r24
    32ee:	30 e0       	ldi	r19, 0x00	; 0
    32f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    32f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    32f4:	fc 01       	movw	r30, r24
    32f6:	e2 0f       	add	r30, r18
    32f8:	f3 1f       	adc	r31, r19
    32fa:	80 81       	ld	r24, Z
    32fc:	88 23       	and	r24, r24
    32fe:	09 f0       	breq	.+2      	; 0x3302 <LCD_voidPrintf+0x256>
    3300:	ea ce       	rjmp	.-556    	; 0x30d6 <LCD_voidPrintf+0x2a>
            LCD_voidWriteData(String[i]);
        }

        i++;
    }
}
    3302:	61 96       	adiw	r28, 0x11	; 17
    3304:	0f b6       	in	r0, 0x3f	; 63
    3306:	f8 94       	cli
    3308:	de bf       	out	0x3e, r29	; 62
    330a:	0f be       	out	0x3f, r0	; 63
    330c:	cd bf       	out	0x3d, r28	; 61
    330e:	cf 91       	pop	r28
    3310:	df 91       	pop	r29
    3312:	08 95       	ret

00003314 <LCD_help>:

static void LCD_help(u8 Data)
{
    3314:	df 93       	push	r29
    3316:	cf 93       	push	r28
    3318:	cd b7       	in	r28, 0x3d	; 61
    331a:	de b7       	in	r29, 0x3e	; 62
    331c:	6d 97       	sbiw	r28, 0x1d	; 29
    331e:	0f b6       	in	r0, 0x3f	; 63
    3320:	f8 94       	cli
    3322:	de bf       	out	0x3e, r29	; 62
    3324:	0f be       	out	0x3f, r0	; 63
    3326:	cd bf       	out	0x3d, r28	; 61
    3328:	8d 8f       	std	Y+29, r24	; 0x1d
#if (LCD_MODE == FOUR_BIT)
    {

        if (GET_BIT(Data, 7) == 1)
    332a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    332c:	88 1f       	adc	r24, r24
    332e:	88 27       	eor	r24, r24
    3330:	88 1f       	adc	r24, r24
    3332:	81 30       	cpi	r24, 0x01	; 1
    3334:	29 f4       	brne	.+10     	; 0x3340 <LCD_help+0x2c>
            DIO_voidSetPin(D7_PIN, HIGH);
    3336:	86 e0       	ldi	r24, 0x06	; 6
    3338:	61 e0       	ldi	r22, 0x01	; 1
    333a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    333e:	04 c0       	rjmp	.+8      	; 0x3348 <LCD_help+0x34>
        else
            DIO_voidSetPin(D7_PIN, LOW);
    3340:	86 e0       	ldi	r24, 0x06	; 6
    3342:	60 e0       	ldi	r22, 0x00	; 0
    3344:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        if (GET_BIT(Data, 6) == 1)
    3348:	8d 8d       	ldd	r24, Y+29	; 0x1d
    334a:	82 95       	swap	r24
    334c:	86 95       	lsr	r24
    334e:	86 95       	lsr	r24
    3350:	83 70       	andi	r24, 0x03	; 3
    3352:	88 2f       	mov	r24, r24
    3354:	90 e0       	ldi	r25, 0x00	; 0
    3356:	81 70       	andi	r24, 0x01	; 1
    3358:	90 70       	andi	r25, 0x00	; 0
    335a:	88 23       	and	r24, r24
    335c:	29 f0       	breq	.+10     	; 0x3368 <LCD_help+0x54>
            DIO_voidSetPin(D6_PIN, HIGH);
    335e:	85 e0       	ldi	r24, 0x05	; 5
    3360:	61 e0       	ldi	r22, 0x01	; 1
    3362:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    3366:	04 c0       	rjmp	.+8      	; 0x3370 <LCD_help+0x5c>
        else
            DIO_voidSetPin(D6_PIN, LOW);
    3368:	85 e0       	ldi	r24, 0x05	; 5
    336a:	60 e0       	ldi	r22, 0x00	; 0
    336c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        if (GET_BIT(Data, 5) == 1)
    3370:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3372:	82 95       	swap	r24
    3374:	86 95       	lsr	r24
    3376:	87 70       	andi	r24, 0x07	; 7
    3378:	88 2f       	mov	r24, r24
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	81 70       	andi	r24, 0x01	; 1
    337e:	90 70       	andi	r25, 0x00	; 0
    3380:	88 23       	and	r24, r24
    3382:	29 f0       	breq	.+10     	; 0x338e <LCD_help+0x7a>
            DIO_voidSetPin(D5_PIN, HIGH);
    3384:	84 e0       	ldi	r24, 0x04	; 4
    3386:	61 e0       	ldi	r22, 0x01	; 1
    3388:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    338c:	04 c0       	rjmp	.+8      	; 0x3396 <LCD_help+0x82>
        else
            DIO_voidSetPin(D5_PIN, LOW);
    338e:	84 e0       	ldi	r24, 0x04	; 4
    3390:	60 e0       	ldi	r22, 0x00	; 0
    3392:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        if (GET_BIT(Data, 4) == 1)
    3396:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3398:	82 95       	swap	r24
    339a:	8f 70       	andi	r24, 0x0F	; 15
    339c:	88 2f       	mov	r24, r24
    339e:	90 e0       	ldi	r25, 0x00	; 0
    33a0:	81 70       	andi	r24, 0x01	; 1
    33a2:	90 70       	andi	r25, 0x00	; 0
    33a4:	88 23       	and	r24, r24
    33a6:	29 f0       	breq	.+10     	; 0x33b2 <LCD_help+0x9e>
            DIO_voidSetPin(D4_PIN, HIGH);
    33a8:	83 e0       	ldi	r24, 0x03	; 3
    33aa:	61 e0       	ldi	r22, 0x01	; 1
    33ac:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    33b0:	04 c0       	rjmp	.+8      	; 0x33ba <LCD_help+0xa6>
        else
            DIO_voidSetPin(D4_PIN, LOW);
    33b2:	83 e0       	ldi	r24, 0x03	; 3
    33b4:	60 e0       	ldi	r22, 0x00	; 0
    33b6:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        DIO_voidSetPin(EN_PIN, HIGH);
    33ba:	82 e0       	ldi	r24, 0x02	; 2
    33bc:	61 e0       	ldi	r22, 0x01	; 1
    33be:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    33c2:	80 e0       	ldi	r24, 0x00	; 0
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	a0 ea       	ldi	r26, 0xA0	; 160
    33c8:	b0 e4       	ldi	r27, 0x40	; 64
    33ca:	89 8f       	std	Y+25, r24	; 0x19
    33cc:	9a 8f       	std	Y+26, r25	; 0x1a
    33ce:	ab 8f       	std	Y+27, r26	; 0x1b
    33d0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33d2:	69 8d       	ldd	r22, Y+25	; 0x19
    33d4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    33d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    33d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    33da:	20 e0       	ldi	r18, 0x00	; 0
    33dc:	30 e0       	ldi	r19, 0x00	; 0
    33de:	4a e7       	ldi	r20, 0x7A	; 122
    33e0:	55 e4       	ldi	r21, 0x45	; 69
    33e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	8d 8b       	std	Y+21, r24	; 0x15
    33ec:	9e 8b       	std	Y+22, r25	; 0x16
    33ee:	af 8b       	std	Y+23, r26	; 0x17
    33f0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    33f2:	6d 89       	ldd	r22, Y+21	; 0x15
    33f4:	7e 89       	ldd	r23, Y+22	; 0x16
    33f6:	8f 89       	ldd	r24, Y+23	; 0x17
    33f8:	98 8d       	ldd	r25, Y+24	; 0x18
    33fa:	20 e0       	ldi	r18, 0x00	; 0
    33fc:	30 e0       	ldi	r19, 0x00	; 0
    33fe:	40 e8       	ldi	r20, 0x80	; 128
    3400:	5f e3       	ldi	r21, 0x3F	; 63
    3402:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3406:	88 23       	and	r24, r24
    3408:	2c f4       	brge	.+10     	; 0x3414 <LCD_help+0x100>
		__ticks = 1;
    340a:	81 e0       	ldi	r24, 0x01	; 1
    340c:	90 e0       	ldi	r25, 0x00	; 0
    340e:	9c 8b       	std	Y+20, r25	; 0x14
    3410:	8b 8b       	std	Y+19, r24	; 0x13
    3412:	3f c0       	rjmp	.+126    	; 0x3492 <LCD_help+0x17e>
	else if (__tmp > 65535)
    3414:	6d 89       	ldd	r22, Y+21	; 0x15
    3416:	7e 89       	ldd	r23, Y+22	; 0x16
    3418:	8f 89       	ldd	r24, Y+23	; 0x17
    341a:	98 8d       	ldd	r25, Y+24	; 0x18
    341c:	20 e0       	ldi	r18, 0x00	; 0
    341e:	3f ef       	ldi	r19, 0xFF	; 255
    3420:	4f e7       	ldi	r20, 0x7F	; 127
    3422:	57 e4       	ldi	r21, 0x47	; 71
    3424:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3428:	18 16       	cp	r1, r24
    342a:	4c f5       	brge	.+82     	; 0x347e <LCD_help+0x16a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    342c:	69 8d       	ldd	r22, Y+25	; 0x19
    342e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3430:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3432:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3434:	20 e0       	ldi	r18, 0x00	; 0
    3436:	30 e0       	ldi	r19, 0x00	; 0
    3438:	40 e2       	ldi	r20, 0x20	; 32
    343a:	51 e4       	ldi	r21, 0x41	; 65
    343c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3440:	dc 01       	movw	r26, r24
    3442:	cb 01       	movw	r24, r22
    3444:	bc 01       	movw	r22, r24
    3446:	cd 01       	movw	r24, r26
    3448:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    344c:	dc 01       	movw	r26, r24
    344e:	cb 01       	movw	r24, r22
    3450:	9c 8b       	std	Y+20, r25	; 0x14
    3452:	8b 8b       	std	Y+19, r24	; 0x13
    3454:	0f c0       	rjmp	.+30     	; 0x3474 <LCD_help+0x160>
    3456:	80 e9       	ldi	r24, 0x90	; 144
    3458:	91 e0       	ldi	r25, 0x01	; 1
    345a:	9a 8b       	std	Y+18, r25	; 0x12
    345c:	89 8b       	std	Y+17, r24	; 0x11
    345e:	89 89       	ldd	r24, Y+17	; 0x11
    3460:	9a 89       	ldd	r25, Y+18	; 0x12
    3462:	01 97       	sbiw	r24, 0x01	; 1
    3464:	f1 f7       	brne	.-4      	; 0x3462 <LCD_help+0x14e>
    3466:	9a 8b       	std	Y+18, r25	; 0x12
    3468:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    346a:	8b 89       	ldd	r24, Y+19	; 0x13
    346c:	9c 89       	ldd	r25, Y+20	; 0x14
    346e:	01 97       	sbiw	r24, 0x01	; 1
    3470:	9c 8b       	std	Y+20, r25	; 0x14
    3472:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3474:	8b 89       	ldd	r24, Y+19	; 0x13
    3476:	9c 89       	ldd	r25, Y+20	; 0x14
    3478:	00 97       	sbiw	r24, 0x00	; 0
    347a:	69 f7       	brne	.-38     	; 0x3456 <LCD_help+0x142>
    347c:	14 c0       	rjmp	.+40     	; 0x34a6 <LCD_help+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    347e:	6d 89       	ldd	r22, Y+21	; 0x15
    3480:	7e 89       	ldd	r23, Y+22	; 0x16
    3482:	8f 89       	ldd	r24, Y+23	; 0x17
    3484:	98 8d       	ldd	r25, Y+24	; 0x18
    3486:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    348a:	dc 01       	movw	r26, r24
    348c:	cb 01       	movw	r24, r22
    348e:	9c 8b       	std	Y+20, r25	; 0x14
    3490:	8b 8b       	std	Y+19, r24	; 0x13
    3492:	8b 89       	ldd	r24, Y+19	; 0x13
    3494:	9c 89       	ldd	r25, Y+20	; 0x14
    3496:	98 8b       	std	Y+16, r25	; 0x10
    3498:	8f 87       	std	Y+15, r24	; 0x0f
    349a:	8f 85       	ldd	r24, Y+15	; 0x0f
    349c:	98 89       	ldd	r25, Y+16	; 0x10
    349e:	01 97       	sbiw	r24, 0x01	; 1
    34a0:	f1 f7       	brne	.-4      	; 0x349e <LCD_help+0x18a>
    34a2:	98 8b       	std	Y+16, r25	; 0x10
    34a4:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(5);
        DIO_voidSetPin(EN_PIN, LOW);
    34a6:	82 e0       	ldi	r24, 0x02	; 2
    34a8:	60 e0       	ldi	r22, 0x00	; 0
    34aa:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        if (GET_BIT(Data, 3) == 1)
    34ae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    34b0:	86 95       	lsr	r24
    34b2:	86 95       	lsr	r24
    34b4:	86 95       	lsr	r24
    34b6:	88 2f       	mov	r24, r24
    34b8:	90 e0       	ldi	r25, 0x00	; 0
    34ba:	81 70       	andi	r24, 0x01	; 1
    34bc:	90 70       	andi	r25, 0x00	; 0
    34be:	88 23       	and	r24, r24
    34c0:	29 f0       	breq	.+10     	; 0x34cc <LCD_help+0x1b8>
            DIO_voidSetPin(D7_PIN, HIGH);
    34c2:	86 e0       	ldi	r24, 0x06	; 6
    34c4:	61 e0       	ldi	r22, 0x01	; 1
    34c6:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    34ca:	04 c0       	rjmp	.+8      	; 0x34d4 <LCD_help+0x1c0>
        else
            DIO_voidSetPin(D7_PIN, LOW);
    34cc:	86 e0       	ldi	r24, 0x06	; 6
    34ce:	60 e0       	ldi	r22, 0x00	; 0
    34d0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        if (GET_BIT(Data, 2) == 1)
    34d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    34d6:	86 95       	lsr	r24
    34d8:	86 95       	lsr	r24
    34da:	88 2f       	mov	r24, r24
    34dc:	90 e0       	ldi	r25, 0x00	; 0
    34de:	81 70       	andi	r24, 0x01	; 1
    34e0:	90 70       	andi	r25, 0x00	; 0
    34e2:	88 23       	and	r24, r24
    34e4:	29 f0       	breq	.+10     	; 0x34f0 <LCD_help+0x1dc>
            DIO_voidSetPin(D6_PIN, HIGH);
    34e6:	85 e0       	ldi	r24, 0x05	; 5
    34e8:	61 e0       	ldi	r22, 0x01	; 1
    34ea:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    34ee:	04 c0       	rjmp	.+8      	; 0x34f8 <LCD_help+0x1e4>
        else
            DIO_voidSetPin(D6_PIN, LOW);
    34f0:	85 e0       	ldi	r24, 0x05	; 5
    34f2:	60 e0       	ldi	r22, 0x00	; 0
    34f4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        if (GET_BIT(Data, 1) == 1)
    34f8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    34fa:	86 95       	lsr	r24
    34fc:	88 2f       	mov	r24, r24
    34fe:	90 e0       	ldi	r25, 0x00	; 0
    3500:	81 70       	andi	r24, 0x01	; 1
    3502:	90 70       	andi	r25, 0x00	; 0
    3504:	88 23       	and	r24, r24
    3506:	29 f0       	breq	.+10     	; 0x3512 <LCD_help+0x1fe>
            DIO_voidSetPin(D5_PIN, HIGH);
    3508:	84 e0       	ldi	r24, 0x04	; 4
    350a:	61 e0       	ldi	r22, 0x01	; 1
    350c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    3510:	04 c0       	rjmp	.+8      	; 0x351a <LCD_help+0x206>
        else
            DIO_voidSetPin(D5_PIN, LOW);
    3512:	84 e0       	ldi	r24, 0x04	; 4
    3514:	60 e0       	ldi	r22, 0x00	; 0
    3516:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        if (GET_BIT(Data, 0) == 1)
    351a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    351c:	88 2f       	mov	r24, r24
    351e:	90 e0       	ldi	r25, 0x00	; 0
    3520:	81 70       	andi	r24, 0x01	; 1
    3522:	90 70       	andi	r25, 0x00	; 0
    3524:	88 23       	and	r24, r24
    3526:	29 f0       	breq	.+10     	; 0x3532 <LCD_help+0x21e>
            DIO_voidSetPin(D4_PIN, HIGH);
    3528:	83 e0       	ldi	r24, 0x03	; 3
    352a:	61 e0       	ldi	r22, 0x01	; 1
    352c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    3530:	04 c0       	rjmp	.+8      	; 0x353a <LCD_help+0x226>
        else
            DIO_voidSetPin(D4_PIN, LOW);
    3532:	83 e0       	ldi	r24, 0x03	; 3
    3534:	60 e0       	ldi	r22, 0x00	; 0
    3536:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>

        DIO_voidSetPin(EN_PIN, HIGH);
    353a:	82 e0       	ldi	r24, 0x02	; 2
    353c:	61 e0       	ldi	r22, 0x01	; 1
    353e:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    3542:	80 e0       	ldi	r24, 0x00	; 0
    3544:	90 e0       	ldi	r25, 0x00	; 0
    3546:	a0 ea       	ldi	r26, 0xA0	; 160
    3548:	b0 e4       	ldi	r27, 0x40	; 64
    354a:	8b 87       	std	Y+11, r24	; 0x0b
    354c:	9c 87       	std	Y+12, r25	; 0x0c
    354e:	ad 87       	std	Y+13, r26	; 0x0d
    3550:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3552:	6b 85       	ldd	r22, Y+11	; 0x0b
    3554:	7c 85       	ldd	r23, Y+12	; 0x0c
    3556:	8d 85       	ldd	r24, Y+13	; 0x0d
    3558:	9e 85       	ldd	r25, Y+14	; 0x0e
    355a:	20 e0       	ldi	r18, 0x00	; 0
    355c:	30 e0       	ldi	r19, 0x00	; 0
    355e:	4a e7       	ldi	r20, 0x7A	; 122
    3560:	55 e4       	ldi	r21, 0x45	; 69
    3562:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3566:	dc 01       	movw	r26, r24
    3568:	cb 01       	movw	r24, r22
    356a:	8f 83       	std	Y+7, r24	; 0x07
    356c:	98 87       	std	Y+8, r25	; 0x08
    356e:	a9 87       	std	Y+9, r26	; 0x09
    3570:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3572:	6f 81       	ldd	r22, Y+7	; 0x07
    3574:	78 85       	ldd	r23, Y+8	; 0x08
    3576:	89 85       	ldd	r24, Y+9	; 0x09
    3578:	9a 85       	ldd	r25, Y+10	; 0x0a
    357a:	20 e0       	ldi	r18, 0x00	; 0
    357c:	30 e0       	ldi	r19, 0x00	; 0
    357e:	40 e8       	ldi	r20, 0x80	; 128
    3580:	5f e3       	ldi	r21, 0x3F	; 63
    3582:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3586:	88 23       	and	r24, r24
    3588:	2c f4       	brge	.+10     	; 0x3594 <LCD_help+0x280>
		__ticks = 1;
    358a:	81 e0       	ldi	r24, 0x01	; 1
    358c:	90 e0       	ldi	r25, 0x00	; 0
    358e:	9e 83       	std	Y+6, r25	; 0x06
    3590:	8d 83       	std	Y+5, r24	; 0x05
    3592:	3f c0       	rjmp	.+126    	; 0x3612 <LCD_help+0x2fe>
	else if (__tmp > 65535)
    3594:	6f 81       	ldd	r22, Y+7	; 0x07
    3596:	78 85       	ldd	r23, Y+8	; 0x08
    3598:	89 85       	ldd	r24, Y+9	; 0x09
    359a:	9a 85       	ldd	r25, Y+10	; 0x0a
    359c:	20 e0       	ldi	r18, 0x00	; 0
    359e:	3f ef       	ldi	r19, 0xFF	; 255
    35a0:	4f e7       	ldi	r20, 0x7F	; 127
    35a2:	57 e4       	ldi	r21, 0x47	; 71
    35a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35a8:	18 16       	cp	r1, r24
    35aa:	4c f5       	brge	.+82     	; 0x35fe <LCD_help+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    35ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    35b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    35b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    35b4:	20 e0       	ldi	r18, 0x00	; 0
    35b6:	30 e0       	ldi	r19, 0x00	; 0
    35b8:	40 e2       	ldi	r20, 0x20	; 32
    35ba:	51 e4       	ldi	r21, 0x41	; 65
    35bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35c0:	dc 01       	movw	r26, r24
    35c2:	cb 01       	movw	r24, r22
    35c4:	bc 01       	movw	r22, r24
    35c6:	cd 01       	movw	r24, r26
    35c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35cc:	dc 01       	movw	r26, r24
    35ce:	cb 01       	movw	r24, r22
    35d0:	9e 83       	std	Y+6, r25	; 0x06
    35d2:	8d 83       	std	Y+5, r24	; 0x05
    35d4:	0f c0       	rjmp	.+30     	; 0x35f4 <LCD_help+0x2e0>
    35d6:	80 e9       	ldi	r24, 0x90	; 144
    35d8:	91 e0       	ldi	r25, 0x01	; 1
    35da:	9c 83       	std	Y+4, r25	; 0x04
    35dc:	8b 83       	std	Y+3, r24	; 0x03
    35de:	8b 81       	ldd	r24, Y+3	; 0x03
    35e0:	9c 81       	ldd	r25, Y+4	; 0x04
    35e2:	01 97       	sbiw	r24, 0x01	; 1
    35e4:	f1 f7       	brne	.-4      	; 0x35e2 <LCD_help+0x2ce>
    35e6:	9c 83       	std	Y+4, r25	; 0x04
    35e8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35ea:	8d 81       	ldd	r24, Y+5	; 0x05
    35ec:	9e 81       	ldd	r25, Y+6	; 0x06
    35ee:	01 97       	sbiw	r24, 0x01	; 1
    35f0:	9e 83       	std	Y+6, r25	; 0x06
    35f2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35f4:	8d 81       	ldd	r24, Y+5	; 0x05
    35f6:	9e 81       	ldd	r25, Y+6	; 0x06
    35f8:	00 97       	sbiw	r24, 0x00	; 0
    35fa:	69 f7       	brne	.-38     	; 0x35d6 <LCD_help+0x2c2>
    35fc:	14 c0       	rjmp	.+40     	; 0x3626 <LCD_help+0x312>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35fe:	6f 81       	ldd	r22, Y+7	; 0x07
    3600:	78 85       	ldd	r23, Y+8	; 0x08
    3602:	89 85       	ldd	r24, Y+9	; 0x09
    3604:	9a 85       	ldd	r25, Y+10	; 0x0a
    3606:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    360a:	dc 01       	movw	r26, r24
    360c:	cb 01       	movw	r24, r22
    360e:	9e 83       	std	Y+6, r25	; 0x06
    3610:	8d 83       	std	Y+5, r24	; 0x05
    3612:	8d 81       	ldd	r24, Y+5	; 0x05
    3614:	9e 81       	ldd	r25, Y+6	; 0x06
    3616:	9a 83       	std	Y+2, r25	; 0x02
    3618:	89 83       	std	Y+1, r24	; 0x01
    361a:	89 81       	ldd	r24, Y+1	; 0x01
    361c:	9a 81       	ldd	r25, Y+2	; 0x02
    361e:	01 97       	sbiw	r24, 0x01	; 1
    3620:	f1 f7       	brne	.-4      	; 0x361e <LCD_help+0x30a>
    3622:	9a 83       	std	Y+2, r25	; 0x02
    3624:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(5);
        DIO_voidSetPin(EN_PIN, LOW);
    3626:	82 e0       	ldi	r24, 0x02	; 2
    3628:	60 e0       	ldi	r22, 0x00	; 0
    362a:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(EN_PIN, HIGH);
        _delay_ms(5);
        DIO_voidSetPin(EN_PIN, LOW);
    }
#endif
}
    362e:	6d 96       	adiw	r28, 0x1d	; 29
    3630:	0f b6       	in	r0, 0x3f	; 63
    3632:	f8 94       	cli
    3634:	de bf       	out	0x3e, r29	; 62
    3636:	0f be       	out	0x3f, r0	; 63
    3638:	cd bf       	out	0x3d, r28	; 61
    363a:	cf 91       	pop	r28
    363c:	df 91       	pop	r29
    363e:	08 95       	ret

00003640 <KEYPAD_voidInitialize>:
#include "KEYPAD_priv.h"
#include "KEYPAD_cfg.h"
#include "KEYPAD_int.h"

void KEYPAD_voidInitialize() /* Switch off all output */
{
    3640:	df 93       	push	r29
    3642:	cf 93       	push	r28
    3644:	cd b7       	in	r28, 0x3d	; 61
    3646:	de b7       	in	r29, 0x3e	; 62
    #if (KEYPAD1_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD1_OUT_PIN, HIGH);
    3648:	8c e0       	ldi	r24, 0x0C	; 12
    364a:	61 e0       	ldi	r22, 0x01	; 1
    364c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(KEYPAD1_OUT_PIN, LOW);
    }
    #endif
    #if (KEYPAD2_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD2_OUT_PIN, HIGH);
    3650:	8d e0       	ldi	r24, 0x0D	; 13
    3652:	61 e0       	ldi	r22, 0x01	; 1
    3654:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(KEYPAD2_OUT_PIN, LOW);
    }
    #endif
    #if (KEYPAD3_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD3_OUT_PIN, HIGH);
    3658:	8e e0       	ldi	r24, 0x0E	; 14
    365a:	61 e0       	ldi	r22, 0x01	; 1
    365c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
        DIO_voidSetPin(KEYPAD3_OUT_PIN, LOW);
    }
    #endif
    #if (KEYPAD4_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD4_OUT_PIN, HIGH);
    3660:	8f e0       	ldi	r24, 0x0F	; 15
    3662:	61 e0       	ldi	r22, 0x01	; 1
    3664:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    #else
    {
        DIO_voidSetPin(KEYPAD4_OUT_PIN, LOW);
    }
    #endif
}
    3668:	cf 91       	pop	r28
    366a:	df 91       	pop	r29
    366c:	08 95       	ret

0000366e <KEYPAD_u8IsPressed>:
u8 KEYPAD_u8IsPressed(u8 keyNum)
{
    366e:	df 93       	push	r29
    3670:	cf 93       	push	r28
    3672:	cd b7       	in	r28, 0x3d	; 61
    3674:	de b7       	in	r29, 0x3e	; 62
    3676:	28 97       	sbiw	r28, 0x08	; 8
    3678:	0f b6       	in	r0, 0x3f	; 63
    367a:	f8 94       	cli
    367c:	de bf       	out	0x3e, r29	; 62
    367e:	0f be       	out	0x3f, r0	; 63
    3680:	cd bf       	out	0x3d, r28	; 61
    3682:	8c 83       	std	Y+4, r24	; 0x04
    KEYPAD_voidInitialize();
    3684:	0e 94 20 1b 	call	0x3640	; 0x3640 <KEYPAD_voidInitialize>
    u8 pressedState = NOT_PRESSED;
    3688:	1b 82       	std	Y+3, r1	; 0x03
    u8 out = (keyNum/4) + 1;
    368a:	8c 81       	ldd	r24, Y+4	; 0x04
    368c:	86 95       	lsr	r24
    368e:	86 95       	lsr	r24
    3690:	8f 5f       	subi	r24, 0xFF	; 255
    3692:	8a 83       	std	Y+2, r24	; 0x02
    u8 in = (keyNum%4) +1;
    3694:	8c 81       	ldd	r24, Y+4	; 0x04
    3696:	83 70       	andi	r24, 0x03	; 3
    3698:	8f 5f       	subi	r24, 0xFF	; 255
    369a:	89 83       	std	Y+1, r24	; 0x01
    switch (out)
    369c:	8a 81       	ldd	r24, Y+2	; 0x02
    369e:	28 2f       	mov	r18, r24
    36a0:	30 e0       	ldi	r19, 0x00	; 0
    36a2:	38 87       	std	Y+8, r19	; 0x08
    36a4:	2f 83       	std	Y+7, r18	; 0x07
    36a6:	8f 81       	ldd	r24, Y+7	; 0x07
    36a8:	98 85       	ldd	r25, Y+8	; 0x08
    36aa:	82 30       	cpi	r24, 0x02	; 2
    36ac:	91 05       	cpc	r25, r1
    36ae:	d9 f0       	breq	.+54     	; 0x36e6 <KEYPAD_u8IsPressed+0x78>
    36b0:	2f 81       	ldd	r18, Y+7	; 0x07
    36b2:	38 85       	ldd	r19, Y+8	; 0x08
    36b4:	23 30       	cpi	r18, 0x03	; 3
    36b6:	31 05       	cpc	r19, r1
    36b8:	34 f4       	brge	.+12     	; 0x36c6 <KEYPAD_u8IsPressed+0x58>
    36ba:	8f 81       	ldd	r24, Y+7	; 0x07
    36bc:	98 85       	ldd	r25, Y+8	; 0x08
    36be:	81 30       	cpi	r24, 0x01	; 1
    36c0:	91 05       	cpc	r25, r1
    36c2:	61 f0       	breq	.+24     	; 0x36dc <KEYPAD_u8IsPressed+0x6e>
    36c4:	1e c0       	rjmp	.+60     	; 0x3702 <KEYPAD_u8IsPressed+0x94>
    36c6:	2f 81       	ldd	r18, Y+7	; 0x07
    36c8:	38 85       	ldd	r19, Y+8	; 0x08
    36ca:	23 30       	cpi	r18, 0x03	; 3
    36cc:	31 05       	cpc	r19, r1
    36ce:	81 f0       	breq	.+32     	; 0x36f0 <KEYPAD_u8IsPressed+0x82>
    36d0:	8f 81       	ldd	r24, Y+7	; 0x07
    36d2:	98 85       	ldd	r25, Y+8	; 0x08
    36d4:	84 30       	cpi	r24, 0x04	; 4
    36d6:	91 05       	cpc	r25, r1
    36d8:	81 f0       	breq	.+32     	; 0x36fa <KEYPAD_u8IsPressed+0x8c>
    36da:	13 c0       	rjmp	.+38     	; 0x3702 <KEYPAD_u8IsPressed+0x94>
    {
    case 1:
    {
        #if (KEYPAD1_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD1_OUT_PIN, LOW);
    36dc:	8c e0       	ldi	r24, 0x0C	; 12
    36de:	60 e0       	ldi	r22, 0x00	; 0
    36e0:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    36e4:	0e c0       	rjmp	.+28     	; 0x3702 <KEYPAD_u8IsPressed+0x94>
        break;
    case 2:
    {
        #if (KEYPAD2_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD2_OUT_PIN, LOW);
    36e6:	8d e0       	ldi	r24, 0x0D	; 13
    36e8:	60 e0       	ldi	r22, 0x00	; 0
    36ea:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    36ee:	09 c0       	rjmp	.+18     	; 0x3702 <KEYPAD_u8IsPressed+0x94>
        break;
    case 3:
    {
        #if (KEYPAD3_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD3_OUT_PIN, LOW);
    36f0:	8e e0       	ldi	r24, 0x0E	; 14
    36f2:	60 e0       	ldi	r22, 0x00	; 0
    36f4:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    36f8:	04 c0       	rjmp	.+8      	; 0x3702 <KEYPAD_u8IsPressed+0x94>
        break;
    case 4:
    {
        #if (KEYPAD4_CONN == PULL_UP)
    {
        DIO_voidSetPin(KEYPAD4_OUT_PIN, LOW);
    36fa:	8f e0       	ldi	r24, 0x0F	; 15
    36fc:	60 e0       	ldi	r22, 0x00	; 0
    36fe:	0e 94 4a 1c 	call	0x3894	; 0x3894 <DIO_voidSetPin>
    
    default:
        break;
    }

    switch (in)
    3702:	89 81       	ldd	r24, Y+1	; 0x01
    3704:	28 2f       	mov	r18, r24
    3706:	30 e0       	ldi	r19, 0x00	; 0
    3708:	3e 83       	std	Y+6, r19	; 0x06
    370a:	2d 83       	std	Y+5, r18	; 0x05
    370c:	8d 81       	ldd	r24, Y+5	; 0x05
    370e:	9e 81       	ldd	r25, Y+6	; 0x06
    3710:	82 30       	cpi	r24, 0x02	; 2
    3712:	91 05       	cpc	r25, r1
    3714:	f1 f0       	breq	.+60     	; 0x3752 <KEYPAD_u8IsPressed+0xe4>
    3716:	2d 81       	ldd	r18, Y+5	; 0x05
    3718:	3e 81       	ldd	r19, Y+6	; 0x06
    371a:	23 30       	cpi	r18, 0x03	; 3
    371c:	31 05       	cpc	r19, r1
    371e:	34 f4       	brge	.+12     	; 0x372c <KEYPAD_u8IsPressed+0xbe>
    3720:	8d 81       	ldd	r24, Y+5	; 0x05
    3722:	9e 81       	ldd	r25, Y+6	; 0x06
    3724:	81 30       	cpi	r24, 0x01	; 1
    3726:	91 05       	cpc	r25, r1
    3728:	61 f0       	breq	.+24     	; 0x3742 <KEYPAD_u8IsPressed+0xd4>
    372a:	2a c0       	rjmp	.+84     	; 0x3780 <KEYPAD_u8IsPressed+0x112>
    372c:	2d 81       	ldd	r18, Y+5	; 0x05
    372e:	3e 81       	ldd	r19, Y+6	; 0x06
    3730:	23 30       	cpi	r18, 0x03	; 3
    3732:	31 05       	cpc	r19, r1
    3734:	b1 f0       	breq	.+44     	; 0x3762 <KEYPAD_u8IsPressed+0xf4>
    3736:	8d 81       	ldd	r24, Y+5	; 0x05
    3738:	9e 81       	ldd	r25, Y+6	; 0x06
    373a:	84 30       	cpi	r24, 0x04	; 4
    373c:	91 05       	cpc	r25, r1
    373e:	c9 f0       	breq	.+50     	; 0x3772 <KEYPAD_u8IsPressed+0x104>
    3740:	1f c0       	rjmp	.+62     	; 0x3780 <KEYPAD_u8IsPressed+0x112>
    {
    case 1:
    {
        #if (KEYPAD1_CONN == PULL_UP)
        {
            if (DIO_u8GetPin(KEYPAD1_IN_PIN) == LOW)
    3742:	8a e1       	ldi	r24, 0x1A	; 26
    3744:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    3748:	88 23       	and	r24, r24
    374a:	d1 f4       	brne	.+52     	; 0x3780 <KEYPAD_u8IsPressed+0x112>
            {
                pressedState = PRESSED;
    374c:	81 e0       	ldi	r24, 0x01	; 1
    374e:	8b 83       	std	Y+3, r24	; 0x03
    3750:	17 c0       	rjmp	.+46     	; 0x3780 <KEYPAD_u8IsPressed+0x112>

    case 2:
    {
        #if (KEYPAD2_CONN == PULL_UP)
        {
            if (DIO_u8GetPin(KEYPAD2_IN_PIN) == LOW)
    3752:	8b e1       	ldi	r24, 0x1B	; 27
    3754:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    3758:	88 23       	and	r24, r24
    375a:	91 f4       	brne	.+36     	; 0x3780 <KEYPAD_u8IsPressed+0x112>
            {
                pressedState = PRESSED;
    375c:	81 e0       	ldi	r24, 0x01	; 1
    375e:	8b 83       	std	Y+3, r24	; 0x03
    3760:	0f c0       	rjmp	.+30     	; 0x3780 <KEYPAD_u8IsPressed+0x112>
    
    case 3:
    {
        #if (KEYPAD3_CONN == PULL_UP)
        {
            if (DIO_u8GetPin(KEYPAD3_IN_PIN) == LOW)
    3762:	8c e1       	ldi	r24, 0x1C	; 28
    3764:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    3768:	88 23       	and	r24, r24
    376a:	51 f4       	brne	.+20     	; 0x3780 <KEYPAD_u8IsPressed+0x112>
            {
                pressedState = PRESSED;
    376c:	81 e0       	ldi	r24, 0x01	; 1
    376e:	8b 83       	std	Y+3, r24	; 0x03
    3770:	07 c0       	rjmp	.+14     	; 0x3780 <KEYPAD_u8IsPressed+0x112>

    case 4:
    {
        #if (KEYPAD4_CONN == PULL_UP)
        {
            if (DIO_u8GetPin(KEYPAD4_IN_PIN) == LOW)
    3772:	8d e1       	ldi	r24, 0x1D	; 29
    3774:	0e 94 8f 1c 	call	0x391e	; 0x391e <DIO_u8GetPin>
    3778:	88 23       	and	r24, r24
    377a:	11 f4       	brne	.+4      	; 0x3780 <KEYPAD_u8IsPressed+0x112>
            {
                pressedState = PRESSED;
    377c:	81 e0       	ldi	r24, 0x01	; 1
    377e:	8b 83       	std	Y+3, r24	; 0x03
        break;
    
    default:
        break;
    }
    KEYPAD_voidInitialize();
    3780:	0e 94 20 1b 	call	0x3640	; 0x3640 <KEYPAD_voidInitialize>
    return pressedState;
    3784:	8b 81       	ldd	r24, Y+3	; 0x03
    3786:	28 96       	adiw	r28, 0x08	; 8
    3788:	0f b6       	in	r0, 0x3f	; 63
    378a:	f8 94       	cli
    378c:	de bf       	out	0x3e, r29	; 62
    378e:	0f be       	out	0x3f, r0	; 63
    3790:	cd bf       	out	0x3d, r28	; 61
    3792:	cf 91       	pop	r28
    3794:	df 91       	pop	r29
    3796:	08 95       	ret

00003798 <DIO_portSelector>:
#include "DIO_priv.h"
#include "DIO_cfg.h"
#include "DIO_int.h"

volatile u8 *DIO_portSelector(u8 pinNum)
{
    3798:	df 93       	push	r29
    379a:	cf 93       	push	r28
    379c:	00 d0       	rcall	.+0      	; 0x379e <DIO_portSelector+0x6>
    379e:	00 d0       	rcall	.+0      	; 0x37a0 <DIO_portSelector+0x8>
    37a0:	00 d0       	rcall	.+0      	; 0x37a2 <DIO_portSelector+0xa>
    37a2:	cd b7       	in	r28, 0x3d	; 61
    37a4:	de b7       	in	r29, 0x3e	; 62
    37a6:	8c 83       	std	Y+4, r24	; 0x04
    u8 selector = pinNum / 8;
    37a8:	8c 81       	ldd	r24, Y+4	; 0x04
    37aa:	86 95       	lsr	r24
    37ac:	86 95       	lsr	r24
    37ae:	86 95       	lsr	r24
    37b0:	8b 83       	std	Y+3, r24	; 0x03
    volatile u8 *port;
    switch (selector)
    37b2:	8b 81       	ldd	r24, Y+3	; 0x03
    37b4:	28 2f       	mov	r18, r24
    37b6:	30 e0       	ldi	r19, 0x00	; 0
    37b8:	3e 83       	std	Y+6, r19	; 0x06
    37ba:	2d 83       	std	Y+5, r18	; 0x05
    37bc:	8d 81       	ldd	r24, Y+5	; 0x05
    37be:	9e 81       	ldd	r25, Y+6	; 0x06
    37c0:	82 30       	cpi	r24, 0x02	; 2
    37c2:	91 05       	cpc	r25, r1
    37c4:	79 f0       	breq	.+30     	; 0x37e4 <DIO_portSelector+0x4c>
    37c6:	2d 81       	ldd	r18, Y+5	; 0x05
    37c8:	3e 81       	ldd	r19, Y+6	; 0x06
    37ca:	23 30       	cpi	r18, 0x03	; 3
    37cc:	31 05       	cpc	r19, r1
    37ce:	79 f0       	breq	.+30     	; 0x37ee <DIO_portSelector+0x56>
    37d0:	8d 81       	ldd	r24, Y+5	; 0x05
    37d2:	9e 81       	ldd	r25, Y+6	; 0x06
    37d4:	81 30       	cpi	r24, 0x01	; 1
    37d6:	91 05       	cpc	r25, r1
    37d8:	79 f4       	brne	.+30     	; 0x37f8 <DIO_portSelector+0x60>
    {
    case 1:
        port = &PORTB;
    37da:	88 e3       	ldi	r24, 0x38	; 56
    37dc:	90 e0       	ldi	r25, 0x00	; 0
    37de:	9a 83       	std	Y+2, r25	; 0x02
    37e0:	89 83       	std	Y+1, r24	; 0x01
    37e2:	0e c0       	rjmp	.+28     	; 0x3800 <DIO_portSelector+0x68>
        break;
    case 2:
        port = &PORTC;
    37e4:	85 e3       	ldi	r24, 0x35	; 53
    37e6:	90 e0       	ldi	r25, 0x00	; 0
    37e8:	9a 83       	std	Y+2, r25	; 0x02
    37ea:	89 83       	std	Y+1, r24	; 0x01
    37ec:	09 c0       	rjmp	.+18     	; 0x3800 <DIO_portSelector+0x68>
        break;
    case 3:
        port = &PORTD;
    37ee:	82 e3       	ldi	r24, 0x32	; 50
    37f0:	90 e0       	ldi	r25, 0x00	; 0
    37f2:	9a 83       	std	Y+2, r25	; 0x02
    37f4:	89 83       	std	Y+1, r24	; 0x01
    37f6:	04 c0       	rjmp	.+8      	; 0x3800 <DIO_portSelector+0x68>
        break;

    default:
        port = &PORTA;
    37f8:	8b e3       	ldi	r24, 0x3B	; 59
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	9a 83       	std	Y+2, r25	; 0x02
    37fe:	89 83       	std	Y+1, r24	; 0x01
        break;
    }
    return port;
    3800:	89 81       	ldd	r24, Y+1	; 0x01
    3802:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3804:	26 96       	adiw	r28, 0x06	; 6
    3806:	0f b6       	in	r0, 0x3f	; 63
    3808:	f8 94       	cli
    380a:	de bf       	out	0x3e, r29	; 62
    380c:	0f be       	out	0x3f, r0	; 63
    380e:	cd bf       	out	0x3d, r28	; 61
    3810:	cf 91       	pop	r28
    3812:	df 91       	pop	r29
    3814:	08 95       	ret

00003816 <DIO_pinSelector>:

volatile u8 *DIO_pinSelector(u8 pinNum)
{
    3816:	df 93       	push	r29
    3818:	cf 93       	push	r28
    381a:	00 d0       	rcall	.+0      	; 0x381c <DIO_pinSelector+0x6>
    381c:	00 d0       	rcall	.+0      	; 0x381e <DIO_pinSelector+0x8>
    381e:	00 d0       	rcall	.+0      	; 0x3820 <DIO_pinSelector+0xa>
    3820:	cd b7       	in	r28, 0x3d	; 61
    3822:	de b7       	in	r29, 0x3e	; 62
    3824:	8c 83       	std	Y+4, r24	; 0x04
    u8 selector = pinNum / 8;
    3826:	8c 81       	ldd	r24, Y+4	; 0x04
    3828:	86 95       	lsr	r24
    382a:	86 95       	lsr	r24
    382c:	86 95       	lsr	r24
    382e:	8b 83       	std	Y+3, r24	; 0x03
    volatile u8 *pin;
    switch (selector)
    3830:	8b 81       	ldd	r24, Y+3	; 0x03
    3832:	28 2f       	mov	r18, r24
    3834:	30 e0       	ldi	r19, 0x00	; 0
    3836:	3e 83       	std	Y+6, r19	; 0x06
    3838:	2d 83       	std	Y+5, r18	; 0x05
    383a:	8d 81       	ldd	r24, Y+5	; 0x05
    383c:	9e 81       	ldd	r25, Y+6	; 0x06
    383e:	82 30       	cpi	r24, 0x02	; 2
    3840:	91 05       	cpc	r25, r1
    3842:	79 f0       	breq	.+30     	; 0x3862 <DIO_pinSelector+0x4c>
    3844:	2d 81       	ldd	r18, Y+5	; 0x05
    3846:	3e 81       	ldd	r19, Y+6	; 0x06
    3848:	23 30       	cpi	r18, 0x03	; 3
    384a:	31 05       	cpc	r19, r1
    384c:	79 f0       	breq	.+30     	; 0x386c <DIO_pinSelector+0x56>
    384e:	8d 81       	ldd	r24, Y+5	; 0x05
    3850:	9e 81       	ldd	r25, Y+6	; 0x06
    3852:	81 30       	cpi	r24, 0x01	; 1
    3854:	91 05       	cpc	r25, r1
    3856:	79 f4       	brne	.+30     	; 0x3876 <DIO_pinSelector+0x60>
    {
    case 1:
        pin = &PINB;
    3858:	86 e3       	ldi	r24, 0x36	; 54
    385a:	90 e0       	ldi	r25, 0x00	; 0
    385c:	9a 83       	std	Y+2, r25	; 0x02
    385e:	89 83       	std	Y+1, r24	; 0x01
    3860:	0e c0       	rjmp	.+28     	; 0x387e <DIO_pinSelector+0x68>
        break;
    case 2:
        pin = &PINC;
    3862:	83 e3       	ldi	r24, 0x33	; 51
    3864:	90 e0       	ldi	r25, 0x00	; 0
    3866:	9a 83       	std	Y+2, r25	; 0x02
    3868:	89 83       	std	Y+1, r24	; 0x01
    386a:	09 c0       	rjmp	.+18     	; 0x387e <DIO_pinSelector+0x68>
        break;
    case 3:
        pin = &PIND;
    386c:	80 e3       	ldi	r24, 0x30	; 48
    386e:	90 e0       	ldi	r25, 0x00	; 0
    3870:	9a 83       	std	Y+2, r25	; 0x02
    3872:	89 83       	std	Y+1, r24	; 0x01
    3874:	04 c0       	rjmp	.+8      	; 0x387e <DIO_pinSelector+0x68>
        break;

    default:
        pin = &PINA;
    3876:	89 e3       	ldi	r24, 0x39	; 57
    3878:	90 e0       	ldi	r25, 0x00	; 0
    387a:	9a 83       	std	Y+2, r25	; 0x02
    387c:	89 83       	std	Y+1, r24	; 0x01
        break;
    }
    return pin;
    387e:	89 81       	ldd	r24, Y+1	; 0x01
    3880:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3882:	26 96       	adiw	r28, 0x06	; 6
    3884:	0f b6       	in	r0, 0x3f	; 63
    3886:	f8 94       	cli
    3888:	de bf       	out	0x3e, r29	; 62
    388a:	0f be       	out	0x3f, r0	; 63
    388c:	cd bf       	out	0x3d, r28	; 61
    388e:	cf 91       	pop	r28
    3890:	df 91       	pop	r29
    3892:	08 95       	ret

00003894 <DIO_voidSetPin>:

void DIO_voidSetPin(u8 pinNum, u8 value)
{
    3894:	df 93       	push	r29
    3896:	cf 93       	push	r28
    3898:	00 d0       	rcall	.+0      	; 0x389a <DIO_voidSetPin+0x6>
    389a:	00 d0       	rcall	.+0      	; 0x389c <DIO_voidSetPin+0x8>
    389c:	cd b7       	in	r28, 0x3d	; 61
    389e:	de b7       	in	r29, 0x3e	; 62
    38a0:	8b 83       	std	Y+3, r24	; 0x03
    38a2:	6c 83       	std	Y+4, r22	; 0x04
    volatile u8 *port = DIO_portSelector(pinNum);
    38a4:	8b 81       	ldd	r24, Y+3	; 0x03
    38a6:	0e 94 cc 1b 	call	0x3798	; 0x3798 <DIO_portSelector>
    38aa:	9a 83       	std	Y+2, r25	; 0x02
    38ac:	89 83       	std	Y+1, r24	; 0x01
    if (value == HIGH)
    38ae:	8c 81       	ldd	r24, Y+4	; 0x04
    38b0:	81 30       	cpi	r24, 0x01	; 1
    38b2:	b9 f4       	brne	.+46     	; 0x38e2 <DIO_voidSetPin+0x4e>
        SET_BIT(*port, pinNum % 8);
    38b4:	e9 81       	ldd	r30, Y+1	; 0x01
    38b6:	fa 81       	ldd	r31, Y+2	; 0x02
    38b8:	80 81       	ld	r24, Z
    38ba:	48 2f       	mov	r20, r24
    38bc:	8b 81       	ldd	r24, Y+3	; 0x03
    38be:	88 2f       	mov	r24, r24
    38c0:	90 e0       	ldi	r25, 0x00	; 0
    38c2:	9c 01       	movw	r18, r24
    38c4:	27 70       	andi	r18, 0x07	; 7
    38c6:	30 70       	andi	r19, 0x00	; 0
    38c8:	81 e0       	ldi	r24, 0x01	; 1
    38ca:	90 e0       	ldi	r25, 0x00	; 0
    38cc:	02 2e       	mov	r0, r18
    38ce:	02 c0       	rjmp	.+4      	; 0x38d4 <DIO_voidSetPin+0x40>
    38d0:	88 0f       	add	r24, r24
    38d2:	99 1f       	adc	r25, r25
    38d4:	0a 94       	dec	r0
    38d6:	e2 f7       	brpl	.-8      	; 0x38d0 <DIO_voidSetPin+0x3c>
    38d8:	84 2b       	or	r24, r20
    38da:	e9 81       	ldd	r30, Y+1	; 0x01
    38dc:	fa 81       	ldd	r31, Y+2	; 0x02
    38de:	80 83       	st	Z, r24
    38e0:	17 c0       	rjmp	.+46     	; 0x3910 <DIO_voidSetPin+0x7c>
    else
        CLR_BIT(*port, pinNum % 8);
    38e2:	e9 81       	ldd	r30, Y+1	; 0x01
    38e4:	fa 81       	ldd	r31, Y+2	; 0x02
    38e6:	80 81       	ld	r24, Z
    38e8:	48 2f       	mov	r20, r24
    38ea:	8b 81       	ldd	r24, Y+3	; 0x03
    38ec:	88 2f       	mov	r24, r24
    38ee:	90 e0       	ldi	r25, 0x00	; 0
    38f0:	9c 01       	movw	r18, r24
    38f2:	27 70       	andi	r18, 0x07	; 7
    38f4:	30 70       	andi	r19, 0x00	; 0
    38f6:	81 e0       	ldi	r24, 0x01	; 1
    38f8:	90 e0       	ldi	r25, 0x00	; 0
    38fa:	02 2e       	mov	r0, r18
    38fc:	02 c0       	rjmp	.+4      	; 0x3902 <DIO_voidSetPin+0x6e>
    38fe:	88 0f       	add	r24, r24
    3900:	99 1f       	adc	r25, r25
    3902:	0a 94       	dec	r0
    3904:	e2 f7       	brpl	.-8      	; 0x38fe <DIO_voidSetPin+0x6a>
    3906:	80 95       	com	r24
    3908:	84 23       	and	r24, r20
    390a:	e9 81       	ldd	r30, Y+1	; 0x01
    390c:	fa 81       	ldd	r31, Y+2	; 0x02
    390e:	80 83       	st	Z, r24
}
    3910:	0f 90       	pop	r0
    3912:	0f 90       	pop	r0
    3914:	0f 90       	pop	r0
    3916:	0f 90       	pop	r0
    3918:	cf 91       	pop	r28
    391a:	df 91       	pop	r29
    391c:	08 95       	ret

0000391e <DIO_u8GetPin>:

u8 DIO_u8GetPin(u8 pinNum)
{
    391e:	df 93       	push	r29
    3920:	cf 93       	push	r28
    3922:	00 d0       	rcall	.+0      	; 0x3924 <DIO_u8GetPin+0x6>
    3924:	00 d0       	rcall	.+0      	; 0x3926 <DIO_u8GetPin+0x8>
    3926:	cd b7       	in	r28, 0x3d	; 61
    3928:	de b7       	in	r29, 0x3e	; 62
    392a:	8b 83       	std	Y+3, r24	; 0x03
    volatile u8 *pin = DIO_pinSelector(pinNum);
    392c:	8b 81       	ldd	r24, Y+3	; 0x03
    392e:	0e 94 0b 1c 	call	0x3816	; 0x3816 <DIO_pinSelector>
    3932:	9a 83       	std	Y+2, r25	; 0x02
    3934:	89 83       	std	Y+1, r24	; 0x01
    if (GET_BIT(*pin, pinNum % 8))
    3936:	e9 81       	ldd	r30, Y+1	; 0x01
    3938:	fa 81       	ldd	r31, Y+2	; 0x02
    393a:	80 81       	ld	r24, Z
    393c:	28 2f       	mov	r18, r24
    393e:	30 e0       	ldi	r19, 0x00	; 0
    3940:	8b 81       	ldd	r24, Y+3	; 0x03
    3942:	88 2f       	mov	r24, r24
    3944:	90 e0       	ldi	r25, 0x00	; 0
    3946:	87 70       	andi	r24, 0x07	; 7
    3948:	90 70       	andi	r25, 0x00	; 0
    394a:	a9 01       	movw	r20, r18
    394c:	02 c0       	rjmp	.+4      	; 0x3952 <DIO_u8GetPin+0x34>
    394e:	55 95       	asr	r21
    3950:	47 95       	ror	r20
    3952:	8a 95       	dec	r24
    3954:	e2 f7       	brpl	.-8      	; 0x394e <DIO_u8GetPin+0x30>
    3956:	ca 01       	movw	r24, r20
    3958:	88 2f       	mov	r24, r24
    395a:	90 e0       	ldi	r25, 0x00	; 0
    395c:	81 70       	andi	r24, 0x01	; 1
    395e:	90 70       	andi	r25, 0x00	; 0
    3960:	88 23       	and	r24, r24
    3962:	19 f0       	breq	.+6      	; 0x396a <DIO_u8GetPin+0x4c>
        return HIGH;
    3964:	51 e0       	ldi	r21, 0x01	; 1
    3966:	5c 83       	std	Y+4, r21	; 0x04
    3968:	01 c0       	rjmp	.+2      	; 0x396c <DIO_u8GetPin+0x4e>
    else
        return LOW;
    396a:	1c 82       	std	Y+4, r1	; 0x04
    396c:	8c 81       	ldd	r24, Y+4	; 0x04
}
    396e:	0f 90       	pop	r0
    3970:	0f 90       	pop	r0
    3972:	0f 90       	pop	r0
    3974:	0f 90       	pop	r0
    3976:	cf 91       	pop	r28
    3978:	df 91       	pop	r29
    397a:	08 95       	ret

0000397c <DIO_voidToggPin>:

void DIO_voidToggPin(u8 pinNum)
{
    397c:	df 93       	push	r29
    397e:	cf 93       	push	r28
    3980:	00 d0       	rcall	.+0      	; 0x3982 <DIO_voidToggPin+0x6>
    3982:	0f 92       	push	r0
    3984:	cd b7       	in	r28, 0x3d	; 61
    3986:	de b7       	in	r29, 0x3e	; 62
    3988:	8b 83       	std	Y+3, r24	; 0x03
    volatile u8 *port = DIO_portSelector(pinNum);
    398a:	8b 81       	ldd	r24, Y+3	; 0x03
    398c:	0e 94 cc 1b 	call	0x3798	; 0x3798 <DIO_portSelector>
    3990:	9a 83       	std	Y+2, r25	; 0x02
    3992:	89 83       	std	Y+1, r24	; 0x01
    TOG_BIT(*port, pinNum % 8);
    3994:	e9 81       	ldd	r30, Y+1	; 0x01
    3996:	fa 81       	ldd	r31, Y+2	; 0x02
    3998:	80 81       	ld	r24, Z
    399a:	48 2f       	mov	r20, r24
    399c:	8b 81       	ldd	r24, Y+3	; 0x03
    399e:	88 2f       	mov	r24, r24
    39a0:	90 e0       	ldi	r25, 0x00	; 0
    39a2:	9c 01       	movw	r18, r24
    39a4:	27 70       	andi	r18, 0x07	; 7
    39a6:	30 70       	andi	r19, 0x00	; 0
    39a8:	81 e0       	ldi	r24, 0x01	; 1
    39aa:	90 e0       	ldi	r25, 0x00	; 0
    39ac:	02 2e       	mov	r0, r18
    39ae:	02 c0       	rjmp	.+4      	; 0x39b4 <DIO_voidToggPin+0x38>
    39b0:	88 0f       	add	r24, r24
    39b2:	99 1f       	adc	r25, r25
    39b4:	0a 94       	dec	r0
    39b6:	e2 f7       	brpl	.-8      	; 0x39b0 <DIO_voidToggPin+0x34>
    39b8:	84 27       	eor	r24, r20
    39ba:	e9 81       	ldd	r30, Y+1	; 0x01
    39bc:	fa 81       	ldd	r31, Y+2	; 0x02
    39be:	80 83       	st	Z, r24
}
    39c0:	0f 90       	pop	r0
    39c2:	0f 90       	pop	r0
    39c4:	0f 90       	pop	r0
    39c6:	cf 91       	pop	r28
    39c8:	df 91       	pop	r29
    39ca:	08 95       	ret

000039cc <DIO_voidInitialize>:

void DIO_voidInitialize()
{
    39cc:	df 93       	push	r29
    39ce:	cf 93       	push	r28
    39d0:	cd b7       	in	r28, 0x3d	; 61
    39d2:	de b7       	in	r29, 0x3e	; 62
    DDRA = CONC(PIN7_DIR, PIN6_DIR, PIN5_DIR, PIN4_DIR, PIN3_DIR, PIN2_DIR, PIN1_DIR, PIN0_DIR);
    39d4:	ea e3       	ldi	r30, 0x3A	; 58
    39d6:	f0 e0       	ldi	r31, 0x00	; 0
    39d8:	8e ef       	ldi	r24, 0xFE	; 254
    39da:	80 83       	st	Z, r24
    DDRB = CONC(PIN15_DIR, PIN14_DIR, PIN13_DIR, PIN12_DIR, PIN11_DIR, PIN10_DIR, PIN9_DIR, PIN8_DIR);
    39dc:	e7 e3       	ldi	r30, 0x37	; 55
    39de:	f0 e0       	ldi	r31, 0x00	; 0
    39e0:	8f ef       	ldi	r24, 0xFF	; 255
    39e2:	80 83       	st	Z, r24
    DDRC = CONC(PIN23_DIR, PIN22_DIR, PIN21_DIR, PIN20_DIR, PIN19_DIR, PIN18_DIR, PIN17_DIR, PIN16_DIR);
    39e4:	e4 e3       	ldi	r30, 0x34	; 52
    39e6:	f0 e0       	ldi	r31, 0x00	; 0
    39e8:	8f e3       	ldi	r24, 0x3F	; 63
    39ea:	80 83       	st	Z, r24
    DDRD = CONC(PIN31_DIR, PIN30_DIR, PIN29_DIR, PIN28_DIR, PIN27_DIR, PIN26_DIR, PIN25_DIR, PIN24_DIR);
    39ec:	e1 e3       	ldi	r30, 0x31	; 49
    39ee:	f0 e0       	ldi	r31, 0x00	; 0
    39f0:	10 82       	st	Z, r1
}
    39f2:	cf 91       	pop	r28
    39f4:	df 91       	pop	r29
    39f6:	08 95       	ret

000039f8 <MatrixSequence_ILoveMarlin>:
 *      Author: Shady
 */
#include "./../../../stdtypes.h"
#include "./../Mat8x8Letters.h"
void MatrixSequence_ILoveMarlin(u8 field[8][8], u8 selector)
{
    39f8:	df 93       	push	r29
    39fa:	cf 93       	push	r28
    39fc:	00 d0       	rcall	.+0      	; 0x39fe <MatrixSequence_ILoveMarlin+0x6>
    39fe:	00 d0       	rcall	.+0      	; 0x3a00 <MatrixSequence_ILoveMarlin+0x8>
    3a00:	0f 92       	push	r0
    3a02:	cd b7       	in	r28, 0x3d	; 61
    3a04:	de b7       	in	r29, 0x3e	; 62
    3a06:	9a 83       	std	Y+2, r25	; 0x02
    3a08:	89 83       	std	Y+1, r24	; 0x01
    3a0a:	6b 83       	std	Y+3, r22	; 0x03
    switch (selector % 8)
    3a0c:	8b 81       	ldd	r24, Y+3	; 0x03
    3a0e:	88 2f       	mov	r24, r24
    3a10:	90 e0       	ldi	r25, 0x00	; 0
    3a12:	9c 01       	movw	r18, r24
    3a14:	27 70       	andi	r18, 0x07	; 7
    3a16:	30 70       	andi	r19, 0x00	; 0
    3a18:	3d 83       	std	Y+5, r19	; 0x05
    3a1a:	2c 83       	std	Y+4, r18	; 0x04
    3a1c:	8c 81       	ldd	r24, Y+4	; 0x04
    3a1e:	9d 81       	ldd	r25, Y+5	; 0x05
    3a20:	83 30       	cpi	r24, 0x03	; 3
    3a22:	91 05       	cpc	r25, r1
    3a24:	d9 f1       	breq	.+118    	; 0x3a9c <MatrixSequence_ILoveMarlin+0xa4>
    3a26:	2c 81       	ldd	r18, Y+4	; 0x04
    3a28:	3d 81       	ldd	r19, Y+5	; 0x05
    3a2a:	24 30       	cpi	r18, 0x04	; 4
    3a2c:	31 05       	cpc	r19, r1
    3a2e:	7c f4       	brge	.+30     	; 0x3a4e <MatrixSequence_ILoveMarlin+0x56>
    3a30:	8c 81       	ldd	r24, Y+4	; 0x04
    3a32:	9d 81       	ldd	r25, Y+5	; 0x05
    3a34:	81 30       	cpi	r24, 0x01	; 1
    3a36:	91 05       	cpc	r25, r1
    3a38:	29 f1       	breq	.+74     	; 0x3a84 <MatrixSequence_ILoveMarlin+0x8c>
    3a3a:	2c 81       	ldd	r18, Y+4	; 0x04
    3a3c:	3d 81       	ldd	r19, Y+5	; 0x05
    3a3e:	22 30       	cpi	r18, 0x02	; 2
    3a40:	31 05       	cpc	r19, r1
    3a42:	34 f5       	brge	.+76     	; 0x3a90 <MatrixSequence_ILoveMarlin+0x98>
    3a44:	8c 81       	ldd	r24, Y+4	; 0x04
    3a46:	9d 81       	ldd	r25, Y+5	; 0x05
    3a48:	00 97       	sbiw	r24, 0x00	; 0
    3a4a:	b1 f0       	breq	.+44     	; 0x3a78 <MatrixSequence_ILoveMarlin+0x80>
    3a4c:	44 c0       	rjmp	.+136    	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
    3a4e:	2c 81       	ldd	r18, Y+4	; 0x04
    3a50:	3d 81       	ldd	r19, Y+5	; 0x05
    3a52:	25 30       	cpi	r18, 0x05	; 5
    3a54:	31 05       	cpc	r19, r1
    3a56:	71 f1       	breq	.+92     	; 0x3ab4 <MatrixSequence_ILoveMarlin+0xbc>
    3a58:	8c 81       	ldd	r24, Y+4	; 0x04
    3a5a:	9d 81       	ldd	r25, Y+5	; 0x05
    3a5c:	85 30       	cpi	r24, 0x05	; 5
    3a5e:	91 05       	cpc	r25, r1
    3a60:	1c f1       	brlt	.+70     	; 0x3aa8 <MatrixSequence_ILoveMarlin+0xb0>
    3a62:	2c 81       	ldd	r18, Y+4	; 0x04
    3a64:	3d 81       	ldd	r19, Y+5	; 0x05
    3a66:	26 30       	cpi	r18, 0x06	; 6
    3a68:	31 05       	cpc	r19, r1
    3a6a:	51 f1       	breq	.+84     	; 0x3ac0 <MatrixSequence_ILoveMarlin+0xc8>
    3a6c:	8c 81       	ldd	r24, Y+4	; 0x04
    3a6e:	9d 81       	ldd	r25, Y+5	; 0x05
    3a70:	87 30       	cpi	r24, 0x07	; 7
    3a72:	91 05       	cpc	r25, r1
    3a74:	59 f1       	breq	.+86     	; 0x3acc <MatrixSequence_ILoveMarlin+0xd4>
    3a76:	2f c0       	rjmp	.+94     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
    {
    case 0:
        Mat8x8Letters_voidLetter(field, 'M');
    3a78:	89 81       	ldd	r24, Y+1	; 0x01
    3a7a:	9a 81       	ldd	r25, Y+2	; 0x02
    3a7c:	6d e4       	ldi	r22, 0x4D	; 77
    3a7e:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
    3a82:	29 c0       	rjmp	.+82     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
        break;
    case 1:
        Mat8x8Letters_voidLetter(field, 'A');
    3a84:	89 81       	ldd	r24, Y+1	; 0x01
    3a86:	9a 81       	ldd	r25, Y+2	; 0x02
    3a88:	61 e4       	ldi	r22, 0x41	; 65
    3a8a:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
    3a8e:	23 c0       	rjmp	.+70     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
        break;
    case 2:
        Mat8x8Letters_voidLetter(field, 'R');
    3a90:	89 81       	ldd	r24, Y+1	; 0x01
    3a92:	9a 81       	ldd	r25, Y+2	; 0x02
    3a94:	62 e5       	ldi	r22, 0x52	; 82
    3a96:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
    3a9a:	1d c0       	rjmp	.+58     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
        break;
    case 3:
        Mat8x8Letters_voidLetter(field, 'L');
    3a9c:	89 81       	ldd	r24, Y+1	; 0x01
    3a9e:	9a 81       	ldd	r25, Y+2	; 0x02
    3aa0:	6c e4       	ldi	r22, 0x4C	; 76
    3aa2:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
    3aa6:	17 c0       	rjmp	.+46     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
        break;
    case 4:
        Mat8x8Letters_voidLetter(field, 'I');
    3aa8:	89 81       	ldd	r24, Y+1	; 0x01
    3aaa:	9a 81       	ldd	r25, Y+2	; 0x02
    3aac:	69 e4       	ldi	r22, 0x49	; 73
    3aae:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
    3ab2:	11 c0       	rjmp	.+34     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
        break;
    case 5:
        Mat8x8Letters_voidLetter(field, 'N');
    3ab4:	89 81       	ldd	r24, Y+1	; 0x01
    3ab6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ab8:	6e e4       	ldi	r22, 0x4E	; 78
    3aba:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
    3abe:	0b c0       	rjmp	.+22     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
        break;
    case 6:
        Mat8x8Letters_voidLetter(field, 'I');
    3ac0:	89 81       	ldd	r24, Y+1	; 0x01
    3ac2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ac4:	69 e4       	ldi	r22, 0x49	; 73
    3ac6:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
    3aca:	05 c0       	rjmp	.+10     	; 0x3ad6 <MatrixSequence_ILoveMarlin+0xde>
        break;
    case 7:
        Mat8x8Letters_voidLetter(field, '*');
    3acc:	89 81       	ldd	r24, Y+1	; 0x01
    3ace:	9a 81       	ldd	r25, Y+2	; 0x02
    3ad0:	6a e2       	ldi	r22, 0x2A	; 42
    3ad2:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <Mat8x8Letters_voidLetter>
        break;

    default:
        break;
    }
}
    3ad6:	0f 90       	pop	r0
    3ad8:	0f 90       	pop	r0
    3ada:	0f 90       	pop	r0
    3adc:	0f 90       	pop	r0
    3ade:	0f 90       	pop	r0
    3ae0:	cf 91       	pop	r28
    3ae2:	df 91       	pop	r29
    3ae4:	08 95       	ret

00003ae6 <Mat8x8Letters_voidLetter>:
// #include "avr/delay.h"
#include "./../../Drivers/LED8X8_DRIVER/LED8X8_int.h"
#include "./Mat8x8Letters.h"

void Mat8x8Letters_voidLetter(u8 M[8][8], s8 letter)
{
    3ae6:	df 93       	push	r29
    3ae8:	cf 93       	push	r28
    3aea:	00 d0       	rcall	.+0      	; 0x3aec <Mat8x8Letters_voidLetter+0x6>
    3aec:	00 d0       	rcall	.+0      	; 0x3aee <Mat8x8Letters_voidLetter+0x8>
    3aee:	0f 92       	push	r0
    3af0:	cd b7       	in	r28, 0x3d	; 61
    3af2:	de b7       	in	r29, 0x3e	; 62
    3af4:	9a 83       	std	Y+2, r25	; 0x02
    3af6:	89 83       	std	Y+1, r24	; 0x01
    3af8:	6b 83       	std	Y+3, r22	; 0x03
    switch (letter)
    3afa:	8b 81       	ldd	r24, Y+3	; 0x03
    3afc:	28 2f       	mov	r18, r24
    3afe:	30 e0       	ldi	r19, 0x00	; 0
    3b00:	3d 83       	std	Y+5, r19	; 0x05
    3b02:	2c 83       	std	Y+4, r18	; 0x04
    3b04:	8c 81       	ldd	r24, Y+4	; 0x04
    3b06:	9d 81       	ldd	r25, Y+5	; 0x05
    3b08:	89 34       	cpi	r24, 0x49	; 73
    3b0a:	91 05       	cpc	r25, r1
    3b0c:	09 f4       	brne	.+2      	; 0x3b10 <Mat8x8Letters_voidLetter+0x2a>
    3b0e:	54 c5       	rjmp	.+2728   	; 0x45b8 <Mat8x8Letters_voidLetter+0xad2>
    3b10:	2c 81       	ldd	r18, Y+4	; 0x04
    3b12:	3d 81       	ldd	r19, Y+5	; 0x05
    3b14:	2a 34       	cpi	r18, 0x4A	; 74
    3b16:	31 05       	cpc	r19, r1
    3b18:	7c f5       	brge	.+94     	; 0x3b78 <Mat8x8Letters_voidLetter+0x92>
    3b1a:	8c 81       	ldd	r24, Y+4	; 0x04
    3b1c:	9d 81       	ldd	r25, Y+5	; 0x05
    3b1e:	82 34       	cpi	r24, 0x42	; 66
    3b20:	91 05       	cpc	r25, r1
    3b22:	09 f4       	brne	.+2      	; 0x3b26 <Mat8x8Letters_voidLetter+0x40>
    3b24:	92 c1       	rjmp	.+804    	; 0x3e4a <Mat8x8Letters_voidLetter+0x364>
    3b26:	2c 81       	ldd	r18, Y+4	; 0x04
    3b28:	3d 81       	ldd	r19, Y+5	; 0x05
    3b2a:	23 34       	cpi	r18, 0x43	; 67
    3b2c:	31 05       	cpc	r19, r1
    3b2e:	b4 f4       	brge	.+44     	; 0x3b5c <Mat8x8Letters_voidLetter+0x76>
    3b30:	8c 81       	ldd	r24, Y+4	; 0x04
    3b32:	9d 81       	ldd	r25, Y+5	; 0x05
    3b34:	81 34       	cpi	r24, 0x41	; 65
    3b36:	91 05       	cpc	r25, r1
    3b38:	09 f4       	brne	.+2      	; 0x3b3c <Mat8x8Letters_voidLetter+0x56>
    3b3a:	41 c0       	rjmp	.+130    	; 0x3bbe <Mat8x8Letters_voidLetter+0xd8>
    3b3c:	2c 81       	ldd	r18, Y+4	; 0x04
    3b3e:	3d 81       	ldd	r19, Y+5	; 0x05
    3b40:	21 15       	cp	r18, r1
    3b42:	31 05       	cpc	r19, r1
    3b44:	11 f4       	brne	.+4      	; 0x3b4a <Mat8x8Letters_voidLetter+0x64>
    3b46:	0c 94 7e 2a 	jmp	0x54fc	; 0x54fc <Mat8x8Letters_voidLetter+0x1a16>
    3b4a:	8c 81       	ldd	r24, Y+4	; 0x04
    3b4c:	9d 81       	ldd	r25, Y+5	; 0x05
    3b4e:	8a 32       	cpi	r24, 0x2A	; 42
    3b50:	91 05       	cpc	r25, r1
    3b52:	11 f4       	brne	.+4      	; 0x3b58 <Mat8x8Letters_voidLetter+0x72>
    3b54:	0c 94 37 29 	jmp	0x526e	; 0x526e <Mat8x8Letters_voidLetter+0x1788>
    3b58:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    3b5c:	2c 81       	ldd	r18, Y+4	; 0x04
    3b5e:	3d 81       	ldd	r19, Y+5	; 0x05
    3b60:	23 34       	cpi	r18, 0x43	; 67
    3b62:	31 05       	cpc	r19, r1
    3b64:	09 f4       	brne	.+2      	; 0x3b68 <Mat8x8Letters_voidLetter+0x82>
    3b66:	c4 c2       	rjmp	.+1416   	; 0x40f0 <Mat8x8Letters_voidLetter+0x60a>
    3b68:	8c 81       	ldd	r24, Y+4	; 0x04
    3b6a:	9d 81       	ldd	r25, Y+5	; 0x05
    3b6c:	84 34       	cpi	r24, 0x44	; 68
    3b6e:	91 05       	cpc	r25, r1
    3b70:	09 f4       	brne	.+2      	; 0x3b74 <Mat8x8Letters_voidLetter+0x8e>
    3b72:	f0 c3       	rjmp	.+2016   	; 0x4354 <Mat8x8Letters_voidLetter+0x86e>
    3b74:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    3b78:	2c 81       	ldd	r18, Y+4	; 0x04
    3b7a:	3d 81       	ldd	r19, Y+5	; 0x05
    3b7c:	2d 34       	cpi	r18, 0x4D	; 77
    3b7e:	31 05       	cpc	r19, r1
    3b80:	09 f4       	brne	.+2      	; 0x3b84 <Mat8x8Letters_voidLetter+0x9e>
    3b82:	a2 c7       	rjmp	.+3908   	; 0x4ac8 <Mat8x8Letters_voidLetter+0xfe2>
    3b84:	8c 81       	ldd	r24, Y+4	; 0x04
    3b86:	9d 81       	ldd	r25, Y+5	; 0x05
    3b88:	8e 34       	cpi	r24, 0x4E	; 78
    3b8a:	91 05       	cpc	r25, r1
    3b8c:	44 f4       	brge	.+16     	; 0x3b9e <Mat8x8Letters_voidLetter+0xb8>
    3b8e:	2c 81       	ldd	r18, Y+4	; 0x04
    3b90:	3d 81       	ldd	r19, Y+5	; 0x05
    3b92:	2c 34       	cpi	r18, 0x4C	; 76
    3b94:	31 05       	cpc	r19, r1
    3b96:	09 f4       	brne	.+2      	; 0x3b9a <Mat8x8Letters_voidLetter+0xb4>
    3b98:	5a c6       	rjmp	.+3252   	; 0x484e <Mat8x8Letters_voidLetter+0xd68>
    3b9a:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    3b9e:	8c 81       	ldd	r24, Y+4	; 0x04
    3ba0:	9d 81       	ldd	r25, Y+5	; 0x05
    3ba2:	8e 34       	cpi	r24, 0x4E	; 78
    3ba4:	91 05       	cpc	r25, r1
    3ba6:	11 f4       	brne	.+4      	; 0x3bac <Mat8x8Letters_voidLetter+0xc6>
    3ba8:	0c 94 ab 26 	jmp	0x4d56	; 0x4d56 <Mat8x8Letters_voidLetter+0x1270>
    3bac:	2c 81       	ldd	r18, Y+4	; 0x04
    3bae:	3d 81       	ldd	r19, Y+5	; 0x05
    3bb0:	22 35       	cpi	r18, 0x52	; 82
    3bb2:	31 05       	cpc	r19, r1
    3bb4:	11 f4       	brne	.+4      	; 0x3bba <Mat8x8Letters_voidLetter+0xd4>
    3bb6:	0c 94 f2 27 	jmp	0x4fe4	; 0x4fe4 <Mat8x8Letters_voidLetter+0x14fe>
    3bba:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    {
    case 'A':
    {
        M[0][0]= 0; M[0][1]= 0; M[0][2]= 0; M[0][3]= 1; M[0][4]= 0; M[0][5]= 0; M[0][6]= 0; M[0][7]= 0;
    3bbe:	e9 81       	ldd	r30, Y+1	; 0x01
    3bc0:	fa 81       	ldd	r31, Y+2	; 0x02
    3bc2:	10 82       	st	Z, r1
    3bc4:	e9 81       	ldd	r30, Y+1	; 0x01
    3bc6:	fa 81       	ldd	r31, Y+2	; 0x02
    3bc8:	11 82       	std	Z+1, r1	; 0x01
    3bca:	e9 81       	ldd	r30, Y+1	; 0x01
    3bcc:	fa 81       	ldd	r31, Y+2	; 0x02
    3bce:	12 82       	std	Z+2, r1	; 0x02
    3bd0:	e9 81       	ldd	r30, Y+1	; 0x01
    3bd2:	fa 81       	ldd	r31, Y+2	; 0x02
    3bd4:	81 e0       	ldi	r24, 0x01	; 1
    3bd6:	83 83       	std	Z+3, r24	; 0x03
    3bd8:	e9 81       	ldd	r30, Y+1	; 0x01
    3bda:	fa 81       	ldd	r31, Y+2	; 0x02
    3bdc:	14 82       	std	Z+4, r1	; 0x04
    3bde:	e9 81       	ldd	r30, Y+1	; 0x01
    3be0:	fa 81       	ldd	r31, Y+2	; 0x02
    3be2:	15 82       	std	Z+5, r1	; 0x05
    3be4:	e9 81       	ldd	r30, Y+1	; 0x01
    3be6:	fa 81       	ldd	r31, Y+2	; 0x02
    3be8:	16 82       	std	Z+6, r1	; 0x06
    3bea:	e9 81       	ldd	r30, Y+1	; 0x01
    3bec:	fa 81       	ldd	r31, Y+2	; 0x02
    3bee:	17 82       	std	Z+7, r1	; 0x07
        M[1][0]= 0; M[1][1]= 0; M[1][2]= 1; M[1][3]= 0; M[1][4]= 1; M[1][5]= 0; M[1][6]= 0; M[1][7]= 0;
    3bf0:	89 81       	ldd	r24, Y+1	; 0x01
    3bf2:	9a 81       	ldd	r25, Y+2	; 0x02
    3bf4:	fc 01       	movw	r30, r24
    3bf6:	38 96       	adiw	r30, 0x08	; 8
    3bf8:	10 82       	st	Z, r1
    3bfa:	89 81       	ldd	r24, Y+1	; 0x01
    3bfc:	9a 81       	ldd	r25, Y+2	; 0x02
    3bfe:	fc 01       	movw	r30, r24
    3c00:	38 96       	adiw	r30, 0x08	; 8
    3c02:	11 82       	std	Z+1, r1	; 0x01
    3c04:	89 81       	ldd	r24, Y+1	; 0x01
    3c06:	9a 81       	ldd	r25, Y+2	; 0x02
    3c08:	fc 01       	movw	r30, r24
    3c0a:	38 96       	adiw	r30, 0x08	; 8
    3c0c:	81 e0       	ldi	r24, 0x01	; 1
    3c0e:	82 83       	std	Z+2, r24	; 0x02
    3c10:	89 81       	ldd	r24, Y+1	; 0x01
    3c12:	9a 81       	ldd	r25, Y+2	; 0x02
    3c14:	fc 01       	movw	r30, r24
    3c16:	38 96       	adiw	r30, 0x08	; 8
    3c18:	13 82       	std	Z+3, r1	; 0x03
    3c1a:	89 81       	ldd	r24, Y+1	; 0x01
    3c1c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c1e:	fc 01       	movw	r30, r24
    3c20:	38 96       	adiw	r30, 0x08	; 8
    3c22:	81 e0       	ldi	r24, 0x01	; 1
    3c24:	84 83       	std	Z+4, r24	; 0x04
    3c26:	89 81       	ldd	r24, Y+1	; 0x01
    3c28:	9a 81       	ldd	r25, Y+2	; 0x02
    3c2a:	fc 01       	movw	r30, r24
    3c2c:	38 96       	adiw	r30, 0x08	; 8
    3c2e:	15 82       	std	Z+5, r1	; 0x05
    3c30:	89 81       	ldd	r24, Y+1	; 0x01
    3c32:	9a 81       	ldd	r25, Y+2	; 0x02
    3c34:	fc 01       	movw	r30, r24
    3c36:	38 96       	adiw	r30, 0x08	; 8
    3c38:	16 82       	std	Z+6, r1	; 0x06
    3c3a:	89 81       	ldd	r24, Y+1	; 0x01
    3c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c3e:	fc 01       	movw	r30, r24
    3c40:	38 96       	adiw	r30, 0x08	; 8
    3c42:	17 82       	std	Z+7, r1	; 0x07
        M[2][0]= 0; M[2][1]= 1; M[2][2]= 1; M[2][3]= 0; M[2][4]= 1; M[2][5]= 1; M[2][6]= 0; M[2][7]= 0;
    3c44:	89 81       	ldd	r24, Y+1	; 0x01
    3c46:	9a 81       	ldd	r25, Y+2	; 0x02
    3c48:	fc 01       	movw	r30, r24
    3c4a:	70 96       	adiw	r30, 0x10	; 16
    3c4c:	10 82       	st	Z, r1
    3c4e:	89 81       	ldd	r24, Y+1	; 0x01
    3c50:	9a 81       	ldd	r25, Y+2	; 0x02
    3c52:	fc 01       	movw	r30, r24
    3c54:	70 96       	adiw	r30, 0x10	; 16
    3c56:	81 e0       	ldi	r24, 0x01	; 1
    3c58:	81 83       	std	Z+1, r24	; 0x01
    3c5a:	89 81       	ldd	r24, Y+1	; 0x01
    3c5c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c5e:	fc 01       	movw	r30, r24
    3c60:	70 96       	adiw	r30, 0x10	; 16
    3c62:	81 e0       	ldi	r24, 0x01	; 1
    3c64:	82 83       	std	Z+2, r24	; 0x02
    3c66:	89 81       	ldd	r24, Y+1	; 0x01
    3c68:	9a 81       	ldd	r25, Y+2	; 0x02
    3c6a:	fc 01       	movw	r30, r24
    3c6c:	70 96       	adiw	r30, 0x10	; 16
    3c6e:	13 82       	std	Z+3, r1	; 0x03
    3c70:	89 81       	ldd	r24, Y+1	; 0x01
    3c72:	9a 81       	ldd	r25, Y+2	; 0x02
    3c74:	fc 01       	movw	r30, r24
    3c76:	70 96       	adiw	r30, 0x10	; 16
    3c78:	81 e0       	ldi	r24, 0x01	; 1
    3c7a:	84 83       	std	Z+4, r24	; 0x04
    3c7c:	89 81       	ldd	r24, Y+1	; 0x01
    3c7e:	9a 81       	ldd	r25, Y+2	; 0x02
    3c80:	fc 01       	movw	r30, r24
    3c82:	70 96       	adiw	r30, 0x10	; 16
    3c84:	81 e0       	ldi	r24, 0x01	; 1
    3c86:	85 83       	std	Z+5, r24	; 0x05
    3c88:	89 81       	ldd	r24, Y+1	; 0x01
    3c8a:	9a 81       	ldd	r25, Y+2	; 0x02
    3c8c:	fc 01       	movw	r30, r24
    3c8e:	70 96       	adiw	r30, 0x10	; 16
    3c90:	16 82       	std	Z+6, r1	; 0x06
    3c92:	89 81       	ldd	r24, Y+1	; 0x01
    3c94:	9a 81       	ldd	r25, Y+2	; 0x02
    3c96:	fc 01       	movw	r30, r24
    3c98:	70 96       	adiw	r30, 0x10	; 16
    3c9a:	17 82       	std	Z+7, r1	; 0x07
        M[3][0]= 0; M[3][1]= 1; M[3][2]= 0; M[3][3]= 0; M[3][4]= 0; M[3][5]= 1; M[3][6]= 0; M[3][7]= 0;
    3c9c:	89 81       	ldd	r24, Y+1	; 0x01
    3c9e:	9a 81       	ldd	r25, Y+2	; 0x02
    3ca0:	fc 01       	movw	r30, r24
    3ca2:	78 96       	adiw	r30, 0x18	; 24
    3ca4:	10 82       	st	Z, r1
    3ca6:	89 81       	ldd	r24, Y+1	; 0x01
    3ca8:	9a 81       	ldd	r25, Y+2	; 0x02
    3caa:	fc 01       	movw	r30, r24
    3cac:	78 96       	adiw	r30, 0x18	; 24
    3cae:	81 e0       	ldi	r24, 0x01	; 1
    3cb0:	81 83       	std	Z+1, r24	; 0x01
    3cb2:	89 81       	ldd	r24, Y+1	; 0x01
    3cb4:	9a 81       	ldd	r25, Y+2	; 0x02
    3cb6:	fc 01       	movw	r30, r24
    3cb8:	78 96       	adiw	r30, 0x18	; 24
    3cba:	12 82       	std	Z+2, r1	; 0x02
    3cbc:	89 81       	ldd	r24, Y+1	; 0x01
    3cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    3cc0:	fc 01       	movw	r30, r24
    3cc2:	78 96       	adiw	r30, 0x18	; 24
    3cc4:	13 82       	std	Z+3, r1	; 0x03
    3cc6:	89 81       	ldd	r24, Y+1	; 0x01
    3cc8:	9a 81       	ldd	r25, Y+2	; 0x02
    3cca:	fc 01       	movw	r30, r24
    3ccc:	78 96       	adiw	r30, 0x18	; 24
    3cce:	14 82       	std	Z+4, r1	; 0x04
    3cd0:	89 81       	ldd	r24, Y+1	; 0x01
    3cd2:	9a 81       	ldd	r25, Y+2	; 0x02
    3cd4:	fc 01       	movw	r30, r24
    3cd6:	78 96       	adiw	r30, 0x18	; 24
    3cd8:	81 e0       	ldi	r24, 0x01	; 1
    3cda:	85 83       	std	Z+5, r24	; 0x05
    3cdc:	89 81       	ldd	r24, Y+1	; 0x01
    3cde:	9a 81       	ldd	r25, Y+2	; 0x02
    3ce0:	fc 01       	movw	r30, r24
    3ce2:	78 96       	adiw	r30, 0x18	; 24
    3ce4:	16 82       	std	Z+6, r1	; 0x06
    3ce6:	89 81       	ldd	r24, Y+1	; 0x01
    3ce8:	9a 81       	ldd	r25, Y+2	; 0x02
    3cea:	fc 01       	movw	r30, r24
    3cec:	78 96       	adiw	r30, 0x18	; 24
    3cee:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 0; M[4][1]= 1; M[4][2]= 0; M[4][3]= 0; M[4][4]= 0; M[4][5]= 1; M[4][6]= 0; M[4][7]= 0;
    3cf0:	89 81       	ldd	r24, Y+1	; 0x01
    3cf2:	9a 81       	ldd	r25, Y+2	; 0x02
    3cf4:	fc 01       	movw	r30, r24
    3cf6:	b0 96       	adiw	r30, 0x20	; 32
    3cf8:	10 82       	st	Z, r1
    3cfa:	89 81       	ldd	r24, Y+1	; 0x01
    3cfc:	9a 81       	ldd	r25, Y+2	; 0x02
    3cfe:	fc 01       	movw	r30, r24
    3d00:	b0 96       	adiw	r30, 0x20	; 32
    3d02:	81 e0       	ldi	r24, 0x01	; 1
    3d04:	81 83       	std	Z+1, r24	; 0x01
    3d06:	89 81       	ldd	r24, Y+1	; 0x01
    3d08:	9a 81       	ldd	r25, Y+2	; 0x02
    3d0a:	fc 01       	movw	r30, r24
    3d0c:	b0 96       	adiw	r30, 0x20	; 32
    3d0e:	12 82       	std	Z+2, r1	; 0x02
    3d10:	89 81       	ldd	r24, Y+1	; 0x01
    3d12:	9a 81       	ldd	r25, Y+2	; 0x02
    3d14:	fc 01       	movw	r30, r24
    3d16:	b0 96       	adiw	r30, 0x20	; 32
    3d18:	13 82       	std	Z+3, r1	; 0x03
    3d1a:	89 81       	ldd	r24, Y+1	; 0x01
    3d1c:	9a 81       	ldd	r25, Y+2	; 0x02
    3d1e:	fc 01       	movw	r30, r24
    3d20:	b0 96       	adiw	r30, 0x20	; 32
    3d22:	14 82       	std	Z+4, r1	; 0x04
    3d24:	89 81       	ldd	r24, Y+1	; 0x01
    3d26:	9a 81       	ldd	r25, Y+2	; 0x02
    3d28:	fc 01       	movw	r30, r24
    3d2a:	b0 96       	adiw	r30, 0x20	; 32
    3d2c:	81 e0       	ldi	r24, 0x01	; 1
    3d2e:	85 83       	std	Z+5, r24	; 0x05
    3d30:	89 81       	ldd	r24, Y+1	; 0x01
    3d32:	9a 81       	ldd	r25, Y+2	; 0x02
    3d34:	fc 01       	movw	r30, r24
    3d36:	b0 96       	adiw	r30, 0x20	; 32
    3d38:	16 82       	std	Z+6, r1	; 0x06
    3d3a:	89 81       	ldd	r24, Y+1	; 0x01
    3d3c:	9a 81       	ldd	r25, Y+2	; 0x02
    3d3e:	fc 01       	movw	r30, r24
    3d40:	b0 96       	adiw	r30, 0x20	; 32
    3d42:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 0; M[5][1]= 1; M[5][2]= 1; M[5][3]= 1; M[5][4]= 1; M[5][5]= 1; M[5][6]= 0; M[5][7]= 0;
    3d44:	89 81       	ldd	r24, Y+1	; 0x01
    3d46:	9a 81       	ldd	r25, Y+2	; 0x02
    3d48:	fc 01       	movw	r30, r24
    3d4a:	b8 96       	adiw	r30, 0x28	; 40
    3d4c:	10 82       	st	Z, r1
    3d4e:	89 81       	ldd	r24, Y+1	; 0x01
    3d50:	9a 81       	ldd	r25, Y+2	; 0x02
    3d52:	fc 01       	movw	r30, r24
    3d54:	b8 96       	adiw	r30, 0x28	; 40
    3d56:	81 e0       	ldi	r24, 0x01	; 1
    3d58:	81 83       	std	Z+1, r24	; 0x01
    3d5a:	89 81       	ldd	r24, Y+1	; 0x01
    3d5c:	9a 81       	ldd	r25, Y+2	; 0x02
    3d5e:	fc 01       	movw	r30, r24
    3d60:	b8 96       	adiw	r30, 0x28	; 40
    3d62:	81 e0       	ldi	r24, 0x01	; 1
    3d64:	82 83       	std	Z+2, r24	; 0x02
    3d66:	89 81       	ldd	r24, Y+1	; 0x01
    3d68:	9a 81       	ldd	r25, Y+2	; 0x02
    3d6a:	fc 01       	movw	r30, r24
    3d6c:	b8 96       	adiw	r30, 0x28	; 40
    3d6e:	81 e0       	ldi	r24, 0x01	; 1
    3d70:	83 83       	std	Z+3, r24	; 0x03
    3d72:	89 81       	ldd	r24, Y+1	; 0x01
    3d74:	9a 81       	ldd	r25, Y+2	; 0x02
    3d76:	fc 01       	movw	r30, r24
    3d78:	b8 96       	adiw	r30, 0x28	; 40
    3d7a:	81 e0       	ldi	r24, 0x01	; 1
    3d7c:	84 83       	std	Z+4, r24	; 0x04
    3d7e:	89 81       	ldd	r24, Y+1	; 0x01
    3d80:	9a 81       	ldd	r25, Y+2	; 0x02
    3d82:	fc 01       	movw	r30, r24
    3d84:	b8 96       	adiw	r30, 0x28	; 40
    3d86:	81 e0       	ldi	r24, 0x01	; 1
    3d88:	85 83       	std	Z+5, r24	; 0x05
    3d8a:	89 81       	ldd	r24, Y+1	; 0x01
    3d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    3d8e:	fc 01       	movw	r30, r24
    3d90:	b8 96       	adiw	r30, 0x28	; 40
    3d92:	16 82       	std	Z+6, r1	; 0x06
    3d94:	89 81       	ldd	r24, Y+1	; 0x01
    3d96:	9a 81       	ldd	r25, Y+2	; 0x02
    3d98:	fc 01       	movw	r30, r24
    3d9a:	b8 96       	adiw	r30, 0x28	; 40
    3d9c:	17 82       	std	Z+7, r1	; 0x07
        M[6][0]= 0; M[6][1]= 1; M[6][2]= 0; M[6][3]= 0; M[6][4]= 0; M[6][5]= 1; M[6][6]= 0; M[6][7]= 0;
    3d9e:	89 81       	ldd	r24, Y+1	; 0x01
    3da0:	9a 81       	ldd	r25, Y+2	; 0x02
    3da2:	fc 01       	movw	r30, r24
    3da4:	f0 96       	adiw	r30, 0x30	; 48
    3da6:	10 82       	st	Z, r1
    3da8:	89 81       	ldd	r24, Y+1	; 0x01
    3daa:	9a 81       	ldd	r25, Y+2	; 0x02
    3dac:	fc 01       	movw	r30, r24
    3dae:	f0 96       	adiw	r30, 0x30	; 48
    3db0:	81 e0       	ldi	r24, 0x01	; 1
    3db2:	81 83       	std	Z+1, r24	; 0x01
    3db4:	89 81       	ldd	r24, Y+1	; 0x01
    3db6:	9a 81       	ldd	r25, Y+2	; 0x02
    3db8:	fc 01       	movw	r30, r24
    3dba:	f0 96       	adiw	r30, 0x30	; 48
    3dbc:	12 82       	std	Z+2, r1	; 0x02
    3dbe:	89 81       	ldd	r24, Y+1	; 0x01
    3dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    3dc2:	fc 01       	movw	r30, r24
    3dc4:	f0 96       	adiw	r30, 0x30	; 48
    3dc6:	13 82       	std	Z+3, r1	; 0x03
    3dc8:	89 81       	ldd	r24, Y+1	; 0x01
    3dca:	9a 81       	ldd	r25, Y+2	; 0x02
    3dcc:	fc 01       	movw	r30, r24
    3dce:	f0 96       	adiw	r30, 0x30	; 48
    3dd0:	14 82       	std	Z+4, r1	; 0x04
    3dd2:	89 81       	ldd	r24, Y+1	; 0x01
    3dd4:	9a 81       	ldd	r25, Y+2	; 0x02
    3dd6:	fc 01       	movw	r30, r24
    3dd8:	f0 96       	adiw	r30, 0x30	; 48
    3dda:	81 e0       	ldi	r24, 0x01	; 1
    3ddc:	85 83       	std	Z+5, r24	; 0x05
    3dde:	89 81       	ldd	r24, Y+1	; 0x01
    3de0:	9a 81       	ldd	r25, Y+2	; 0x02
    3de2:	fc 01       	movw	r30, r24
    3de4:	f0 96       	adiw	r30, 0x30	; 48
    3de6:	16 82       	std	Z+6, r1	; 0x06
    3de8:	89 81       	ldd	r24, Y+1	; 0x01
    3dea:	9a 81       	ldd	r25, Y+2	; 0x02
    3dec:	fc 01       	movw	r30, r24
    3dee:	f0 96       	adiw	r30, 0x30	; 48
    3df0:	17 82       	std	Z+7, r1	; 0x07
        M[7][0]= 0; M[7][1]= 1; M[7][2]= 0; M[7][3]= 0; M[7][4]= 0; M[7][5]= 1; M[7][6]= 0; M[7][7]= 0;
    3df2:	89 81       	ldd	r24, Y+1	; 0x01
    3df4:	9a 81       	ldd	r25, Y+2	; 0x02
    3df6:	fc 01       	movw	r30, r24
    3df8:	f8 96       	adiw	r30, 0x38	; 56
    3dfa:	10 82       	st	Z, r1
    3dfc:	89 81       	ldd	r24, Y+1	; 0x01
    3dfe:	9a 81       	ldd	r25, Y+2	; 0x02
    3e00:	fc 01       	movw	r30, r24
    3e02:	f8 96       	adiw	r30, 0x38	; 56
    3e04:	81 e0       	ldi	r24, 0x01	; 1
    3e06:	81 83       	std	Z+1, r24	; 0x01
    3e08:	89 81       	ldd	r24, Y+1	; 0x01
    3e0a:	9a 81       	ldd	r25, Y+2	; 0x02
    3e0c:	fc 01       	movw	r30, r24
    3e0e:	f8 96       	adiw	r30, 0x38	; 56
    3e10:	12 82       	std	Z+2, r1	; 0x02
    3e12:	89 81       	ldd	r24, Y+1	; 0x01
    3e14:	9a 81       	ldd	r25, Y+2	; 0x02
    3e16:	fc 01       	movw	r30, r24
    3e18:	f8 96       	adiw	r30, 0x38	; 56
    3e1a:	13 82       	std	Z+3, r1	; 0x03
    3e1c:	89 81       	ldd	r24, Y+1	; 0x01
    3e1e:	9a 81       	ldd	r25, Y+2	; 0x02
    3e20:	fc 01       	movw	r30, r24
    3e22:	f8 96       	adiw	r30, 0x38	; 56
    3e24:	14 82       	std	Z+4, r1	; 0x04
    3e26:	89 81       	ldd	r24, Y+1	; 0x01
    3e28:	9a 81       	ldd	r25, Y+2	; 0x02
    3e2a:	fc 01       	movw	r30, r24
    3e2c:	f8 96       	adiw	r30, 0x38	; 56
    3e2e:	81 e0       	ldi	r24, 0x01	; 1
    3e30:	85 83       	std	Z+5, r24	; 0x05
    3e32:	89 81       	ldd	r24, Y+1	; 0x01
    3e34:	9a 81       	ldd	r25, Y+2	; 0x02
    3e36:	fc 01       	movw	r30, r24
    3e38:	f8 96       	adiw	r30, 0x38	; 56
    3e3a:	16 82       	std	Z+6, r1	; 0x06
    3e3c:	89 81       	ldd	r24, Y+1	; 0x01
    3e3e:	9a 81       	ldd	r25, Y+2	; 0x02
    3e40:	fc 01       	movw	r30, r24
    3e42:	f8 96       	adiw	r30, 0x38	; 56
    3e44:	17 82       	std	Z+7, r1	; 0x07
    3e46:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case 'B':
    {
        M[0][0]= 1; M[0][1]= 1; M[0][2]= 1; M[0][3]= 1; M[0][4]= 1; M[0][5]= 1; M[0][6]= 1; M[0][7]= 1;
    3e4a:	e9 81       	ldd	r30, Y+1	; 0x01
    3e4c:	fa 81       	ldd	r31, Y+2	; 0x02
    3e4e:	81 e0       	ldi	r24, 0x01	; 1
    3e50:	80 83       	st	Z, r24
    3e52:	e9 81       	ldd	r30, Y+1	; 0x01
    3e54:	fa 81       	ldd	r31, Y+2	; 0x02
    3e56:	81 e0       	ldi	r24, 0x01	; 1
    3e58:	81 83       	std	Z+1, r24	; 0x01
    3e5a:	e9 81       	ldd	r30, Y+1	; 0x01
    3e5c:	fa 81       	ldd	r31, Y+2	; 0x02
    3e5e:	81 e0       	ldi	r24, 0x01	; 1
    3e60:	82 83       	std	Z+2, r24	; 0x02
    3e62:	e9 81       	ldd	r30, Y+1	; 0x01
    3e64:	fa 81       	ldd	r31, Y+2	; 0x02
    3e66:	81 e0       	ldi	r24, 0x01	; 1
    3e68:	83 83       	std	Z+3, r24	; 0x03
    3e6a:	e9 81       	ldd	r30, Y+1	; 0x01
    3e6c:	fa 81       	ldd	r31, Y+2	; 0x02
    3e6e:	81 e0       	ldi	r24, 0x01	; 1
    3e70:	84 83       	std	Z+4, r24	; 0x04
    3e72:	e9 81       	ldd	r30, Y+1	; 0x01
    3e74:	fa 81       	ldd	r31, Y+2	; 0x02
    3e76:	81 e0       	ldi	r24, 0x01	; 1
    3e78:	85 83       	std	Z+5, r24	; 0x05
    3e7a:	e9 81       	ldd	r30, Y+1	; 0x01
    3e7c:	fa 81       	ldd	r31, Y+2	; 0x02
    3e7e:	81 e0       	ldi	r24, 0x01	; 1
    3e80:	86 83       	std	Z+6, r24	; 0x06
    3e82:	e9 81       	ldd	r30, Y+1	; 0x01
    3e84:	fa 81       	ldd	r31, Y+2	; 0x02
    3e86:	81 e0       	ldi	r24, 0x01	; 1
    3e88:	87 83       	std	Z+7, r24	; 0x07
        M[1][0]= 1; M[1][1]= 0; M[1][2]= 0; M[1][3]= 0; M[1][4]= 0; M[1][5]= 0; M[1][6]= 0; M[1][7]= 1;
    3e8a:	89 81       	ldd	r24, Y+1	; 0x01
    3e8c:	9a 81       	ldd	r25, Y+2	; 0x02
    3e8e:	fc 01       	movw	r30, r24
    3e90:	38 96       	adiw	r30, 0x08	; 8
    3e92:	81 e0       	ldi	r24, 0x01	; 1
    3e94:	80 83       	st	Z, r24
    3e96:	89 81       	ldd	r24, Y+1	; 0x01
    3e98:	9a 81       	ldd	r25, Y+2	; 0x02
    3e9a:	fc 01       	movw	r30, r24
    3e9c:	38 96       	adiw	r30, 0x08	; 8
    3e9e:	11 82       	std	Z+1, r1	; 0x01
    3ea0:	89 81       	ldd	r24, Y+1	; 0x01
    3ea2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ea4:	fc 01       	movw	r30, r24
    3ea6:	38 96       	adiw	r30, 0x08	; 8
    3ea8:	12 82       	std	Z+2, r1	; 0x02
    3eaa:	89 81       	ldd	r24, Y+1	; 0x01
    3eac:	9a 81       	ldd	r25, Y+2	; 0x02
    3eae:	fc 01       	movw	r30, r24
    3eb0:	38 96       	adiw	r30, 0x08	; 8
    3eb2:	13 82       	std	Z+3, r1	; 0x03
    3eb4:	89 81       	ldd	r24, Y+1	; 0x01
    3eb6:	9a 81       	ldd	r25, Y+2	; 0x02
    3eb8:	fc 01       	movw	r30, r24
    3eba:	38 96       	adiw	r30, 0x08	; 8
    3ebc:	14 82       	std	Z+4, r1	; 0x04
    3ebe:	89 81       	ldd	r24, Y+1	; 0x01
    3ec0:	9a 81       	ldd	r25, Y+2	; 0x02
    3ec2:	fc 01       	movw	r30, r24
    3ec4:	38 96       	adiw	r30, 0x08	; 8
    3ec6:	15 82       	std	Z+5, r1	; 0x05
    3ec8:	89 81       	ldd	r24, Y+1	; 0x01
    3eca:	9a 81       	ldd	r25, Y+2	; 0x02
    3ecc:	fc 01       	movw	r30, r24
    3ece:	38 96       	adiw	r30, 0x08	; 8
    3ed0:	16 82       	std	Z+6, r1	; 0x06
    3ed2:	89 81       	ldd	r24, Y+1	; 0x01
    3ed4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ed6:	fc 01       	movw	r30, r24
    3ed8:	38 96       	adiw	r30, 0x08	; 8
    3eda:	81 e0       	ldi	r24, 0x01	; 1
    3edc:	87 83       	std	Z+7, r24	; 0x07
        M[2][0]= 1; M[2][1]= 0; M[2][2]= 0; M[2][3]= 0; M[2][4]= 0; M[2][5]= 0; M[2][6]= 0; M[2][7]= 1;
    3ede:	89 81       	ldd	r24, Y+1	; 0x01
    3ee0:	9a 81       	ldd	r25, Y+2	; 0x02
    3ee2:	fc 01       	movw	r30, r24
    3ee4:	70 96       	adiw	r30, 0x10	; 16
    3ee6:	81 e0       	ldi	r24, 0x01	; 1
    3ee8:	80 83       	st	Z, r24
    3eea:	89 81       	ldd	r24, Y+1	; 0x01
    3eec:	9a 81       	ldd	r25, Y+2	; 0x02
    3eee:	fc 01       	movw	r30, r24
    3ef0:	70 96       	adiw	r30, 0x10	; 16
    3ef2:	11 82       	std	Z+1, r1	; 0x01
    3ef4:	89 81       	ldd	r24, Y+1	; 0x01
    3ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ef8:	fc 01       	movw	r30, r24
    3efa:	70 96       	adiw	r30, 0x10	; 16
    3efc:	12 82       	std	Z+2, r1	; 0x02
    3efe:	89 81       	ldd	r24, Y+1	; 0x01
    3f00:	9a 81       	ldd	r25, Y+2	; 0x02
    3f02:	fc 01       	movw	r30, r24
    3f04:	70 96       	adiw	r30, 0x10	; 16
    3f06:	13 82       	std	Z+3, r1	; 0x03
    3f08:	89 81       	ldd	r24, Y+1	; 0x01
    3f0a:	9a 81       	ldd	r25, Y+2	; 0x02
    3f0c:	fc 01       	movw	r30, r24
    3f0e:	70 96       	adiw	r30, 0x10	; 16
    3f10:	14 82       	std	Z+4, r1	; 0x04
    3f12:	89 81       	ldd	r24, Y+1	; 0x01
    3f14:	9a 81       	ldd	r25, Y+2	; 0x02
    3f16:	fc 01       	movw	r30, r24
    3f18:	70 96       	adiw	r30, 0x10	; 16
    3f1a:	15 82       	std	Z+5, r1	; 0x05
    3f1c:	89 81       	ldd	r24, Y+1	; 0x01
    3f1e:	9a 81       	ldd	r25, Y+2	; 0x02
    3f20:	fc 01       	movw	r30, r24
    3f22:	70 96       	adiw	r30, 0x10	; 16
    3f24:	16 82       	std	Z+6, r1	; 0x06
    3f26:	89 81       	ldd	r24, Y+1	; 0x01
    3f28:	9a 81       	ldd	r25, Y+2	; 0x02
    3f2a:	fc 01       	movw	r30, r24
    3f2c:	70 96       	adiw	r30, 0x10	; 16
    3f2e:	81 e0       	ldi	r24, 0x01	; 1
    3f30:	87 83       	std	Z+7, r24	; 0x07
        M[3][0]= 1; M[3][1]= 0; M[3][2]= 0; M[3][3]= 0; M[3][4]= 0; M[3][5]= 0; M[3][6]= 1; M[3][7]= 0;
    3f32:	89 81       	ldd	r24, Y+1	; 0x01
    3f34:	9a 81       	ldd	r25, Y+2	; 0x02
    3f36:	fc 01       	movw	r30, r24
    3f38:	78 96       	adiw	r30, 0x18	; 24
    3f3a:	81 e0       	ldi	r24, 0x01	; 1
    3f3c:	80 83       	st	Z, r24
    3f3e:	89 81       	ldd	r24, Y+1	; 0x01
    3f40:	9a 81       	ldd	r25, Y+2	; 0x02
    3f42:	fc 01       	movw	r30, r24
    3f44:	78 96       	adiw	r30, 0x18	; 24
    3f46:	11 82       	std	Z+1, r1	; 0x01
    3f48:	89 81       	ldd	r24, Y+1	; 0x01
    3f4a:	9a 81       	ldd	r25, Y+2	; 0x02
    3f4c:	fc 01       	movw	r30, r24
    3f4e:	78 96       	adiw	r30, 0x18	; 24
    3f50:	12 82       	std	Z+2, r1	; 0x02
    3f52:	89 81       	ldd	r24, Y+1	; 0x01
    3f54:	9a 81       	ldd	r25, Y+2	; 0x02
    3f56:	fc 01       	movw	r30, r24
    3f58:	78 96       	adiw	r30, 0x18	; 24
    3f5a:	13 82       	std	Z+3, r1	; 0x03
    3f5c:	89 81       	ldd	r24, Y+1	; 0x01
    3f5e:	9a 81       	ldd	r25, Y+2	; 0x02
    3f60:	fc 01       	movw	r30, r24
    3f62:	78 96       	adiw	r30, 0x18	; 24
    3f64:	14 82       	std	Z+4, r1	; 0x04
    3f66:	89 81       	ldd	r24, Y+1	; 0x01
    3f68:	9a 81       	ldd	r25, Y+2	; 0x02
    3f6a:	fc 01       	movw	r30, r24
    3f6c:	78 96       	adiw	r30, 0x18	; 24
    3f6e:	15 82       	std	Z+5, r1	; 0x05
    3f70:	89 81       	ldd	r24, Y+1	; 0x01
    3f72:	9a 81       	ldd	r25, Y+2	; 0x02
    3f74:	fc 01       	movw	r30, r24
    3f76:	78 96       	adiw	r30, 0x18	; 24
    3f78:	81 e0       	ldi	r24, 0x01	; 1
    3f7a:	86 83       	std	Z+6, r24	; 0x06
    3f7c:	89 81       	ldd	r24, Y+1	; 0x01
    3f7e:	9a 81       	ldd	r25, Y+2	; 0x02
    3f80:	fc 01       	movw	r30, r24
    3f82:	78 96       	adiw	r30, 0x18	; 24
    3f84:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 1; M[4][1]= 1; M[4][2]= 1; M[4][3]= 1; M[4][4]= 1; M[4][5]= 1; M[4][6]= 1; M[4][7]= 0;
    3f86:	89 81       	ldd	r24, Y+1	; 0x01
    3f88:	9a 81       	ldd	r25, Y+2	; 0x02
    3f8a:	fc 01       	movw	r30, r24
    3f8c:	b0 96       	adiw	r30, 0x20	; 32
    3f8e:	81 e0       	ldi	r24, 0x01	; 1
    3f90:	80 83       	st	Z, r24
    3f92:	89 81       	ldd	r24, Y+1	; 0x01
    3f94:	9a 81       	ldd	r25, Y+2	; 0x02
    3f96:	fc 01       	movw	r30, r24
    3f98:	b0 96       	adiw	r30, 0x20	; 32
    3f9a:	81 e0       	ldi	r24, 0x01	; 1
    3f9c:	81 83       	std	Z+1, r24	; 0x01
    3f9e:	89 81       	ldd	r24, Y+1	; 0x01
    3fa0:	9a 81       	ldd	r25, Y+2	; 0x02
    3fa2:	fc 01       	movw	r30, r24
    3fa4:	b0 96       	adiw	r30, 0x20	; 32
    3fa6:	81 e0       	ldi	r24, 0x01	; 1
    3fa8:	82 83       	std	Z+2, r24	; 0x02
    3faa:	89 81       	ldd	r24, Y+1	; 0x01
    3fac:	9a 81       	ldd	r25, Y+2	; 0x02
    3fae:	fc 01       	movw	r30, r24
    3fb0:	b0 96       	adiw	r30, 0x20	; 32
    3fb2:	81 e0       	ldi	r24, 0x01	; 1
    3fb4:	83 83       	std	Z+3, r24	; 0x03
    3fb6:	89 81       	ldd	r24, Y+1	; 0x01
    3fb8:	9a 81       	ldd	r25, Y+2	; 0x02
    3fba:	fc 01       	movw	r30, r24
    3fbc:	b0 96       	adiw	r30, 0x20	; 32
    3fbe:	81 e0       	ldi	r24, 0x01	; 1
    3fc0:	84 83       	std	Z+4, r24	; 0x04
    3fc2:	89 81       	ldd	r24, Y+1	; 0x01
    3fc4:	9a 81       	ldd	r25, Y+2	; 0x02
    3fc6:	fc 01       	movw	r30, r24
    3fc8:	b0 96       	adiw	r30, 0x20	; 32
    3fca:	81 e0       	ldi	r24, 0x01	; 1
    3fcc:	85 83       	std	Z+5, r24	; 0x05
    3fce:	89 81       	ldd	r24, Y+1	; 0x01
    3fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    3fd2:	fc 01       	movw	r30, r24
    3fd4:	b0 96       	adiw	r30, 0x20	; 32
    3fd6:	81 e0       	ldi	r24, 0x01	; 1
    3fd8:	86 83       	std	Z+6, r24	; 0x06
    3fda:	89 81       	ldd	r24, Y+1	; 0x01
    3fdc:	9a 81       	ldd	r25, Y+2	; 0x02
    3fde:	fc 01       	movw	r30, r24
    3fe0:	b0 96       	adiw	r30, 0x20	; 32
    3fe2:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 1; M[5][1]= 0; M[5][2]= 0; M[5][3]= 0; M[5][4]= 0; M[5][5]= 0; M[5][6]= 0; M[5][7]= 1;
    3fe4:	89 81       	ldd	r24, Y+1	; 0x01
    3fe6:	9a 81       	ldd	r25, Y+2	; 0x02
    3fe8:	fc 01       	movw	r30, r24
    3fea:	b8 96       	adiw	r30, 0x28	; 40
    3fec:	81 e0       	ldi	r24, 0x01	; 1
    3fee:	80 83       	st	Z, r24
    3ff0:	89 81       	ldd	r24, Y+1	; 0x01
    3ff2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ff4:	fc 01       	movw	r30, r24
    3ff6:	b8 96       	adiw	r30, 0x28	; 40
    3ff8:	11 82       	std	Z+1, r1	; 0x01
    3ffa:	89 81       	ldd	r24, Y+1	; 0x01
    3ffc:	9a 81       	ldd	r25, Y+2	; 0x02
    3ffe:	fc 01       	movw	r30, r24
    4000:	b8 96       	adiw	r30, 0x28	; 40
    4002:	12 82       	std	Z+2, r1	; 0x02
    4004:	89 81       	ldd	r24, Y+1	; 0x01
    4006:	9a 81       	ldd	r25, Y+2	; 0x02
    4008:	fc 01       	movw	r30, r24
    400a:	b8 96       	adiw	r30, 0x28	; 40
    400c:	13 82       	std	Z+3, r1	; 0x03
    400e:	89 81       	ldd	r24, Y+1	; 0x01
    4010:	9a 81       	ldd	r25, Y+2	; 0x02
    4012:	fc 01       	movw	r30, r24
    4014:	b8 96       	adiw	r30, 0x28	; 40
    4016:	14 82       	std	Z+4, r1	; 0x04
    4018:	89 81       	ldd	r24, Y+1	; 0x01
    401a:	9a 81       	ldd	r25, Y+2	; 0x02
    401c:	fc 01       	movw	r30, r24
    401e:	b8 96       	adiw	r30, 0x28	; 40
    4020:	15 82       	std	Z+5, r1	; 0x05
    4022:	89 81       	ldd	r24, Y+1	; 0x01
    4024:	9a 81       	ldd	r25, Y+2	; 0x02
    4026:	fc 01       	movw	r30, r24
    4028:	b8 96       	adiw	r30, 0x28	; 40
    402a:	16 82       	std	Z+6, r1	; 0x06
    402c:	89 81       	ldd	r24, Y+1	; 0x01
    402e:	9a 81       	ldd	r25, Y+2	; 0x02
    4030:	fc 01       	movw	r30, r24
    4032:	b8 96       	adiw	r30, 0x28	; 40
    4034:	81 e0       	ldi	r24, 0x01	; 1
    4036:	87 83       	std	Z+7, r24	; 0x07
        M[6][0]= 1; M[6][1]= 0; M[6][2]= 0; M[6][3]= 0; M[6][4]= 0; M[6][5]= 0; M[6][6]= 0; M[6][7]= 1;
    4038:	89 81       	ldd	r24, Y+1	; 0x01
    403a:	9a 81       	ldd	r25, Y+2	; 0x02
    403c:	fc 01       	movw	r30, r24
    403e:	f0 96       	adiw	r30, 0x30	; 48
    4040:	81 e0       	ldi	r24, 0x01	; 1
    4042:	80 83       	st	Z, r24
    4044:	89 81       	ldd	r24, Y+1	; 0x01
    4046:	9a 81       	ldd	r25, Y+2	; 0x02
    4048:	fc 01       	movw	r30, r24
    404a:	f0 96       	adiw	r30, 0x30	; 48
    404c:	11 82       	std	Z+1, r1	; 0x01
    404e:	89 81       	ldd	r24, Y+1	; 0x01
    4050:	9a 81       	ldd	r25, Y+2	; 0x02
    4052:	fc 01       	movw	r30, r24
    4054:	f0 96       	adiw	r30, 0x30	; 48
    4056:	12 82       	std	Z+2, r1	; 0x02
    4058:	89 81       	ldd	r24, Y+1	; 0x01
    405a:	9a 81       	ldd	r25, Y+2	; 0x02
    405c:	fc 01       	movw	r30, r24
    405e:	f0 96       	adiw	r30, 0x30	; 48
    4060:	13 82       	std	Z+3, r1	; 0x03
    4062:	89 81       	ldd	r24, Y+1	; 0x01
    4064:	9a 81       	ldd	r25, Y+2	; 0x02
    4066:	fc 01       	movw	r30, r24
    4068:	f0 96       	adiw	r30, 0x30	; 48
    406a:	14 82       	std	Z+4, r1	; 0x04
    406c:	89 81       	ldd	r24, Y+1	; 0x01
    406e:	9a 81       	ldd	r25, Y+2	; 0x02
    4070:	fc 01       	movw	r30, r24
    4072:	f0 96       	adiw	r30, 0x30	; 48
    4074:	15 82       	std	Z+5, r1	; 0x05
    4076:	89 81       	ldd	r24, Y+1	; 0x01
    4078:	9a 81       	ldd	r25, Y+2	; 0x02
    407a:	fc 01       	movw	r30, r24
    407c:	f0 96       	adiw	r30, 0x30	; 48
    407e:	16 82       	std	Z+6, r1	; 0x06
    4080:	89 81       	ldd	r24, Y+1	; 0x01
    4082:	9a 81       	ldd	r25, Y+2	; 0x02
    4084:	fc 01       	movw	r30, r24
    4086:	f0 96       	adiw	r30, 0x30	; 48
    4088:	81 e0       	ldi	r24, 0x01	; 1
    408a:	87 83       	std	Z+7, r24	; 0x07
        M[7][0]= 1; M[7][1]= 1; M[7][2]= 1; M[7][3]= 1; M[7][4]= 1; M[7][5]= 1; M[7][6]= 1; M[7][7]= 1;
    408c:	89 81       	ldd	r24, Y+1	; 0x01
    408e:	9a 81       	ldd	r25, Y+2	; 0x02
    4090:	fc 01       	movw	r30, r24
    4092:	f8 96       	adiw	r30, 0x38	; 56
    4094:	81 e0       	ldi	r24, 0x01	; 1
    4096:	80 83       	st	Z, r24
    4098:	89 81       	ldd	r24, Y+1	; 0x01
    409a:	9a 81       	ldd	r25, Y+2	; 0x02
    409c:	fc 01       	movw	r30, r24
    409e:	f8 96       	adiw	r30, 0x38	; 56
    40a0:	81 e0       	ldi	r24, 0x01	; 1
    40a2:	81 83       	std	Z+1, r24	; 0x01
    40a4:	89 81       	ldd	r24, Y+1	; 0x01
    40a6:	9a 81       	ldd	r25, Y+2	; 0x02
    40a8:	fc 01       	movw	r30, r24
    40aa:	f8 96       	adiw	r30, 0x38	; 56
    40ac:	81 e0       	ldi	r24, 0x01	; 1
    40ae:	82 83       	std	Z+2, r24	; 0x02
    40b0:	89 81       	ldd	r24, Y+1	; 0x01
    40b2:	9a 81       	ldd	r25, Y+2	; 0x02
    40b4:	fc 01       	movw	r30, r24
    40b6:	f8 96       	adiw	r30, 0x38	; 56
    40b8:	81 e0       	ldi	r24, 0x01	; 1
    40ba:	83 83       	std	Z+3, r24	; 0x03
    40bc:	89 81       	ldd	r24, Y+1	; 0x01
    40be:	9a 81       	ldd	r25, Y+2	; 0x02
    40c0:	fc 01       	movw	r30, r24
    40c2:	f8 96       	adiw	r30, 0x38	; 56
    40c4:	81 e0       	ldi	r24, 0x01	; 1
    40c6:	84 83       	std	Z+4, r24	; 0x04
    40c8:	89 81       	ldd	r24, Y+1	; 0x01
    40ca:	9a 81       	ldd	r25, Y+2	; 0x02
    40cc:	fc 01       	movw	r30, r24
    40ce:	f8 96       	adiw	r30, 0x38	; 56
    40d0:	81 e0       	ldi	r24, 0x01	; 1
    40d2:	85 83       	std	Z+5, r24	; 0x05
    40d4:	89 81       	ldd	r24, Y+1	; 0x01
    40d6:	9a 81       	ldd	r25, Y+2	; 0x02
    40d8:	fc 01       	movw	r30, r24
    40da:	f8 96       	adiw	r30, 0x38	; 56
    40dc:	81 e0       	ldi	r24, 0x01	; 1
    40de:	86 83       	std	Z+6, r24	; 0x06
    40e0:	89 81       	ldd	r24, Y+1	; 0x01
    40e2:	9a 81       	ldd	r25, Y+2	; 0x02
    40e4:	fc 01       	movw	r30, r24
    40e6:	f8 96       	adiw	r30, 0x38	; 56
    40e8:	81 e0       	ldi	r24, 0x01	; 1
    40ea:	87 83       	std	Z+7, r24	; 0x07
    40ec:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case 'C':
    {
        M[0][0]= 0; M[0][1]= 0; M[0][2]= 0; M[0][3]= 0; M[0][4]= 0; M[0][5]= 0; M[0][6]= 0; M[0][7]= 0;
    40f0:	e9 81       	ldd	r30, Y+1	; 0x01
    40f2:	fa 81       	ldd	r31, Y+2	; 0x02
    40f4:	10 82       	st	Z, r1
    40f6:	e9 81       	ldd	r30, Y+1	; 0x01
    40f8:	fa 81       	ldd	r31, Y+2	; 0x02
    40fa:	11 82       	std	Z+1, r1	; 0x01
    40fc:	e9 81       	ldd	r30, Y+1	; 0x01
    40fe:	fa 81       	ldd	r31, Y+2	; 0x02
    4100:	12 82       	std	Z+2, r1	; 0x02
    4102:	e9 81       	ldd	r30, Y+1	; 0x01
    4104:	fa 81       	ldd	r31, Y+2	; 0x02
    4106:	13 82       	std	Z+3, r1	; 0x03
    4108:	e9 81       	ldd	r30, Y+1	; 0x01
    410a:	fa 81       	ldd	r31, Y+2	; 0x02
    410c:	14 82       	std	Z+4, r1	; 0x04
    410e:	e9 81       	ldd	r30, Y+1	; 0x01
    4110:	fa 81       	ldd	r31, Y+2	; 0x02
    4112:	15 82       	std	Z+5, r1	; 0x05
    4114:	e9 81       	ldd	r30, Y+1	; 0x01
    4116:	fa 81       	ldd	r31, Y+2	; 0x02
    4118:	16 82       	std	Z+6, r1	; 0x06
    411a:	e9 81       	ldd	r30, Y+1	; 0x01
    411c:	fa 81       	ldd	r31, Y+2	; 0x02
    411e:	17 82       	std	Z+7, r1	; 0x07
        M[1][0]= 0; M[1][1]= 0; M[1][2]= 0; M[1][3]= 0; M[1][4]= 0; M[1][5]= 0; M[1][6]= 0; M[1][7]= 0;
    4120:	89 81       	ldd	r24, Y+1	; 0x01
    4122:	9a 81       	ldd	r25, Y+2	; 0x02
    4124:	fc 01       	movw	r30, r24
    4126:	38 96       	adiw	r30, 0x08	; 8
    4128:	10 82       	st	Z, r1
    412a:	89 81       	ldd	r24, Y+1	; 0x01
    412c:	9a 81       	ldd	r25, Y+2	; 0x02
    412e:	fc 01       	movw	r30, r24
    4130:	38 96       	adiw	r30, 0x08	; 8
    4132:	11 82       	std	Z+1, r1	; 0x01
    4134:	89 81       	ldd	r24, Y+1	; 0x01
    4136:	9a 81       	ldd	r25, Y+2	; 0x02
    4138:	fc 01       	movw	r30, r24
    413a:	38 96       	adiw	r30, 0x08	; 8
    413c:	12 82       	std	Z+2, r1	; 0x02
    413e:	89 81       	ldd	r24, Y+1	; 0x01
    4140:	9a 81       	ldd	r25, Y+2	; 0x02
    4142:	fc 01       	movw	r30, r24
    4144:	38 96       	adiw	r30, 0x08	; 8
    4146:	13 82       	std	Z+3, r1	; 0x03
    4148:	89 81       	ldd	r24, Y+1	; 0x01
    414a:	9a 81       	ldd	r25, Y+2	; 0x02
    414c:	fc 01       	movw	r30, r24
    414e:	38 96       	adiw	r30, 0x08	; 8
    4150:	14 82       	std	Z+4, r1	; 0x04
    4152:	89 81       	ldd	r24, Y+1	; 0x01
    4154:	9a 81       	ldd	r25, Y+2	; 0x02
    4156:	fc 01       	movw	r30, r24
    4158:	38 96       	adiw	r30, 0x08	; 8
    415a:	15 82       	std	Z+5, r1	; 0x05
    415c:	89 81       	ldd	r24, Y+1	; 0x01
    415e:	9a 81       	ldd	r25, Y+2	; 0x02
    4160:	fc 01       	movw	r30, r24
    4162:	38 96       	adiw	r30, 0x08	; 8
    4164:	16 82       	std	Z+6, r1	; 0x06
    4166:	89 81       	ldd	r24, Y+1	; 0x01
    4168:	9a 81       	ldd	r25, Y+2	; 0x02
    416a:	fc 01       	movw	r30, r24
    416c:	38 96       	adiw	r30, 0x08	; 8
    416e:	17 82       	std	Z+7, r1	; 0x07
        M[2][0]= 0; M[2][1]= 0; M[2][2]= 0; M[2][3]= 0; M[2][4]= 0; M[2][5]= 0; M[2][6]= 0; M[2][7]= 0;
    4170:	89 81       	ldd	r24, Y+1	; 0x01
    4172:	9a 81       	ldd	r25, Y+2	; 0x02
    4174:	fc 01       	movw	r30, r24
    4176:	70 96       	adiw	r30, 0x10	; 16
    4178:	10 82       	st	Z, r1
    417a:	89 81       	ldd	r24, Y+1	; 0x01
    417c:	9a 81       	ldd	r25, Y+2	; 0x02
    417e:	fc 01       	movw	r30, r24
    4180:	70 96       	adiw	r30, 0x10	; 16
    4182:	11 82       	std	Z+1, r1	; 0x01
    4184:	89 81       	ldd	r24, Y+1	; 0x01
    4186:	9a 81       	ldd	r25, Y+2	; 0x02
    4188:	fc 01       	movw	r30, r24
    418a:	70 96       	adiw	r30, 0x10	; 16
    418c:	12 82       	std	Z+2, r1	; 0x02
    418e:	89 81       	ldd	r24, Y+1	; 0x01
    4190:	9a 81       	ldd	r25, Y+2	; 0x02
    4192:	fc 01       	movw	r30, r24
    4194:	70 96       	adiw	r30, 0x10	; 16
    4196:	13 82       	std	Z+3, r1	; 0x03
    4198:	89 81       	ldd	r24, Y+1	; 0x01
    419a:	9a 81       	ldd	r25, Y+2	; 0x02
    419c:	fc 01       	movw	r30, r24
    419e:	70 96       	adiw	r30, 0x10	; 16
    41a0:	14 82       	std	Z+4, r1	; 0x04
    41a2:	89 81       	ldd	r24, Y+1	; 0x01
    41a4:	9a 81       	ldd	r25, Y+2	; 0x02
    41a6:	fc 01       	movw	r30, r24
    41a8:	70 96       	adiw	r30, 0x10	; 16
    41aa:	15 82       	std	Z+5, r1	; 0x05
    41ac:	89 81       	ldd	r24, Y+1	; 0x01
    41ae:	9a 81       	ldd	r25, Y+2	; 0x02
    41b0:	fc 01       	movw	r30, r24
    41b2:	70 96       	adiw	r30, 0x10	; 16
    41b4:	16 82       	std	Z+6, r1	; 0x06
    41b6:	89 81       	ldd	r24, Y+1	; 0x01
    41b8:	9a 81       	ldd	r25, Y+2	; 0x02
    41ba:	fc 01       	movw	r30, r24
    41bc:	70 96       	adiw	r30, 0x10	; 16
    41be:	17 82       	std	Z+7, r1	; 0x07
        M[3][0]= 0; M[3][1]= 0; M[3][2]= 0; M[3][3]= 0; M[3][4]= 0; M[3][5]= 0; M[3][6]= 0; M[3][7]= 0;
    41c0:	89 81       	ldd	r24, Y+1	; 0x01
    41c2:	9a 81       	ldd	r25, Y+2	; 0x02
    41c4:	fc 01       	movw	r30, r24
    41c6:	78 96       	adiw	r30, 0x18	; 24
    41c8:	10 82       	st	Z, r1
    41ca:	89 81       	ldd	r24, Y+1	; 0x01
    41cc:	9a 81       	ldd	r25, Y+2	; 0x02
    41ce:	fc 01       	movw	r30, r24
    41d0:	78 96       	adiw	r30, 0x18	; 24
    41d2:	11 82       	std	Z+1, r1	; 0x01
    41d4:	89 81       	ldd	r24, Y+1	; 0x01
    41d6:	9a 81       	ldd	r25, Y+2	; 0x02
    41d8:	fc 01       	movw	r30, r24
    41da:	78 96       	adiw	r30, 0x18	; 24
    41dc:	12 82       	std	Z+2, r1	; 0x02
    41de:	89 81       	ldd	r24, Y+1	; 0x01
    41e0:	9a 81       	ldd	r25, Y+2	; 0x02
    41e2:	fc 01       	movw	r30, r24
    41e4:	78 96       	adiw	r30, 0x18	; 24
    41e6:	13 82       	std	Z+3, r1	; 0x03
    41e8:	89 81       	ldd	r24, Y+1	; 0x01
    41ea:	9a 81       	ldd	r25, Y+2	; 0x02
    41ec:	fc 01       	movw	r30, r24
    41ee:	78 96       	adiw	r30, 0x18	; 24
    41f0:	14 82       	std	Z+4, r1	; 0x04
    41f2:	89 81       	ldd	r24, Y+1	; 0x01
    41f4:	9a 81       	ldd	r25, Y+2	; 0x02
    41f6:	fc 01       	movw	r30, r24
    41f8:	78 96       	adiw	r30, 0x18	; 24
    41fa:	15 82       	std	Z+5, r1	; 0x05
    41fc:	89 81       	ldd	r24, Y+1	; 0x01
    41fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4200:	fc 01       	movw	r30, r24
    4202:	78 96       	adiw	r30, 0x18	; 24
    4204:	16 82       	std	Z+6, r1	; 0x06
    4206:	89 81       	ldd	r24, Y+1	; 0x01
    4208:	9a 81       	ldd	r25, Y+2	; 0x02
    420a:	fc 01       	movw	r30, r24
    420c:	78 96       	adiw	r30, 0x18	; 24
    420e:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 0; M[4][1]= 0; M[4][2]= 0; M[4][3]= 0; M[4][4]= 0; M[4][5]= 0; M[4][6]= 0; M[4][7]= 0;
    4210:	89 81       	ldd	r24, Y+1	; 0x01
    4212:	9a 81       	ldd	r25, Y+2	; 0x02
    4214:	fc 01       	movw	r30, r24
    4216:	b0 96       	adiw	r30, 0x20	; 32
    4218:	10 82       	st	Z, r1
    421a:	89 81       	ldd	r24, Y+1	; 0x01
    421c:	9a 81       	ldd	r25, Y+2	; 0x02
    421e:	fc 01       	movw	r30, r24
    4220:	b0 96       	adiw	r30, 0x20	; 32
    4222:	11 82       	std	Z+1, r1	; 0x01
    4224:	89 81       	ldd	r24, Y+1	; 0x01
    4226:	9a 81       	ldd	r25, Y+2	; 0x02
    4228:	fc 01       	movw	r30, r24
    422a:	b0 96       	adiw	r30, 0x20	; 32
    422c:	12 82       	std	Z+2, r1	; 0x02
    422e:	89 81       	ldd	r24, Y+1	; 0x01
    4230:	9a 81       	ldd	r25, Y+2	; 0x02
    4232:	fc 01       	movw	r30, r24
    4234:	b0 96       	adiw	r30, 0x20	; 32
    4236:	13 82       	std	Z+3, r1	; 0x03
    4238:	89 81       	ldd	r24, Y+1	; 0x01
    423a:	9a 81       	ldd	r25, Y+2	; 0x02
    423c:	fc 01       	movw	r30, r24
    423e:	b0 96       	adiw	r30, 0x20	; 32
    4240:	14 82       	std	Z+4, r1	; 0x04
    4242:	89 81       	ldd	r24, Y+1	; 0x01
    4244:	9a 81       	ldd	r25, Y+2	; 0x02
    4246:	fc 01       	movw	r30, r24
    4248:	b0 96       	adiw	r30, 0x20	; 32
    424a:	15 82       	std	Z+5, r1	; 0x05
    424c:	89 81       	ldd	r24, Y+1	; 0x01
    424e:	9a 81       	ldd	r25, Y+2	; 0x02
    4250:	fc 01       	movw	r30, r24
    4252:	b0 96       	adiw	r30, 0x20	; 32
    4254:	16 82       	std	Z+6, r1	; 0x06
    4256:	89 81       	ldd	r24, Y+1	; 0x01
    4258:	9a 81       	ldd	r25, Y+2	; 0x02
    425a:	fc 01       	movw	r30, r24
    425c:	b0 96       	adiw	r30, 0x20	; 32
    425e:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 0; M[5][1]= 0; M[5][2]= 0; M[5][3]= 0; M[5][4]= 0; M[5][5]= 0; M[5][6]= 0; M[5][7]= 0;
    4260:	89 81       	ldd	r24, Y+1	; 0x01
    4262:	9a 81       	ldd	r25, Y+2	; 0x02
    4264:	fc 01       	movw	r30, r24
    4266:	b8 96       	adiw	r30, 0x28	; 40
    4268:	10 82       	st	Z, r1
    426a:	89 81       	ldd	r24, Y+1	; 0x01
    426c:	9a 81       	ldd	r25, Y+2	; 0x02
    426e:	fc 01       	movw	r30, r24
    4270:	b8 96       	adiw	r30, 0x28	; 40
    4272:	11 82       	std	Z+1, r1	; 0x01
    4274:	89 81       	ldd	r24, Y+1	; 0x01
    4276:	9a 81       	ldd	r25, Y+2	; 0x02
    4278:	fc 01       	movw	r30, r24
    427a:	b8 96       	adiw	r30, 0x28	; 40
    427c:	12 82       	std	Z+2, r1	; 0x02
    427e:	89 81       	ldd	r24, Y+1	; 0x01
    4280:	9a 81       	ldd	r25, Y+2	; 0x02
    4282:	fc 01       	movw	r30, r24
    4284:	b8 96       	adiw	r30, 0x28	; 40
    4286:	13 82       	std	Z+3, r1	; 0x03
    4288:	89 81       	ldd	r24, Y+1	; 0x01
    428a:	9a 81       	ldd	r25, Y+2	; 0x02
    428c:	fc 01       	movw	r30, r24
    428e:	b8 96       	adiw	r30, 0x28	; 40
    4290:	14 82       	std	Z+4, r1	; 0x04
    4292:	89 81       	ldd	r24, Y+1	; 0x01
    4294:	9a 81       	ldd	r25, Y+2	; 0x02
    4296:	fc 01       	movw	r30, r24
    4298:	b8 96       	adiw	r30, 0x28	; 40
    429a:	15 82       	std	Z+5, r1	; 0x05
    429c:	89 81       	ldd	r24, Y+1	; 0x01
    429e:	9a 81       	ldd	r25, Y+2	; 0x02
    42a0:	fc 01       	movw	r30, r24
    42a2:	b8 96       	adiw	r30, 0x28	; 40
    42a4:	16 82       	std	Z+6, r1	; 0x06
    42a6:	89 81       	ldd	r24, Y+1	; 0x01
    42a8:	9a 81       	ldd	r25, Y+2	; 0x02
    42aa:	fc 01       	movw	r30, r24
    42ac:	b8 96       	adiw	r30, 0x28	; 40
    42ae:	17 82       	std	Z+7, r1	; 0x07
        M[6][0]= 0; M[6][1]= 0; M[6][2]= 0; M[6][3]= 0; M[6][4]= 0; M[6][5]= 0; M[6][6]= 0; M[6][7]= 0;
    42b0:	89 81       	ldd	r24, Y+1	; 0x01
    42b2:	9a 81       	ldd	r25, Y+2	; 0x02
    42b4:	fc 01       	movw	r30, r24
    42b6:	f0 96       	adiw	r30, 0x30	; 48
    42b8:	10 82       	st	Z, r1
    42ba:	89 81       	ldd	r24, Y+1	; 0x01
    42bc:	9a 81       	ldd	r25, Y+2	; 0x02
    42be:	fc 01       	movw	r30, r24
    42c0:	f0 96       	adiw	r30, 0x30	; 48
    42c2:	11 82       	std	Z+1, r1	; 0x01
    42c4:	89 81       	ldd	r24, Y+1	; 0x01
    42c6:	9a 81       	ldd	r25, Y+2	; 0x02
    42c8:	fc 01       	movw	r30, r24
    42ca:	f0 96       	adiw	r30, 0x30	; 48
    42cc:	12 82       	std	Z+2, r1	; 0x02
    42ce:	89 81       	ldd	r24, Y+1	; 0x01
    42d0:	9a 81       	ldd	r25, Y+2	; 0x02
    42d2:	fc 01       	movw	r30, r24
    42d4:	f0 96       	adiw	r30, 0x30	; 48
    42d6:	13 82       	std	Z+3, r1	; 0x03
    42d8:	89 81       	ldd	r24, Y+1	; 0x01
    42da:	9a 81       	ldd	r25, Y+2	; 0x02
    42dc:	fc 01       	movw	r30, r24
    42de:	f0 96       	adiw	r30, 0x30	; 48
    42e0:	14 82       	std	Z+4, r1	; 0x04
    42e2:	89 81       	ldd	r24, Y+1	; 0x01
    42e4:	9a 81       	ldd	r25, Y+2	; 0x02
    42e6:	fc 01       	movw	r30, r24
    42e8:	f0 96       	adiw	r30, 0x30	; 48
    42ea:	15 82       	std	Z+5, r1	; 0x05
    42ec:	89 81       	ldd	r24, Y+1	; 0x01
    42ee:	9a 81       	ldd	r25, Y+2	; 0x02
    42f0:	fc 01       	movw	r30, r24
    42f2:	f0 96       	adiw	r30, 0x30	; 48
    42f4:	16 82       	std	Z+6, r1	; 0x06
    42f6:	89 81       	ldd	r24, Y+1	; 0x01
    42f8:	9a 81       	ldd	r25, Y+2	; 0x02
    42fa:	fc 01       	movw	r30, r24
    42fc:	f0 96       	adiw	r30, 0x30	; 48
    42fe:	17 82       	std	Z+7, r1	; 0x07
        M[7][0]= 0; M[7][1]= 0; M[7][2]= 0; M[7][3]= 0; M[7][4]= 0; M[7][5]= 0; M[7][6]= 0; M[7][7]= 0;
    4300:	89 81       	ldd	r24, Y+1	; 0x01
    4302:	9a 81       	ldd	r25, Y+2	; 0x02
    4304:	fc 01       	movw	r30, r24
    4306:	f8 96       	adiw	r30, 0x38	; 56
    4308:	10 82       	st	Z, r1
    430a:	89 81       	ldd	r24, Y+1	; 0x01
    430c:	9a 81       	ldd	r25, Y+2	; 0x02
    430e:	fc 01       	movw	r30, r24
    4310:	f8 96       	adiw	r30, 0x38	; 56
    4312:	11 82       	std	Z+1, r1	; 0x01
    4314:	89 81       	ldd	r24, Y+1	; 0x01
    4316:	9a 81       	ldd	r25, Y+2	; 0x02
    4318:	fc 01       	movw	r30, r24
    431a:	f8 96       	adiw	r30, 0x38	; 56
    431c:	12 82       	std	Z+2, r1	; 0x02
    431e:	89 81       	ldd	r24, Y+1	; 0x01
    4320:	9a 81       	ldd	r25, Y+2	; 0x02
    4322:	fc 01       	movw	r30, r24
    4324:	f8 96       	adiw	r30, 0x38	; 56
    4326:	13 82       	std	Z+3, r1	; 0x03
    4328:	89 81       	ldd	r24, Y+1	; 0x01
    432a:	9a 81       	ldd	r25, Y+2	; 0x02
    432c:	fc 01       	movw	r30, r24
    432e:	f8 96       	adiw	r30, 0x38	; 56
    4330:	14 82       	std	Z+4, r1	; 0x04
    4332:	89 81       	ldd	r24, Y+1	; 0x01
    4334:	9a 81       	ldd	r25, Y+2	; 0x02
    4336:	fc 01       	movw	r30, r24
    4338:	f8 96       	adiw	r30, 0x38	; 56
    433a:	15 82       	std	Z+5, r1	; 0x05
    433c:	89 81       	ldd	r24, Y+1	; 0x01
    433e:	9a 81       	ldd	r25, Y+2	; 0x02
    4340:	fc 01       	movw	r30, r24
    4342:	f8 96       	adiw	r30, 0x38	; 56
    4344:	16 82       	std	Z+6, r1	; 0x06
    4346:	89 81       	ldd	r24, Y+1	; 0x01
    4348:	9a 81       	ldd	r25, Y+2	; 0x02
    434a:	fc 01       	movw	r30, r24
    434c:	f8 96       	adiw	r30, 0x38	; 56
    434e:	17 82       	std	Z+7, r1	; 0x07
    4350:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case 'D':
    {
        M[0][0]= 0; M[0][1]= 0; M[0][2]= 0; M[0][3]= 0; M[0][4]= 0; M[0][5]= 0; M[0][6]= 0; M[0][7]= 0;
    4354:	e9 81       	ldd	r30, Y+1	; 0x01
    4356:	fa 81       	ldd	r31, Y+2	; 0x02
    4358:	10 82       	st	Z, r1
    435a:	e9 81       	ldd	r30, Y+1	; 0x01
    435c:	fa 81       	ldd	r31, Y+2	; 0x02
    435e:	11 82       	std	Z+1, r1	; 0x01
    4360:	e9 81       	ldd	r30, Y+1	; 0x01
    4362:	fa 81       	ldd	r31, Y+2	; 0x02
    4364:	12 82       	std	Z+2, r1	; 0x02
    4366:	e9 81       	ldd	r30, Y+1	; 0x01
    4368:	fa 81       	ldd	r31, Y+2	; 0x02
    436a:	13 82       	std	Z+3, r1	; 0x03
    436c:	e9 81       	ldd	r30, Y+1	; 0x01
    436e:	fa 81       	ldd	r31, Y+2	; 0x02
    4370:	14 82       	std	Z+4, r1	; 0x04
    4372:	e9 81       	ldd	r30, Y+1	; 0x01
    4374:	fa 81       	ldd	r31, Y+2	; 0x02
    4376:	15 82       	std	Z+5, r1	; 0x05
    4378:	e9 81       	ldd	r30, Y+1	; 0x01
    437a:	fa 81       	ldd	r31, Y+2	; 0x02
    437c:	16 82       	std	Z+6, r1	; 0x06
    437e:	e9 81       	ldd	r30, Y+1	; 0x01
    4380:	fa 81       	ldd	r31, Y+2	; 0x02
    4382:	17 82       	std	Z+7, r1	; 0x07
        M[1][0]= 0; M[1][1]= 0; M[1][2]= 0; M[1][3]= 0; M[1][4]= 0; M[1][5]= 0; M[1][6]= 0; M[1][7]= 0;
    4384:	89 81       	ldd	r24, Y+1	; 0x01
    4386:	9a 81       	ldd	r25, Y+2	; 0x02
    4388:	fc 01       	movw	r30, r24
    438a:	38 96       	adiw	r30, 0x08	; 8
    438c:	10 82       	st	Z, r1
    438e:	89 81       	ldd	r24, Y+1	; 0x01
    4390:	9a 81       	ldd	r25, Y+2	; 0x02
    4392:	fc 01       	movw	r30, r24
    4394:	38 96       	adiw	r30, 0x08	; 8
    4396:	11 82       	std	Z+1, r1	; 0x01
    4398:	89 81       	ldd	r24, Y+1	; 0x01
    439a:	9a 81       	ldd	r25, Y+2	; 0x02
    439c:	fc 01       	movw	r30, r24
    439e:	38 96       	adiw	r30, 0x08	; 8
    43a0:	12 82       	std	Z+2, r1	; 0x02
    43a2:	89 81       	ldd	r24, Y+1	; 0x01
    43a4:	9a 81       	ldd	r25, Y+2	; 0x02
    43a6:	fc 01       	movw	r30, r24
    43a8:	38 96       	adiw	r30, 0x08	; 8
    43aa:	13 82       	std	Z+3, r1	; 0x03
    43ac:	89 81       	ldd	r24, Y+1	; 0x01
    43ae:	9a 81       	ldd	r25, Y+2	; 0x02
    43b0:	fc 01       	movw	r30, r24
    43b2:	38 96       	adiw	r30, 0x08	; 8
    43b4:	14 82       	std	Z+4, r1	; 0x04
    43b6:	89 81       	ldd	r24, Y+1	; 0x01
    43b8:	9a 81       	ldd	r25, Y+2	; 0x02
    43ba:	fc 01       	movw	r30, r24
    43bc:	38 96       	adiw	r30, 0x08	; 8
    43be:	15 82       	std	Z+5, r1	; 0x05
    43c0:	89 81       	ldd	r24, Y+1	; 0x01
    43c2:	9a 81       	ldd	r25, Y+2	; 0x02
    43c4:	fc 01       	movw	r30, r24
    43c6:	38 96       	adiw	r30, 0x08	; 8
    43c8:	16 82       	std	Z+6, r1	; 0x06
    43ca:	89 81       	ldd	r24, Y+1	; 0x01
    43cc:	9a 81       	ldd	r25, Y+2	; 0x02
    43ce:	fc 01       	movw	r30, r24
    43d0:	38 96       	adiw	r30, 0x08	; 8
    43d2:	17 82       	std	Z+7, r1	; 0x07
        M[2][0]= 0; M[2][1]= 0; M[2][2]= 0; M[2][3]= 0; M[2][4]= 0; M[2][5]= 0; M[2][6]= 0; M[2][7]= 0;
    43d4:	89 81       	ldd	r24, Y+1	; 0x01
    43d6:	9a 81       	ldd	r25, Y+2	; 0x02
    43d8:	fc 01       	movw	r30, r24
    43da:	70 96       	adiw	r30, 0x10	; 16
    43dc:	10 82       	st	Z, r1
    43de:	89 81       	ldd	r24, Y+1	; 0x01
    43e0:	9a 81       	ldd	r25, Y+2	; 0x02
    43e2:	fc 01       	movw	r30, r24
    43e4:	70 96       	adiw	r30, 0x10	; 16
    43e6:	11 82       	std	Z+1, r1	; 0x01
    43e8:	89 81       	ldd	r24, Y+1	; 0x01
    43ea:	9a 81       	ldd	r25, Y+2	; 0x02
    43ec:	fc 01       	movw	r30, r24
    43ee:	70 96       	adiw	r30, 0x10	; 16
    43f0:	12 82       	std	Z+2, r1	; 0x02
    43f2:	89 81       	ldd	r24, Y+1	; 0x01
    43f4:	9a 81       	ldd	r25, Y+2	; 0x02
    43f6:	fc 01       	movw	r30, r24
    43f8:	70 96       	adiw	r30, 0x10	; 16
    43fa:	13 82       	std	Z+3, r1	; 0x03
    43fc:	89 81       	ldd	r24, Y+1	; 0x01
    43fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4400:	fc 01       	movw	r30, r24
    4402:	70 96       	adiw	r30, 0x10	; 16
    4404:	14 82       	std	Z+4, r1	; 0x04
    4406:	89 81       	ldd	r24, Y+1	; 0x01
    4408:	9a 81       	ldd	r25, Y+2	; 0x02
    440a:	fc 01       	movw	r30, r24
    440c:	70 96       	adiw	r30, 0x10	; 16
    440e:	15 82       	std	Z+5, r1	; 0x05
    4410:	89 81       	ldd	r24, Y+1	; 0x01
    4412:	9a 81       	ldd	r25, Y+2	; 0x02
    4414:	fc 01       	movw	r30, r24
    4416:	70 96       	adiw	r30, 0x10	; 16
    4418:	16 82       	std	Z+6, r1	; 0x06
    441a:	89 81       	ldd	r24, Y+1	; 0x01
    441c:	9a 81       	ldd	r25, Y+2	; 0x02
    441e:	fc 01       	movw	r30, r24
    4420:	70 96       	adiw	r30, 0x10	; 16
    4422:	17 82       	std	Z+7, r1	; 0x07
        M[3][0]= 0; M[3][1]= 0; M[3][2]= 0; M[3][3]= 0; M[3][4]= 0; M[3][5]= 0; M[3][6]= 0; M[3][7]= 0;
    4424:	89 81       	ldd	r24, Y+1	; 0x01
    4426:	9a 81       	ldd	r25, Y+2	; 0x02
    4428:	fc 01       	movw	r30, r24
    442a:	78 96       	adiw	r30, 0x18	; 24
    442c:	10 82       	st	Z, r1
    442e:	89 81       	ldd	r24, Y+1	; 0x01
    4430:	9a 81       	ldd	r25, Y+2	; 0x02
    4432:	fc 01       	movw	r30, r24
    4434:	78 96       	adiw	r30, 0x18	; 24
    4436:	11 82       	std	Z+1, r1	; 0x01
    4438:	89 81       	ldd	r24, Y+1	; 0x01
    443a:	9a 81       	ldd	r25, Y+2	; 0x02
    443c:	fc 01       	movw	r30, r24
    443e:	78 96       	adiw	r30, 0x18	; 24
    4440:	12 82       	std	Z+2, r1	; 0x02
    4442:	89 81       	ldd	r24, Y+1	; 0x01
    4444:	9a 81       	ldd	r25, Y+2	; 0x02
    4446:	fc 01       	movw	r30, r24
    4448:	78 96       	adiw	r30, 0x18	; 24
    444a:	13 82       	std	Z+3, r1	; 0x03
    444c:	89 81       	ldd	r24, Y+1	; 0x01
    444e:	9a 81       	ldd	r25, Y+2	; 0x02
    4450:	fc 01       	movw	r30, r24
    4452:	78 96       	adiw	r30, 0x18	; 24
    4454:	14 82       	std	Z+4, r1	; 0x04
    4456:	89 81       	ldd	r24, Y+1	; 0x01
    4458:	9a 81       	ldd	r25, Y+2	; 0x02
    445a:	fc 01       	movw	r30, r24
    445c:	78 96       	adiw	r30, 0x18	; 24
    445e:	15 82       	std	Z+5, r1	; 0x05
    4460:	89 81       	ldd	r24, Y+1	; 0x01
    4462:	9a 81       	ldd	r25, Y+2	; 0x02
    4464:	fc 01       	movw	r30, r24
    4466:	78 96       	adiw	r30, 0x18	; 24
    4468:	16 82       	std	Z+6, r1	; 0x06
    446a:	89 81       	ldd	r24, Y+1	; 0x01
    446c:	9a 81       	ldd	r25, Y+2	; 0x02
    446e:	fc 01       	movw	r30, r24
    4470:	78 96       	adiw	r30, 0x18	; 24
    4472:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 0; M[4][1]= 0; M[4][2]= 0; M[4][3]= 0; M[4][4]= 0; M[4][5]= 0; M[4][6]= 0; M[4][7]= 0;
    4474:	89 81       	ldd	r24, Y+1	; 0x01
    4476:	9a 81       	ldd	r25, Y+2	; 0x02
    4478:	fc 01       	movw	r30, r24
    447a:	b0 96       	adiw	r30, 0x20	; 32
    447c:	10 82       	st	Z, r1
    447e:	89 81       	ldd	r24, Y+1	; 0x01
    4480:	9a 81       	ldd	r25, Y+2	; 0x02
    4482:	fc 01       	movw	r30, r24
    4484:	b0 96       	adiw	r30, 0x20	; 32
    4486:	11 82       	std	Z+1, r1	; 0x01
    4488:	89 81       	ldd	r24, Y+1	; 0x01
    448a:	9a 81       	ldd	r25, Y+2	; 0x02
    448c:	fc 01       	movw	r30, r24
    448e:	b0 96       	adiw	r30, 0x20	; 32
    4490:	12 82       	std	Z+2, r1	; 0x02
    4492:	89 81       	ldd	r24, Y+1	; 0x01
    4494:	9a 81       	ldd	r25, Y+2	; 0x02
    4496:	fc 01       	movw	r30, r24
    4498:	b0 96       	adiw	r30, 0x20	; 32
    449a:	13 82       	std	Z+3, r1	; 0x03
    449c:	89 81       	ldd	r24, Y+1	; 0x01
    449e:	9a 81       	ldd	r25, Y+2	; 0x02
    44a0:	fc 01       	movw	r30, r24
    44a2:	b0 96       	adiw	r30, 0x20	; 32
    44a4:	14 82       	std	Z+4, r1	; 0x04
    44a6:	89 81       	ldd	r24, Y+1	; 0x01
    44a8:	9a 81       	ldd	r25, Y+2	; 0x02
    44aa:	fc 01       	movw	r30, r24
    44ac:	b0 96       	adiw	r30, 0x20	; 32
    44ae:	15 82       	std	Z+5, r1	; 0x05
    44b0:	89 81       	ldd	r24, Y+1	; 0x01
    44b2:	9a 81       	ldd	r25, Y+2	; 0x02
    44b4:	fc 01       	movw	r30, r24
    44b6:	b0 96       	adiw	r30, 0x20	; 32
    44b8:	16 82       	std	Z+6, r1	; 0x06
    44ba:	89 81       	ldd	r24, Y+1	; 0x01
    44bc:	9a 81       	ldd	r25, Y+2	; 0x02
    44be:	fc 01       	movw	r30, r24
    44c0:	b0 96       	adiw	r30, 0x20	; 32
    44c2:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 0; M[5][1]= 0; M[5][2]= 0; M[5][3]= 0; M[5][4]= 0; M[5][5]= 0; M[5][6]= 0; M[5][7]= 0;
    44c4:	89 81       	ldd	r24, Y+1	; 0x01
    44c6:	9a 81       	ldd	r25, Y+2	; 0x02
    44c8:	fc 01       	movw	r30, r24
    44ca:	b8 96       	adiw	r30, 0x28	; 40
    44cc:	10 82       	st	Z, r1
    44ce:	89 81       	ldd	r24, Y+1	; 0x01
    44d0:	9a 81       	ldd	r25, Y+2	; 0x02
    44d2:	fc 01       	movw	r30, r24
    44d4:	b8 96       	adiw	r30, 0x28	; 40
    44d6:	11 82       	std	Z+1, r1	; 0x01
    44d8:	89 81       	ldd	r24, Y+1	; 0x01
    44da:	9a 81       	ldd	r25, Y+2	; 0x02
    44dc:	fc 01       	movw	r30, r24
    44de:	b8 96       	adiw	r30, 0x28	; 40
    44e0:	12 82       	std	Z+2, r1	; 0x02
    44e2:	89 81       	ldd	r24, Y+1	; 0x01
    44e4:	9a 81       	ldd	r25, Y+2	; 0x02
    44e6:	fc 01       	movw	r30, r24
    44e8:	b8 96       	adiw	r30, 0x28	; 40
    44ea:	13 82       	std	Z+3, r1	; 0x03
    44ec:	89 81       	ldd	r24, Y+1	; 0x01
    44ee:	9a 81       	ldd	r25, Y+2	; 0x02
    44f0:	fc 01       	movw	r30, r24
    44f2:	b8 96       	adiw	r30, 0x28	; 40
    44f4:	14 82       	std	Z+4, r1	; 0x04
    44f6:	89 81       	ldd	r24, Y+1	; 0x01
    44f8:	9a 81       	ldd	r25, Y+2	; 0x02
    44fa:	fc 01       	movw	r30, r24
    44fc:	b8 96       	adiw	r30, 0x28	; 40
    44fe:	15 82       	std	Z+5, r1	; 0x05
    4500:	89 81       	ldd	r24, Y+1	; 0x01
    4502:	9a 81       	ldd	r25, Y+2	; 0x02
    4504:	fc 01       	movw	r30, r24
    4506:	b8 96       	adiw	r30, 0x28	; 40
    4508:	16 82       	std	Z+6, r1	; 0x06
    450a:	89 81       	ldd	r24, Y+1	; 0x01
    450c:	9a 81       	ldd	r25, Y+2	; 0x02
    450e:	fc 01       	movw	r30, r24
    4510:	b8 96       	adiw	r30, 0x28	; 40
    4512:	17 82       	std	Z+7, r1	; 0x07
        M[6][0]= 0; M[6][1]= 0; M[6][2]= 0; M[6][3]= 0; M[6][4]= 0; M[6][5]= 0; M[6][6]= 0; M[6][7]= 0;
    4514:	89 81       	ldd	r24, Y+1	; 0x01
    4516:	9a 81       	ldd	r25, Y+2	; 0x02
    4518:	fc 01       	movw	r30, r24
    451a:	f0 96       	adiw	r30, 0x30	; 48
    451c:	10 82       	st	Z, r1
    451e:	89 81       	ldd	r24, Y+1	; 0x01
    4520:	9a 81       	ldd	r25, Y+2	; 0x02
    4522:	fc 01       	movw	r30, r24
    4524:	f0 96       	adiw	r30, 0x30	; 48
    4526:	11 82       	std	Z+1, r1	; 0x01
    4528:	89 81       	ldd	r24, Y+1	; 0x01
    452a:	9a 81       	ldd	r25, Y+2	; 0x02
    452c:	fc 01       	movw	r30, r24
    452e:	f0 96       	adiw	r30, 0x30	; 48
    4530:	12 82       	std	Z+2, r1	; 0x02
    4532:	89 81       	ldd	r24, Y+1	; 0x01
    4534:	9a 81       	ldd	r25, Y+2	; 0x02
    4536:	fc 01       	movw	r30, r24
    4538:	f0 96       	adiw	r30, 0x30	; 48
    453a:	13 82       	std	Z+3, r1	; 0x03
    453c:	89 81       	ldd	r24, Y+1	; 0x01
    453e:	9a 81       	ldd	r25, Y+2	; 0x02
    4540:	fc 01       	movw	r30, r24
    4542:	f0 96       	adiw	r30, 0x30	; 48
    4544:	14 82       	std	Z+4, r1	; 0x04
    4546:	89 81       	ldd	r24, Y+1	; 0x01
    4548:	9a 81       	ldd	r25, Y+2	; 0x02
    454a:	fc 01       	movw	r30, r24
    454c:	f0 96       	adiw	r30, 0x30	; 48
    454e:	15 82       	std	Z+5, r1	; 0x05
    4550:	89 81       	ldd	r24, Y+1	; 0x01
    4552:	9a 81       	ldd	r25, Y+2	; 0x02
    4554:	fc 01       	movw	r30, r24
    4556:	f0 96       	adiw	r30, 0x30	; 48
    4558:	16 82       	std	Z+6, r1	; 0x06
    455a:	89 81       	ldd	r24, Y+1	; 0x01
    455c:	9a 81       	ldd	r25, Y+2	; 0x02
    455e:	fc 01       	movw	r30, r24
    4560:	f0 96       	adiw	r30, 0x30	; 48
    4562:	17 82       	std	Z+7, r1	; 0x07
        M[7][0]= 0; M[7][1]= 0; M[7][2]= 0; M[7][3]= 0; M[7][4]= 0; M[7][5]= 0; M[7][6]= 0; M[7][7]= 0;
    4564:	89 81       	ldd	r24, Y+1	; 0x01
    4566:	9a 81       	ldd	r25, Y+2	; 0x02
    4568:	fc 01       	movw	r30, r24
    456a:	f8 96       	adiw	r30, 0x38	; 56
    456c:	10 82       	st	Z, r1
    456e:	89 81       	ldd	r24, Y+1	; 0x01
    4570:	9a 81       	ldd	r25, Y+2	; 0x02
    4572:	fc 01       	movw	r30, r24
    4574:	f8 96       	adiw	r30, 0x38	; 56
    4576:	11 82       	std	Z+1, r1	; 0x01
    4578:	89 81       	ldd	r24, Y+1	; 0x01
    457a:	9a 81       	ldd	r25, Y+2	; 0x02
    457c:	fc 01       	movw	r30, r24
    457e:	f8 96       	adiw	r30, 0x38	; 56
    4580:	12 82       	std	Z+2, r1	; 0x02
    4582:	89 81       	ldd	r24, Y+1	; 0x01
    4584:	9a 81       	ldd	r25, Y+2	; 0x02
    4586:	fc 01       	movw	r30, r24
    4588:	f8 96       	adiw	r30, 0x38	; 56
    458a:	13 82       	std	Z+3, r1	; 0x03
    458c:	89 81       	ldd	r24, Y+1	; 0x01
    458e:	9a 81       	ldd	r25, Y+2	; 0x02
    4590:	fc 01       	movw	r30, r24
    4592:	f8 96       	adiw	r30, 0x38	; 56
    4594:	14 82       	std	Z+4, r1	; 0x04
    4596:	89 81       	ldd	r24, Y+1	; 0x01
    4598:	9a 81       	ldd	r25, Y+2	; 0x02
    459a:	fc 01       	movw	r30, r24
    459c:	f8 96       	adiw	r30, 0x38	; 56
    459e:	15 82       	std	Z+5, r1	; 0x05
    45a0:	89 81       	ldd	r24, Y+1	; 0x01
    45a2:	9a 81       	ldd	r25, Y+2	; 0x02
    45a4:	fc 01       	movw	r30, r24
    45a6:	f8 96       	adiw	r30, 0x38	; 56
    45a8:	16 82       	std	Z+6, r1	; 0x06
    45aa:	89 81       	ldd	r24, Y+1	; 0x01
    45ac:	9a 81       	ldd	r25, Y+2	; 0x02
    45ae:	fc 01       	movw	r30, r24
    45b0:	f8 96       	adiw	r30, 0x38	; 56
    45b2:	17 82       	std	Z+7, r1	; 0x07
    45b4:	0c 94 ae 2b 	jmp	0x575c	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    break;

    /* SKIP to */
    case 'I':
    {
        M[0][0]= 1; M[0][1]= 1; M[0][2]= 1; M[0][3]= 1; M[0][4]= 1; M[0][5]= 1; M[0][6]= 1; M[0][7]= 1;
    45b8:	e9 81       	ldd	r30, Y+1	; 0x01
    45ba:	fa 81       	ldd	r31, Y+2	; 0x02
    45bc:	81 e0       	ldi	r24, 0x01	; 1
    45be:	80 83       	st	Z, r24
    45c0:	e9 81       	ldd	r30, Y+1	; 0x01
    45c2:	fa 81       	ldd	r31, Y+2	; 0x02
    45c4:	81 e0       	ldi	r24, 0x01	; 1
    45c6:	81 83       	std	Z+1, r24	; 0x01
    45c8:	e9 81       	ldd	r30, Y+1	; 0x01
    45ca:	fa 81       	ldd	r31, Y+2	; 0x02
    45cc:	81 e0       	ldi	r24, 0x01	; 1
    45ce:	82 83       	std	Z+2, r24	; 0x02
    45d0:	e9 81       	ldd	r30, Y+1	; 0x01
    45d2:	fa 81       	ldd	r31, Y+2	; 0x02
    45d4:	81 e0       	ldi	r24, 0x01	; 1
    45d6:	83 83       	std	Z+3, r24	; 0x03
    45d8:	e9 81       	ldd	r30, Y+1	; 0x01
    45da:	fa 81       	ldd	r31, Y+2	; 0x02
    45dc:	81 e0       	ldi	r24, 0x01	; 1
    45de:	84 83       	std	Z+4, r24	; 0x04
    45e0:	e9 81       	ldd	r30, Y+1	; 0x01
    45e2:	fa 81       	ldd	r31, Y+2	; 0x02
    45e4:	81 e0       	ldi	r24, 0x01	; 1
    45e6:	85 83       	std	Z+5, r24	; 0x05
    45e8:	e9 81       	ldd	r30, Y+1	; 0x01
    45ea:	fa 81       	ldd	r31, Y+2	; 0x02
    45ec:	81 e0       	ldi	r24, 0x01	; 1
    45ee:	86 83       	std	Z+6, r24	; 0x06
    45f0:	e9 81       	ldd	r30, Y+1	; 0x01
    45f2:	fa 81       	ldd	r31, Y+2	; 0x02
    45f4:	81 e0       	ldi	r24, 0x01	; 1
    45f6:	87 83       	std	Z+7, r24	; 0x07
        M[1][0]= 0; M[1][1]= 0; M[1][2]= 0; M[1][3]= 1; M[1][4]= 1; M[1][5]= 0; M[1][6]= 0; M[1][7]= 0;
    45f8:	89 81       	ldd	r24, Y+1	; 0x01
    45fa:	9a 81       	ldd	r25, Y+2	; 0x02
    45fc:	fc 01       	movw	r30, r24
    45fe:	38 96       	adiw	r30, 0x08	; 8
    4600:	10 82       	st	Z, r1
    4602:	89 81       	ldd	r24, Y+1	; 0x01
    4604:	9a 81       	ldd	r25, Y+2	; 0x02
    4606:	fc 01       	movw	r30, r24
    4608:	38 96       	adiw	r30, 0x08	; 8
    460a:	11 82       	std	Z+1, r1	; 0x01
    460c:	89 81       	ldd	r24, Y+1	; 0x01
    460e:	9a 81       	ldd	r25, Y+2	; 0x02
    4610:	fc 01       	movw	r30, r24
    4612:	38 96       	adiw	r30, 0x08	; 8
    4614:	12 82       	std	Z+2, r1	; 0x02
    4616:	89 81       	ldd	r24, Y+1	; 0x01
    4618:	9a 81       	ldd	r25, Y+2	; 0x02
    461a:	fc 01       	movw	r30, r24
    461c:	38 96       	adiw	r30, 0x08	; 8
    461e:	81 e0       	ldi	r24, 0x01	; 1
    4620:	83 83       	std	Z+3, r24	; 0x03
    4622:	89 81       	ldd	r24, Y+1	; 0x01
    4624:	9a 81       	ldd	r25, Y+2	; 0x02
    4626:	fc 01       	movw	r30, r24
    4628:	38 96       	adiw	r30, 0x08	; 8
    462a:	81 e0       	ldi	r24, 0x01	; 1
    462c:	84 83       	std	Z+4, r24	; 0x04
    462e:	89 81       	ldd	r24, Y+1	; 0x01
    4630:	9a 81       	ldd	r25, Y+2	; 0x02
    4632:	fc 01       	movw	r30, r24
    4634:	38 96       	adiw	r30, 0x08	; 8
    4636:	15 82       	std	Z+5, r1	; 0x05
    4638:	89 81       	ldd	r24, Y+1	; 0x01
    463a:	9a 81       	ldd	r25, Y+2	; 0x02
    463c:	fc 01       	movw	r30, r24
    463e:	38 96       	adiw	r30, 0x08	; 8
    4640:	16 82       	std	Z+6, r1	; 0x06
    4642:	89 81       	ldd	r24, Y+1	; 0x01
    4644:	9a 81       	ldd	r25, Y+2	; 0x02
    4646:	fc 01       	movw	r30, r24
    4648:	38 96       	adiw	r30, 0x08	; 8
    464a:	17 82       	std	Z+7, r1	; 0x07
        M[2][0]= 0; M[2][1]= 0; M[2][2]= 0; M[2][3]= 1; M[2][4]= 1; M[2][5]= 0; M[2][6]= 0; M[2][7]= 0;
    464c:	89 81       	ldd	r24, Y+1	; 0x01
    464e:	9a 81       	ldd	r25, Y+2	; 0x02
    4650:	fc 01       	movw	r30, r24
    4652:	70 96       	adiw	r30, 0x10	; 16
    4654:	10 82       	st	Z, r1
    4656:	89 81       	ldd	r24, Y+1	; 0x01
    4658:	9a 81       	ldd	r25, Y+2	; 0x02
    465a:	fc 01       	movw	r30, r24
    465c:	70 96       	adiw	r30, 0x10	; 16
    465e:	11 82       	std	Z+1, r1	; 0x01
    4660:	89 81       	ldd	r24, Y+1	; 0x01
    4662:	9a 81       	ldd	r25, Y+2	; 0x02
    4664:	fc 01       	movw	r30, r24
    4666:	70 96       	adiw	r30, 0x10	; 16
    4668:	12 82       	std	Z+2, r1	; 0x02
    466a:	89 81       	ldd	r24, Y+1	; 0x01
    466c:	9a 81       	ldd	r25, Y+2	; 0x02
    466e:	fc 01       	movw	r30, r24
    4670:	70 96       	adiw	r30, 0x10	; 16
    4672:	81 e0       	ldi	r24, 0x01	; 1
    4674:	83 83       	std	Z+3, r24	; 0x03
    4676:	89 81       	ldd	r24, Y+1	; 0x01
    4678:	9a 81       	ldd	r25, Y+2	; 0x02
    467a:	fc 01       	movw	r30, r24
    467c:	70 96       	adiw	r30, 0x10	; 16
    467e:	81 e0       	ldi	r24, 0x01	; 1
    4680:	84 83       	std	Z+4, r24	; 0x04
    4682:	89 81       	ldd	r24, Y+1	; 0x01
    4684:	9a 81       	ldd	r25, Y+2	; 0x02
    4686:	fc 01       	movw	r30, r24
    4688:	70 96       	adiw	r30, 0x10	; 16
    468a:	15 82       	std	Z+5, r1	; 0x05
    468c:	89 81       	ldd	r24, Y+1	; 0x01
    468e:	9a 81       	ldd	r25, Y+2	; 0x02
    4690:	fc 01       	movw	r30, r24
    4692:	70 96       	adiw	r30, 0x10	; 16
    4694:	16 82       	std	Z+6, r1	; 0x06
    4696:	89 81       	ldd	r24, Y+1	; 0x01
    4698:	9a 81       	ldd	r25, Y+2	; 0x02
    469a:	fc 01       	movw	r30, r24
    469c:	70 96       	adiw	r30, 0x10	; 16
    469e:	17 82       	std	Z+7, r1	; 0x07
        M[3][0]= 0; M[3][1]= 0; M[3][2]= 0; M[3][3]= 1; M[3][4]= 1; M[3][5]= 0; M[3][6]= 0; M[3][7]= 0;
    46a0:	89 81       	ldd	r24, Y+1	; 0x01
    46a2:	9a 81       	ldd	r25, Y+2	; 0x02
    46a4:	fc 01       	movw	r30, r24
    46a6:	78 96       	adiw	r30, 0x18	; 24
    46a8:	10 82       	st	Z, r1
    46aa:	89 81       	ldd	r24, Y+1	; 0x01
    46ac:	9a 81       	ldd	r25, Y+2	; 0x02
    46ae:	fc 01       	movw	r30, r24
    46b0:	78 96       	adiw	r30, 0x18	; 24
    46b2:	11 82       	std	Z+1, r1	; 0x01
    46b4:	89 81       	ldd	r24, Y+1	; 0x01
    46b6:	9a 81       	ldd	r25, Y+2	; 0x02
    46b8:	fc 01       	movw	r30, r24
    46ba:	78 96       	adiw	r30, 0x18	; 24
    46bc:	12 82       	std	Z+2, r1	; 0x02
    46be:	89 81       	ldd	r24, Y+1	; 0x01
    46c0:	9a 81       	ldd	r25, Y+2	; 0x02
    46c2:	fc 01       	movw	r30, r24
    46c4:	78 96       	adiw	r30, 0x18	; 24
    46c6:	81 e0       	ldi	r24, 0x01	; 1
    46c8:	83 83       	std	Z+3, r24	; 0x03
    46ca:	89 81       	ldd	r24, Y+1	; 0x01
    46cc:	9a 81       	ldd	r25, Y+2	; 0x02
    46ce:	fc 01       	movw	r30, r24
    46d0:	78 96       	adiw	r30, 0x18	; 24
    46d2:	81 e0       	ldi	r24, 0x01	; 1
    46d4:	84 83       	std	Z+4, r24	; 0x04
    46d6:	89 81       	ldd	r24, Y+1	; 0x01
    46d8:	9a 81       	ldd	r25, Y+2	; 0x02
    46da:	fc 01       	movw	r30, r24
    46dc:	78 96       	adiw	r30, 0x18	; 24
    46de:	15 82       	std	Z+5, r1	; 0x05
    46e0:	89 81       	ldd	r24, Y+1	; 0x01
    46e2:	9a 81       	ldd	r25, Y+2	; 0x02
    46e4:	fc 01       	movw	r30, r24
    46e6:	78 96       	adiw	r30, 0x18	; 24
    46e8:	16 82       	std	Z+6, r1	; 0x06
    46ea:	89 81       	ldd	r24, Y+1	; 0x01
    46ec:	9a 81       	ldd	r25, Y+2	; 0x02
    46ee:	fc 01       	movw	r30, r24
    46f0:	78 96       	adiw	r30, 0x18	; 24
    46f2:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 0; M[4][1]= 0; M[4][2]= 0; M[4][3]= 1; M[4][4]= 1; M[4][5]= 0; M[4][6]= 0; M[4][7]= 0;
    46f4:	89 81       	ldd	r24, Y+1	; 0x01
    46f6:	9a 81       	ldd	r25, Y+2	; 0x02
    46f8:	fc 01       	movw	r30, r24
    46fa:	b0 96       	adiw	r30, 0x20	; 32
    46fc:	10 82       	st	Z, r1
    46fe:	89 81       	ldd	r24, Y+1	; 0x01
    4700:	9a 81       	ldd	r25, Y+2	; 0x02
    4702:	fc 01       	movw	r30, r24
    4704:	b0 96       	adiw	r30, 0x20	; 32
    4706:	11 82       	std	Z+1, r1	; 0x01
    4708:	89 81       	ldd	r24, Y+1	; 0x01
    470a:	9a 81       	ldd	r25, Y+2	; 0x02
    470c:	fc 01       	movw	r30, r24
    470e:	b0 96       	adiw	r30, 0x20	; 32
    4710:	12 82       	std	Z+2, r1	; 0x02
    4712:	89 81       	ldd	r24, Y+1	; 0x01
    4714:	9a 81       	ldd	r25, Y+2	; 0x02
    4716:	fc 01       	movw	r30, r24
    4718:	b0 96       	adiw	r30, 0x20	; 32
    471a:	81 e0       	ldi	r24, 0x01	; 1
    471c:	83 83       	std	Z+3, r24	; 0x03
    471e:	89 81       	ldd	r24, Y+1	; 0x01
    4720:	9a 81       	ldd	r25, Y+2	; 0x02
    4722:	fc 01       	movw	r30, r24
    4724:	b0 96       	adiw	r30, 0x20	; 32
    4726:	81 e0       	ldi	r24, 0x01	; 1
    4728:	84 83       	std	Z+4, r24	; 0x04
    472a:	89 81       	ldd	r24, Y+1	; 0x01
    472c:	9a 81       	ldd	r25, Y+2	; 0x02
    472e:	fc 01       	movw	r30, r24
    4730:	b0 96       	adiw	r30, 0x20	; 32
    4732:	15 82       	std	Z+5, r1	; 0x05
    4734:	89 81       	ldd	r24, Y+1	; 0x01
    4736:	9a 81       	ldd	r25, Y+2	; 0x02
    4738:	fc 01       	movw	r30, r24
    473a:	b0 96       	adiw	r30, 0x20	; 32
    473c:	16 82       	std	Z+6, r1	; 0x06
    473e:	89 81       	ldd	r24, Y+1	; 0x01
    4740:	9a 81       	ldd	r25, Y+2	; 0x02
    4742:	fc 01       	movw	r30, r24
    4744:	b0 96       	adiw	r30, 0x20	; 32
    4746:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 0; M[5][1]= 0; M[5][2]= 0; M[5][3]= 1; M[5][4]= 1; M[5][5]= 0; M[5][6]= 0; M[5][7]= 0;
    4748:	89 81       	ldd	r24, Y+1	; 0x01
    474a:	9a 81       	ldd	r25, Y+2	; 0x02
    474c:	fc 01       	movw	r30, r24
    474e:	b8 96       	adiw	r30, 0x28	; 40
    4750:	10 82       	st	Z, r1
    4752:	89 81       	ldd	r24, Y+1	; 0x01
    4754:	9a 81       	ldd	r25, Y+2	; 0x02
    4756:	fc 01       	movw	r30, r24
    4758:	b8 96       	adiw	r30, 0x28	; 40
    475a:	11 82       	std	Z+1, r1	; 0x01
    475c:	89 81       	ldd	r24, Y+1	; 0x01
    475e:	9a 81       	ldd	r25, Y+2	; 0x02
    4760:	fc 01       	movw	r30, r24
    4762:	b8 96       	adiw	r30, 0x28	; 40
    4764:	12 82       	std	Z+2, r1	; 0x02
    4766:	89 81       	ldd	r24, Y+1	; 0x01
    4768:	9a 81       	ldd	r25, Y+2	; 0x02
    476a:	fc 01       	movw	r30, r24
    476c:	b8 96       	adiw	r30, 0x28	; 40
    476e:	81 e0       	ldi	r24, 0x01	; 1
    4770:	83 83       	std	Z+3, r24	; 0x03
    4772:	89 81       	ldd	r24, Y+1	; 0x01
    4774:	9a 81       	ldd	r25, Y+2	; 0x02
    4776:	fc 01       	movw	r30, r24
    4778:	b8 96       	adiw	r30, 0x28	; 40
    477a:	81 e0       	ldi	r24, 0x01	; 1
    477c:	84 83       	std	Z+4, r24	; 0x04
    477e:	89 81       	ldd	r24, Y+1	; 0x01
    4780:	9a 81       	ldd	r25, Y+2	; 0x02
    4782:	fc 01       	movw	r30, r24
    4784:	b8 96       	adiw	r30, 0x28	; 40
    4786:	15 82       	std	Z+5, r1	; 0x05
    4788:	89 81       	ldd	r24, Y+1	; 0x01
    478a:	9a 81       	ldd	r25, Y+2	; 0x02
    478c:	fc 01       	movw	r30, r24
    478e:	b8 96       	adiw	r30, 0x28	; 40
    4790:	16 82       	std	Z+6, r1	; 0x06
    4792:	89 81       	ldd	r24, Y+1	; 0x01
    4794:	9a 81       	ldd	r25, Y+2	; 0x02
    4796:	fc 01       	movw	r30, r24
    4798:	b8 96       	adiw	r30, 0x28	; 40
    479a:	17 82       	std	Z+7, r1	; 0x07
        M[6][0]= 0; M[6][1]= 0; M[6][2]= 0; M[6][3]= 1; M[6][4]= 1; M[6][5]= 0; M[6][6]= 0; M[6][7]= 0;
    479c:	89 81       	ldd	r24, Y+1	; 0x01
    479e:	9a 81       	ldd	r25, Y+2	; 0x02
    47a0:	fc 01       	movw	r30, r24
    47a2:	f0 96       	adiw	r30, 0x30	; 48
    47a4:	10 82       	st	Z, r1
    47a6:	89 81       	ldd	r24, Y+1	; 0x01
    47a8:	9a 81       	ldd	r25, Y+2	; 0x02
    47aa:	fc 01       	movw	r30, r24
    47ac:	f0 96       	adiw	r30, 0x30	; 48
    47ae:	11 82       	std	Z+1, r1	; 0x01
    47b0:	89 81       	ldd	r24, Y+1	; 0x01
    47b2:	9a 81       	ldd	r25, Y+2	; 0x02
    47b4:	fc 01       	movw	r30, r24
    47b6:	f0 96       	adiw	r30, 0x30	; 48
    47b8:	12 82       	std	Z+2, r1	; 0x02
    47ba:	89 81       	ldd	r24, Y+1	; 0x01
    47bc:	9a 81       	ldd	r25, Y+2	; 0x02
    47be:	fc 01       	movw	r30, r24
    47c0:	f0 96       	adiw	r30, 0x30	; 48
    47c2:	81 e0       	ldi	r24, 0x01	; 1
    47c4:	83 83       	std	Z+3, r24	; 0x03
    47c6:	89 81       	ldd	r24, Y+1	; 0x01
    47c8:	9a 81       	ldd	r25, Y+2	; 0x02
    47ca:	fc 01       	movw	r30, r24
    47cc:	f0 96       	adiw	r30, 0x30	; 48
    47ce:	81 e0       	ldi	r24, 0x01	; 1
    47d0:	84 83       	std	Z+4, r24	; 0x04
    47d2:	89 81       	ldd	r24, Y+1	; 0x01
    47d4:	9a 81       	ldd	r25, Y+2	; 0x02
    47d6:	fc 01       	movw	r30, r24
    47d8:	f0 96       	adiw	r30, 0x30	; 48
    47da:	15 82       	std	Z+5, r1	; 0x05
    47dc:	89 81       	ldd	r24, Y+1	; 0x01
    47de:	9a 81       	ldd	r25, Y+2	; 0x02
    47e0:	fc 01       	movw	r30, r24
    47e2:	f0 96       	adiw	r30, 0x30	; 48
    47e4:	16 82       	std	Z+6, r1	; 0x06
    47e6:	89 81       	ldd	r24, Y+1	; 0x01
    47e8:	9a 81       	ldd	r25, Y+2	; 0x02
    47ea:	fc 01       	movw	r30, r24
    47ec:	f0 96       	adiw	r30, 0x30	; 48
    47ee:	17 82       	std	Z+7, r1	; 0x07
        M[7][0]= 0; M[7][1]= 1; M[7][2]= 1; M[7][3]= 1; M[7][4]= 1; M[7][5]= 1; M[7][6]= 1; M[7][7]= 0;
    47f0:	89 81       	ldd	r24, Y+1	; 0x01
    47f2:	9a 81       	ldd	r25, Y+2	; 0x02
    47f4:	fc 01       	movw	r30, r24
    47f6:	f8 96       	adiw	r30, 0x38	; 56
    47f8:	10 82       	st	Z, r1
    47fa:	89 81       	ldd	r24, Y+1	; 0x01
    47fc:	9a 81       	ldd	r25, Y+2	; 0x02
    47fe:	fc 01       	movw	r30, r24
    4800:	f8 96       	adiw	r30, 0x38	; 56
    4802:	81 e0       	ldi	r24, 0x01	; 1
    4804:	81 83       	std	Z+1, r24	; 0x01
    4806:	89 81       	ldd	r24, Y+1	; 0x01
    4808:	9a 81       	ldd	r25, Y+2	; 0x02
    480a:	fc 01       	movw	r30, r24
    480c:	f8 96       	adiw	r30, 0x38	; 56
    480e:	81 e0       	ldi	r24, 0x01	; 1
    4810:	82 83       	std	Z+2, r24	; 0x02
    4812:	89 81       	ldd	r24, Y+1	; 0x01
    4814:	9a 81       	ldd	r25, Y+2	; 0x02
    4816:	fc 01       	movw	r30, r24
    4818:	f8 96       	adiw	r30, 0x38	; 56
    481a:	81 e0       	ldi	r24, 0x01	; 1
    481c:	83 83       	std	Z+3, r24	; 0x03
    481e:	89 81       	ldd	r24, Y+1	; 0x01
    4820:	9a 81       	ldd	r25, Y+2	; 0x02
    4822:	fc 01       	movw	r30, r24
    4824:	f8 96       	adiw	r30, 0x38	; 56
    4826:	81 e0       	ldi	r24, 0x01	; 1
    4828:	84 83       	std	Z+4, r24	; 0x04
    482a:	89 81       	ldd	r24, Y+1	; 0x01
    482c:	9a 81       	ldd	r25, Y+2	; 0x02
    482e:	fc 01       	movw	r30, r24
    4830:	f8 96       	adiw	r30, 0x38	; 56
    4832:	81 e0       	ldi	r24, 0x01	; 1
    4834:	85 83       	std	Z+5, r24	; 0x05
    4836:	89 81       	ldd	r24, Y+1	; 0x01
    4838:	9a 81       	ldd	r25, Y+2	; 0x02
    483a:	fc 01       	movw	r30, r24
    483c:	f8 96       	adiw	r30, 0x38	; 56
    483e:	81 e0       	ldi	r24, 0x01	; 1
    4840:	86 83       	std	Z+6, r24	; 0x06
    4842:	89 81       	ldd	r24, Y+1	; 0x01
    4844:	9a 81       	ldd	r25, Y+2	; 0x02
    4846:	fc 01       	movw	r30, r24
    4848:	f8 96       	adiw	r30, 0x38	; 56
    484a:	17 82       	std	Z+7, r1	; 0x07
    484c:	87 c7       	rjmp	.+3854   	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case 'L':
    {
        M[0][0]= 0; M[0][1]= 0; M[0][2]= 1; M[0][3]= 0; M[0][4]= 0; M[0][5]= 0; M[0][6]= 0; M[0][7]= 0;
    484e:	e9 81       	ldd	r30, Y+1	; 0x01
    4850:	fa 81       	ldd	r31, Y+2	; 0x02
    4852:	10 82       	st	Z, r1
    4854:	e9 81       	ldd	r30, Y+1	; 0x01
    4856:	fa 81       	ldd	r31, Y+2	; 0x02
    4858:	11 82       	std	Z+1, r1	; 0x01
    485a:	e9 81       	ldd	r30, Y+1	; 0x01
    485c:	fa 81       	ldd	r31, Y+2	; 0x02
    485e:	81 e0       	ldi	r24, 0x01	; 1
    4860:	82 83       	std	Z+2, r24	; 0x02
    4862:	e9 81       	ldd	r30, Y+1	; 0x01
    4864:	fa 81       	ldd	r31, Y+2	; 0x02
    4866:	13 82       	std	Z+3, r1	; 0x03
    4868:	e9 81       	ldd	r30, Y+1	; 0x01
    486a:	fa 81       	ldd	r31, Y+2	; 0x02
    486c:	14 82       	std	Z+4, r1	; 0x04
    486e:	e9 81       	ldd	r30, Y+1	; 0x01
    4870:	fa 81       	ldd	r31, Y+2	; 0x02
    4872:	15 82       	std	Z+5, r1	; 0x05
    4874:	e9 81       	ldd	r30, Y+1	; 0x01
    4876:	fa 81       	ldd	r31, Y+2	; 0x02
    4878:	16 82       	std	Z+6, r1	; 0x06
    487a:	e9 81       	ldd	r30, Y+1	; 0x01
    487c:	fa 81       	ldd	r31, Y+2	; 0x02
    487e:	17 82       	std	Z+7, r1	; 0x07
        M[1][0]= 0; M[1][1]= 0; M[1][2]= 1; M[1][3]= 0; M[1][4]= 0; M[1][5]= 0; M[1][6]= 0; M[1][7]= 0;
    4880:	89 81       	ldd	r24, Y+1	; 0x01
    4882:	9a 81       	ldd	r25, Y+2	; 0x02
    4884:	fc 01       	movw	r30, r24
    4886:	38 96       	adiw	r30, 0x08	; 8
    4888:	10 82       	st	Z, r1
    488a:	89 81       	ldd	r24, Y+1	; 0x01
    488c:	9a 81       	ldd	r25, Y+2	; 0x02
    488e:	fc 01       	movw	r30, r24
    4890:	38 96       	adiw	r30, 0x08	; 8
    4892:	11 82       	std	Z+1, r1	; 0x01
    4894:	89 81       	ldd	r24, Y+1	; 0x01
    4896:	9a 81       	ldd	r25, Y+2	; 0x02
    4898:	fc 01       	movw	r30, r24
    489a:	38 96       	adiw	r30, 0x08	; 8
    489c:	81 e0       	ldi	r24, 0x01	; 1
    489e:	82 83       	std	Z+2, r24	; 0x02
    48a0:	89 81       	ldd	r24, Y+1	; 0x01
    48a2:	9a 81       	ldd	r25, Y+2	; 0x02
    48a4:	fc 01       	movw	r30, r24
    48a6:	38 96       	adiw	r30, 0x08	; 8
    48a8:	13 82       	std	Z+3, r1	; 0x03
    48aa:	89 81       	ldd	r24, Y+1	; 0x01
    48ac:	9a 81       	ldd	r25, Y+2	; 0x02
    48ae:	fc 01       	movw	r30, r24
    48b0:	38 96       	adiw	r30, 0x08	; 8
    48b2:	14 82       	std	Z+4, r1	; 0x04
    48b4:	89 81       	ldd	r24, Y+1	; 0x01
    48b6:	9a 81       	ldd	r25, Y+2	; 0x02
    48b8:	fc 01       	movw	r30, r24
    48ba:	38 96       	adiw	r30, 0x08	; 8
    48bc:	15 82       	std	Z+5, r1	; 0x05
    48be:	89 81       	ldd	r24, Y+1	; 0x01
    48c0:	9a 81       	ldd	r25, Y+2	; 0x02
    48c2:	fc 01       	movw	r30, r24
    48c4:	38 96       	adiw	r30, 0x08	; 8
    48c6:	16 82       	std	Z+6, r1	; 0x06
    48c8:	89 81       	ldd	r24, Y+1	; 0x01
    48ca:	9a 81       	ldd	r25, Y+2	; 0x02
    48cc:	fc 01       	movw	r30, r24
    48ce:	38 96       	adiw	r30, 0x08	; 8
    48d0:	17 82       	std	Z+7, r1	; 0x07
        M[2][0]= 0; M[2][1]= 0; M[2][2]= 1; M[2][3]= 0; M[2][4]= 0; M[2][5]= 0; M[2][6]= 0; M[2][7]= 0;
    48d2:	89 81       	ldd	r24, Y+1	; 0x01
    48d4:	9a 81       	ldd	r25, Y+2	; 0x02
    48d6:	fc 01       	movw	r30, r24
    48d8:	70 96       	adiw	r30, 0x10	; 16
    48da:	10 82       	st	Z, r1
    48dc:	89 81       	ldd	r24, Y+1	; 0x01
    48de:	9a 81       	ldd	r25, Y+2	; 0x02
    48e0:	fc 01       	movw	r30, r24
    48e2:	70 96       	adiw	r30, 0x10	; 16
    48e4:	11 82       	std	Z+1, r1	; 0x01
    48e6:	89 81       	ldd	r24, Y+1	; 0x01
    48e8:	9a 81       	ldd	r25, Y+2	; 0x02
    48ea:	fc 01       	movw	r30, r24
    48ec:	70 96       	adiw	r30, 0x10	; 16
    48ee:	81 e0       	ldi	r24, 0x01	; 1
    48f0:	82 83       	std	Z+2, r24	; 0x02
    48f2:	89 81       	ldd	r24, Y+1	; 0x01
    48f4:	9a 81       	ldd	r25, Y+2	; 0x02
    48f6:	fc 01       	movw	r30, r24
    48f8:	70 96       	adiw	r30, 0x10	; 16
    48fa:	13 82       	std	Z+3, r1	; 0x03
    48fc:	89 81       	ldd	r24, Y+1	; 0x01
    48fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4900:	fc 01       	movw	r30, r24
    4902:	70 96       	adiw	r30, 0x10	; 16
    4904:	14 82       	std	Z+4, r1	; 0x04
    4906:	89 81       	ldd	r24, Y+1	; 0x01
    4908:	9a 81       	ldd	r25, Y+2	; 0x02
    490a:	fc 01       	movw	r30, r24
    490c:	70 96       	adiw	r30, 0x10	; 16
    490e:	15 82       	std	Z+5, r1	; 0x05
    4910:	89 81       	ldd	r24, Y+1	; 0x01
    4912:	9a 81       	ldd	r25, Y+2	; 0x02
    4914:	fc 01       	movw	r30, r24
    4916:	70 96       	adiw	r30, 0x10	; 16
    4918:	16 82       	std	Z+6, r1	; 0x06
    491a:	89 81       	ldd	r24, Y+1	; 0x01
    491c:	9a 81       	ldd	r25, Y+2	; 0x02
    491e:	fc 01       	movw	r30, r24
    4920:	70 96       	adiw	r30, 0x10	; 16
    4922:	17 82       	std	Z+7, r1	; 0x07
        M[3][0]= 0; M[3][1]= 0; M[3][2]= 1; M[3][3]= 0; M[3][4]= 0; M[3][5]= 0; M[3][6]= 0; M[3][7]= 0;
    4924:	89 81       	ldd	r24, Y+1	; 0x01
    4926:	9a 81       	ldd	r25, Y+2	; 0x02
    4928:	fc 01       	movw	r30, r24
    492a:	78 96       	adiw	r30, 0x18	; 24
    492c:	10 82       	st	Z, r1
    492e:	89 81       	ldd	r24, Y+1	; 0x01
    4930:	9a 81       	ldd	r25, Y+2	; 0x02
    4932:	fc 01       	movw	r30, r24
    4934:	78 96       	adiw	r30, 0x18	; 24
    4936:	11 82       	std	Z+1, r1	; 0x01
    4938:	89 81       	ldd	r24, Y+1	; 0x01
    493a:	9a 81       	ldd	r25, Y+2	; 0x02
    493c:	fc 01       	movw	r30, r24
    493e:	78 96       	adiw	r30, 0x18	; 24
    4940:	81 e0       	ldi	r24, 0x01	; 1
    4942:	82 83       	std	Z+2, r24	; 0x02
    4944:	89 81       	ldd	r24, Y+1	; 0x01
    4946:	9a 81       	ldd	r25, Y+2	; 0x02
    4948:	fc 01       	movw	r30, r24
    494a:	78 96       	adiw	r30, 0x18	; 24
    494c:	13 82       	std	Z+3, r1	; 0x03
    494e:	89 81       	ldd	r24, Y+1	; 0x01
    4950:	9a 81       	ldd	r25, Y+2	; 0x02
    4952:	fc 01       	movw	r30, r24
    4954:	78 96       	adiw	r30, 0x18	; 24
    4956:	14 82       	std	Z+4, r1	; 0x04
    4958:	89 81       	ldd	r24, Y+1	; 0x01
    495a:	9a 81       	ldd	r25, Y+2	; 0x02
    495c:	fc 01       	movw	r30, r24
    495e:	78 96       	adiw	r30, 0x18	; 24
    4960:	15 82       	std	Z+5, r1	; 0x05
    4962:	89 81       	ldd	r24, Y+1	; 0x01
    4964:	9a 81       	ldd	r25, Y+2	; 0x02
    4966:	fc 01       	movw	r30, r24
    4968:	78 96       	adiw	r30, 0x18	; 24
    496a:	16 82       	std	Z+6, r1	; 0x06
    496c:	89 81       	ldd	r24, Y+1	; 0x01
    496e:	9a 81       	ldd	r25, Y+2	; 0x02
    4970:	fc 01       	movw	r30, r24
    4972:	78 96       	adiw	r30, 0x18	; 24
    4974:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 0; M[4][1]= 0; M[4][2]= 1; M[4][3]= 0; M[4][4]= 0; M[4][5]= 0; M[4][6]= 0; M[4][7]= 0;
    4976:	89 81       	ldd	r24, Y+1	; 0x01
    4978:	9a 81       	ldd	r25, Y+2	; 0x02
    497a:	fc 01       	movw	r30, r24
    497c:	b0 96       	adiw	r30, 0x20	; 32
    497e:	10 82       	st	Z, r1
    4980:	89 81       	ldd	r24, Y+1	; 0x01
    4982:	9a 81       	ldd	r25, Y+2	; 0x02
    4984:	fc 01       	movw	r30, r24
    4986:	b0 96       	adiw	r30, 0x20	; 32
    4988:	11 82       	std	Z+1, r1	; 0x01
    498a:	89 81       	ldd	r24, Y+1	; 0x01
    498c:	9a 81       	ldd	r25, Y+2	; 0x02
    498e:	fc 01       	movw	r30, r24
    4990:	b0 96       	adiw	r30, 0x20	; 32
    4992:	81 e0       	ldi	r24, 0x01	; 1
    4994:	82 83       	std	Z+2, r24	; 0x02
    4996:	89 81       	ldd	r24, Y+1	; 0x01
    4998:	9a 81       	ldd	r25, Y+2	; 0x02
    499a:	fc 01       	movw	r30, r24
    499c:	b0 96       	adiw	r30, 0x20	; 32
    499e:	13 82       	std	Z+3, r1	; 0x03
    49a0:	89 81       	ldd	r24, Y+1	; 0x01
    49a2:	9a 81       	ldd	r25, Y+2	; 0x02
    49a4:	fc 01       	movw	r30, r24
    49a6:	b0 96       	adiw	r30, 0x20	; 32
    49a8:	14 82       	std	Z+4, r1	; 0x04
    49aa:	89 81       	ldd	r24, Y+1	; 0x01
    49ac:	9a 81       	ldd	r25, Y+2	; 0x02
    49ae:	fc 01       	movw	r30, r24
    49b0:	b0 96       	adiw	r30, 0x20	; 32
    49b2:	15 82       	std	Z+5, r1	; 0x05
    49b4:	89 81       	ldd	r24, Y+1	; 0x01
    49b6:	9a 81       	ldd	r25, Y+2	; 0x02
    49b8:	fc 01       	movw	r30, r24
    49ba:	b0 96       	adiw	r30, 0x20	; 32
    49bc:	16 82       	std	Z+6, r1	; 0x06
    49be:	89 81       	ldd	r24, Y+1	; 0x01
    49c0:	9a 81       	ldd	r25, Y+2	; 0x02
    49c2:	fc 01       	movw	r30, r24
    49c4:	b0 96       	adiw	r30, 0x20	; 32
    49c6:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 0; M[5][1]= 0; M[5][2]= 1; M[5][3]= 0; M[5][4]= 0; M[5][5]= 0; M[5][6]= 0; M[5][7]= 0;
    49c8:	89 81       	ldd	r24, Y+1	; 0x01
    49ca:	9a 81       	ldd	r25, Y+2	; 0x02
    49cc:	fc 01       	movw	r30, r24
    49ce:	b8 96       	adiw	r30, 0x28	; 40
    49d0:	10 82       	st	Z, r1
    49d2:	89 81       	ldd	r24, Y+1	; 0x01
    49d4:	9a 81       	ldd	r25, Y+2	; 0x02
    49d6:	fc 01       	movw	r30, r24
    49d8:	b8 96       	adiw	r30, 0x28	; 40
    49da:	11 82       	std	Z+1, r1	; 0x01
    49dc:	89 81       	ldd	r24, Y+1	; 0x01
    49de:	9a 81       	ldd	r25, Y+2	; 0x02
    49e0:	fc 01       	movw	r30, r24
    49e2:	b8 96       	adiw	r30, 0x28	; 40
    49e4:	81 e0       	ldi	r24, 0x01	; 1
    49e6:	82 83       	std	Z+2, r24	; 0x02
    49e8:	89 81       	ldd	r24, Y+1	; 0x01
    49ea:	9a 81       	ldd	r25, Y+2	; 0x02
    49ec:	fc 01       	movw	r30, r24
    49ee:	b8 96       	adiw	r30, 0x28	; 40
    49f0:	13 82       	std	Z+3, r1	; 0x03
    49f2:	89 81       	ldd	r24, Y+1	; 0x01
    49f4:	9a 81       	ldd	r25, Y+2	; 0x02
    49f6:	fc 01       	movw	r30, r24
    49f8:	b8 96       	adiw	r30, 0x28	; 40
    49fa:	14 82       	std	Z+4, r1	; 0x04
    49fc:	89 81       	ldd	r24, Y+1	; 0x01
    49fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4a00:	fc 01       	movw	r30, r24
    4a02:	b8 96       	adiw	r30, 0x28	; 40
    4a04:	15 82       	std	Z+5, r1	; 0x05
    4a06:	89 81       	ldd	r24, Y+1	; 0x01
    4a08:	9a 81       	ldd	r25, Y+2	; 0x02
    4a0a:	fc 01       	movw	r30, r24
    4a0c:	b8 96       	adiw	r30, 0x28	; 40
    4a0e:	16 82       	std	Z+6, r1	; 0x06
    4a10:	89 81       	ldd	r24, Y+1	; 0x01
    4a12:	9a 81       	ldd	r25, Y+2	; 0x02
    4a14:	fc 01       	movw	r30, r24
    4a16:	b8 96       	adiw	r30, 0x28	; 40
    4a18:	17 82       	std	Z+7, r1	; 0x07
        M[6][0]= 0; M[6][1]= 0; M[6][2]= 1; M[6][3]= 0; M[6][4]= 0; M[6][5]= 1; M[6][6]= 0; M[6][7]= 0;
    4a1a:	89 81       	ldd	r24, Y+1	; 0x01
    4a1c:	9a 81       	ldd	r25, Y+2	; 0x02
    4a1e:	fc 01       	movw	r30, r24
    4a20:	f0 96       	adiw	r30, 0x30	; 48
    4a22:	10 82       	st	Z, r1
    4a24:	89 81       	ldd	r24, Y+1	; 0x01
    4a26:	9a 81       	ldd	r25, Y+2	; 0x02
    4a28:	fc 01       	movw	r30, r24
    4a2a:	f0 96       	adiw	r30, 0x30	; 48
    4a2c:	11 82       	std	Z+1, r1	; 0x01
    4a2e:	89 81       	ldd	r24, Y+1	; 0x01
    4a30:	9a 81       	ldd	r25, Y+2	; 0x02
    4a32:	fc 01       	movw	r30, r24
    4a34:	f0 96       	adiw	r30, 0x30	; 48
    4a36:	81 e0       	ldi	r24, 0x01	; 1
    4a38:	82 83       	std	Z+2, r24	; 0x02
    4a3a:	89 81       	ldd	r24, Y+1	; 0x01
    4a3c:	9a 81       	ldd	r25, Y+2	; 0x02
    4a3e:	fc 01       	movw	r30, r24
    4a40:	f0 96       	adiw	r30, 0x30	; 48
    4a42:	13 82       	std	Z+3, r1	; 0x03
    4a44:	89 81       	ldd	r24, Y+1	; 0x01
    4a46:	9a 81       	ldd	r25, Y+2	; 0x02
    4a48:	fc 01       	movw	r30, r24
    4a4a:	f0 96       	adiw	r30, 0x30	; 48
    4a4c:	14 82       	std	Z+4, r1	; 0x04
    4a4e:	89 81       	ldd	r24, Y+1	; 0x01
    4a50:	9a 81       	ldd	r25, Y+2	; 0x02
    4a52:	fc 01       	movw	r30, r24
    4a54:	f0 96       	adiw	r30, 0x30	; 48
    4a56:	81 e0       	ldi	r24, 0x01	; 1
    4a58:	85 83       	std	Z+5, r24	; 0x05
    4a5a:	89 81       	ldd	r24, Y+1	; 0x01
    4a5c:	9a 81       	ldd	r25, Y+2	; 0x02
    4a5e:	fc 01       	movw	r30, r24
    4a60:	f0 96       	adiw	r30, 0x30	; 48
    4a62:	16 82       	std	Z+6, r1	; 0x06
    4a64:	89 81       	ldd	r24, Y+1	; 0x01
    4a66:	9a 81       	ldd	r25, Y+2	; 0x02
    4a68:	fc 01       	movw	r30, r24
    4a6a:	f0 96       	adiw	r30, 0x30	; 48
    4a6c:	17 82       	std	Z+7, r1	; 0x07
        M[7][0]= 0; M[7][1]= 0; M[7][2]= 1; M[7][3]= 1; M[7][4]= 1; M[7][5]= 1; M[7][6]= 0; M[7][7]= 0;
    4a6e:	89 81       	ldd	r24, Y+1	; 0x01
    4a70:	9a 81       	ldd	r25, Y+2	; 0x02
    4a72:	fc 01       	movw	r30, r24
    4a74:	f8 96       	adiw	r30, 0x38	; 56
    4a76:	10 82       	st	Z, r1
    4a78:	89 81       	ldd	r24, Y+1	; 0x01
    4a7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4a7c:	fc 01       	movw	r30, r24
    4a7e:	f8 96       	adiw	r30, 0x38	; 56
    4a80:	11 82       	std	Z+1, r1	; 0x01
    4a82:	89 81       	ldd	r24, Y+1	; 0x01
    4a84:	9a 81       	ldd	r25, Y+2	; 0x02
    4a86:	fc 01       	movw	r30, r24
    4a88:	f8 96       	adiw	r30, 0x38	; 56
    4a8a:	81 e0       	ldi	r24, 0x01	; 1
    4a8c:	82 83       	std	Z+2, r24	; 0x02
    4a8e:	89 81       	ldd	r24, Y+1	; 0x01
    4a90:	9a 81       	ldd	r25, Y+2	; 0x02
    4a92:	fc 01       	movw	r30, r24
    4a94:	f8 96       	adiw	r30, 0x38	; 56
    4a96:	81 e0       	ldi	r24, 0x01	; 1
    4a98:	83 83       	std	Z+3, r24	; 0x03
    4a9a:	89 81       	ldd	r24, Y+1	; 0x01
    4a9c:	9a 81       	ldd	r25, Y+2	; 0x02
    4a9e:	fc 01       	movw	r30, r24
    4aa0:	f8 96       	adiw	r30, 0x38	; 56
    4aa2:	81 e0       	ldi	r24, 0x01	; 1
    4aa4:	84 83       	std	Z+4, r24	; 0x04
    4aa6:	89 81       	ldd	r24, Y+1	; 0x01
    4aa8:	9a 81       	ldd	r25, Y+2	; 0x02
    4aaa:	fc 01       	movw	r30, r24
    4aac:	f8 96       	adiw	r30, 0x38	; 56
    4aae:	81 e0       	ldi	r24, 0x01	; 1
    4ab0:	85 83       	std	Z+5, r24	; 0x05
    4ab2:	89 81       	ldd	r24, Y+1	; 0x01
    4ab4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ab6:	fc 01       	movw	r30, r24
    4ab8:	f8 96       	adiw	r30, 0x38	; 56
    4aba:	16 82       	std	Z+6, r1	; 0x06
    4abc:	89 81       	ldd	r24, Y+1	; 0x01
    4abe:	9a 81       	ldd	r25, Y+2	; 0x02
    4ac0:	fc 01       	movw	r30, r24
    4ac2:	f8 96       	adiw	r30, 0x38	; 56
    4ac4:	17 82       	std	Z+7, r1	; 0x07
    4ac6:	4a c6       	rjmp	.+3220   	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case 'M':
    {
        M[0][0]= 1; M[0][1]= 0; M[0][2]= 0; M[0][3]= 0; M[0][4]= 0; M[0][5]= 0; M[0][6]= 0; M[0][7]= 1;
    4ac8:	e9 81       	ldd	r30, Y+1	; 0x01
    4aca:	fa 81       	ldd	r31, Y+2	; 0x02
    4acc:	81 e0       	ldi	r24, 0x01	; 1
    4ace:	80 83       	st	Z, r24
    4ad0:	e9 81       	ldd	r30, Y+1	; 0x01
    4ad2:	fa 81       	ldd	r31, Y+2	; 0x02
    4ad4:	11 82       	std	Z+1, r1	; 0x01
    4ad6:	e9 81       	ldd	r30, Y+1	; 0x01
    4ad8:	fa 81       	ldd	r31, Y+2	; 0x02
    4ada:	12 82       	std	Z+2, r1	; 0x02
    4adc:	e9 81       	ldd	r30, Y+1	; 0x01
    4ade:	fa 81       	ldd	r31, Y+2	; 0x02
    4ae0:	13 82       	std	Z+3, r1	; 0x03
    4ae2:	e9 81       	ldd	r30, Y+1	; 0x01
    4ae4:	fa 81       	ldd	r31, Y+2	; 0x02
    4ae6:	14 82       	std	Z+4, r1	; 0x04
    4ae8:	e9 81       	ldd	r30, Y+1	; 0x01
    4aea:	fa 81       	ldd	r31, Y+2	; 0x02
    4aec:	15 82       	std	Z+5, r1	; 0x05
    4aee:	e9 81       	ldd	r30, Y+1	; 0x01
    4af0:	fa 81       	ldd	r31, Y+2	; 0x02
    4af2:	16 82       	std	Z+6, r1	; 0x06
    4af4:	e9 81       	ldd	r30, Y+1	; 0x01
    4af6:	fa 81       	ldd	r31, Y+2	; 0x02
    4af8:	81 e0       	ldi	r24, 0x01	; 1
    4afa:	87 83       	std	Z+7, r24	; 0x07
        M[1][0]= 1; M[1][1]= 1; M[1][2]= 0; M[1][3]= 0; M[1][4]= 0; M[1][5]= 0; M[1][6]= 1; M[1][7]= 1;
    4afc:	89 81       	ldd	r24, Y+1	; 0x01
    4afe:	9a 81       	ldd	r25, Y+2	; 0x02
    4b00:	fc 01       	movw	r30, r24
    4b02:	38 96       	adiw	r30, 0x08	; 8
    4b04:	81 e0       	ldi	r24, 0x01	; 1
    4b06:	80 83       	st	Z, r24
    4b08:	89 81       	ldd	r24, Y+1	; 0x01
    4b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b0c:	fc 01       	movw	r30, r24
    4b0e:	38 96       	adiw	r30, 0x08	; 8
    4b10:	81 e0       	ldi	r24, 0x01	; 1
    4b12:	81 83       	std	Z+1, r24	; 0x01
    4b14:	89 81       	ldd	r24, Y+1	; 0x01
    4b16:	9a 81       	ldd	r25, Y+2	; 0x02
    4b18:	fc 01       	movw	r30, r24
    4b1a:	38 96       	adiw	r30, 0x08	; 8
    4b1c:	12 82       	std	Z+2, r1	; 0x02
    4b1e:	89 81       	ldd	r24, Y+1	; 0x01
    4b20:	9a 81       	ldd	r25, Y+2	; 0x02
    4b22:	fc 01       	movw	r30, r24
    4b24:	38 96       	adiw	r30, 0x08	; 8
    4b26:	13 82       	std	Z+3, r1	; 0x03
    4b28:	89 81       	ldd	r24, Y+1	; 0x01
    4b2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b2c:	fc 01       	movw	r30, r24
    4b2e:	38 96       	adiw	r30, 0x08	; 8
    4b30:	14 82       	std	Z+4, r1	; 0x04
    4b32:	89 81       	ldd	r24, Y+1	; 0x01
    4b34:	9a 81       	ldd	r25, Y+2	; 0x02
    4b36:	fc 01       	movw	r30, r24
    4b38:	38 96       	adiw	r30, 0x08	; 8
    4b3a:	15 82       	std	Z+5, r1	; 0x05
    4b3c:	89 81       	ldd	r24, Y+1	; 0x01
    4b3e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b40:	fc 01       	movw	r30, r24
    4b42:	38 96       	adiw	r30, 0x08	; 8
    4b44:	81 e0       	ldi	r24, 0x01	; 1
    4b46:	86 83       	std	Z+6, r24	; 0x06
    4b48:	89 81       	ldd	r24, Y+1	; 0x01
    4b4a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b4c:	fc 01       	movw	r30, r24
    4b4e:	38 96       	adiw	r30, 0x08	; 8
    4b50:	81 e0       	ldi	r24, 0x01	; 1
    4b52:	87 83       	std	Z+7, r24	; 0x07
        M[2][0]= 1; M[2][1]= 0; M[2][2]= 1; M[2][3]= 0; M[2][4]= 0; M[2][5]= 1; M[2][6]= 0; M[2][7]= 1;
    4b54:	89 81       	ldd	r24, Y+1	; 0x01
    4b56:	9a 81       	ldd	r25, Y+2	; 0x02
    4b58:	fc 01       	movw	r30, r24
    4b5a:	70 96       	adiw	r30, 0x10	; 16
    4b5c:	81 e0       	ldi	r24, 0x01	; 1
    4b5e:	80 83       	st	Z, r24
    4b60:	89 81       	ldd	r24, Y+1	; 0x01
    4b62:	9a 81       	ldd	r25, Y+2	; 0x02
    4b64:	fc 01       	movw	r30, r24
    4b66:	70 96       	adiw	r30, 0x10	; 16
    4b68:	11 82       	std	Z+1, r1	; 0x01
    4b6a:	89 81       	ldd	r24, Y+1	; 0x01
    4b6c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b6e:	fc 01       	movw	r30, r24
    4b70:	70 96       	adiw	r30, 0x10	; 16
    4b72:	81 e0       	ldi	r24, 0x01	; 1
    4b74:	82 83       	std	Z+2, r24	; 0x02
    4b76:	89 81       	ldd	r24, Y+1	; 0x01
    4b78:	9a 81       	ldd	r25, Y+2	; 0x02
    4b7a:	fc 01       	movw	r30, r24
    4b7c:	70 96       	adiw	r30, 0x10	; 16
    4b7e:	13 82       	std	Z+3, r1	; 0x03
    4b80:	89 81       	ldd	r24, Y+1	; 0x01
    4b82:	9a 81       	ldd	r25, Y+2	; 0x02
    4b84:	fc 01       	movw	r30, r24
    4b86:	70 96       	adiw	r30, 0x10	; 16
    4b88:	14 82       	std	Z+4, r1	; 0x04
    4b8a:	89 81       	ldd	r24, Y+1	; 0x01
    4b8c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b8e:	fc 01       	movw	r30, r24
    4b90:	70 96       	adiw	r30, 0x10	; 16
    4b92:	81 e0       	ldi	r24, 0x01	; 1
    4b94:	85 83       	std	Z+5, r24	; 0x05
    4b96:	89 81       	ldd	r24, Y+1	; 0x01
    4b98:	9a 81       	ldd	r25, Y+2	; 0x02
    4b9a:	fc 01       	movw	r30, r24
    4b9c:	70 96       	adiw	r30, 0x10	; 16
    4b9e:	16 82       	std	Z+6, r1	; 0x06
    4ba0:	89 81       	ldd	r24, Y+1	; 0x01
    4ba2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ba4:	fc 01       	movw	r30, r24
    4ba6:	70 96       	adiw	r30, 0x10	; 16
    4ba8:	81 e0       	ldi	r24, 0x01	; 1
    4baa:	87 83       	std	Z+7, r24	; 0x07
        M[3][0]= 1; M[3][1]= 0; M[3][2]= 0; M[3][3]= 1; M[3][4]= 1; M[3][5]= 0; M[3][6]= 0; M[3][7]= 1;
    4bac:	89 81       	ldd	r24, Y+1	; 0x01
    4bae:	9a 81       	ldd	r25, Y+2	; 0x02
    4bb0:	fc 01       	movw	r30, r24
    4bb2:	78 96       	adiw	r30, 0x18	; 24
    4bb4:	81 e0       	ldi	r24, 0x01	; 1
    4bb6:	80 83       	st	Z, r24
    4bb8:	89 81       	ldd	r24, Y+1	; 0x01
    4bba:	9a 81       	ldd	r25, Y+2	; 0x02
    4bbc:	fc 01       	movw	r30, r24
    4bbe:	78 96       	adiw	r30, 0x18	; 24
    4bc0:	11 82       	std	Z+1, r1	; 0x01
    4bc2:	89 81       	ldd	r24, Y+1	; 0x01
    4bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    4bc6:	fc 01       	movw	r30, r24
    4bc8:	78 96       	adiw	r30, 0x18	; 24
    4bca:	12 82       	std	Z+2, r1	; 0x02
    4bcc:	89 81       	ldd	r24, Y+1	; 0x01
    4bce:	9a 81       	ldd	r25, Y+2	; 0x02
    4bd0:	fc 01       	movw	r30, r24
    4bd2:	78 96       	adiw	r30, 0x18	; 24
    4bd4:	81 e0       	ldi	r24, 0x01	; 1
    4bd6:	83 83       	std	Z+3, r24	; 0x03
    4bd8:	89 81       	ldd	r24, Y+1	; 0x01
    4bda:	9a 81       	ldd	r25, Y+2	; 0x02
    4bdc:	fc 01       	movw	r30, r24
    4bde:	78 96       	adiw	r30, 0x18	; 24
    4be0:	81 e0       	ldi	r24, 0x01	; 1
    4be2:	84 83       	std	Z+4, r24	; 0x04
    4be4:	89 81       	ldd	r24, Y+1	; 0x01
    4be6:	9a 81       	ldd	r25, Y+2	; 0x02
    4be8:	fc 01       	movw	r30, r24
    4bea:	78 96       	adiw	r30, 0x18	; 24
    4bec:	15 82       	std	Z+5, r1	; 0x05
    4bee:	89 81       	ldd	r24, Y+1	; 0x01
    4bf0:	9a 81       	ldd	r25, Y+2	; 0x02
    4bf2:	fc 01       	movw	r30, r24
    4bf4:	78 96       	adiw	r30, 0x18	; 24
    4bf6:	16 82       	std	Z+6, r1	; 0x06
    4bf8:	89 81       	ldd	r24, Y+1	; 0x01
    4bfa:	9a 81       	ldd	r25, Y+2	; 0x02
    4bfc:	fc 01       	movw	r30, r24
    4bfe:	78 96       	adiw	r30, 0x18	; 24
    4c00:	81 e0       	ldi	r24, 0x01	; 1
    4c02:	87 83       	std	Z+7, r24	; 0x07
        M[4][0]= 1; M[4][1]= 0; M[4][2]= 0; M[4][3]= 0; M[4][4]= 0; M[4][5]= 0; M[4][6]= 0; M[4][7]= 1;
    4c04:	89 81       	ldd	r24, Y+1	; 0x01
    4c06:	9a 81       	ldd	r25, Y+2	; 0x02
    4c08:	fc 01       	movw	r30, r24
    4c0a:	b0 96       	adiw	r30, 0x20	; 32
    4c0c:	81 e0       	ldi	r24, 0x01	; 1
    4c0e:	80 83       	st	Z, r24
    4c10:	89 81       	ldd	r24, Y+1	; 0x01
    4c12:	9a 81       	ldd	r25, Y+2	; 0x02
    4c14:	fc 01       	movw	r30, r24
    4c16:	b0 96       	adiw	r30, 0x20	; 32
    4c18:	11 82       	std	Z+1, r1	; 0x01
    4c1a:	89 81       	ldd	r24, Y+1	; 0x01
    4c1c:	9a 81       	ldd	r25, Y+2	; 0x02
    4c1e:	fc 01       	movw	r30, r24
    4c20:	b0 96       	adiw	r30, 0x20	; 32
    4c22:	12 82       	std	Z+2, r1	; 0x02
    4c24:	89 81       	ldd	r24, Y+1	; 0x01
    4c26:	9a 81       	ldd	r25, Y+2	; 0x02
    4c28:	fc 01       	movw	r30, r24
    4c2a:	b0 96       	adiw	r30, 0x20	; 32
    4c2c:	13 82       	std	Z+3, r1	; 0x03
    4c2e:	89 81       	ldd	r24, Y+1	; 0x01
    4c30:	9a 81       	ldd	r25, Y+2	; 0x02
    4c32:	fc 01       	movw	r30, r24
    4c34:	b0 96       	adiw	r30, 0x20	; 32
    4c36:	14 82       	std	Z+4, r1	; 0x04
    4c38:	89 81       	ldd	r24, Y+1	; 0x01
    4c3a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c3c:	fc 01       	movw	r30, r24
    4c3e:	b0 96       	adiw	r30, 0x20	; 32
    4c40:	15 82       	std	Z+5, r1	; 0x05
    4c42:	89 81       	ldd	r24, Y+1	; 0x01
    4c44:	9a 81       	ldd	r25, Y+2	; 0x02
    4c46:	fc 01       	movw	r30, r24
    4c48:	b0 96       	adiw	r30, 0x20	; 32
    4c4a:	16 82       	std	Z+6, r1	; 0x06
    4c4c:	89 81       	ldd	r24, Y+1	; 0x01
    4c4e:	9a 81       	ldd	r25, Y+2	; 0x02
    4c50:	fc 01       	movw	r30, r24
    4c52:	b0 96       	adiw	r30, 0x20	; 32
    4c54:	81 e0       	ldi	r24, 0x01	; 1
    4c56:	87 83       	std	Z+7, r24	; 0x07
        M[5][0]= 1; M[5][1]= 0; M[5][2]= 0; M[5][3]= 0; M[5][4]= 0; M[5][5]= 0; M[5][6]= 0; M[5][7]= 1;
    4c58:	89 81       	ldd	r24, Y+1	; 0x01
    4c5a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c5c:	fc 01       	movw	r30, r24
    4c5e:	b8 96       	adiw	r30, 0x28	; 40
    4c60:	81 e0       	ldi	r24, 0x01	; 1
    4c62:	80 83       	st	Z, r24
    4c64:	89 81       	ldd	r24, Y+1	; 0x01
    4c66:	9a 81       	ldd	r25, Y+2	; 0x02
    4c68:	fc 01       	movw	r30, r24
    4c6a:	b8 96       	adiw	r30, 0x28	; 40
    4c6c:	11 82       	std	Z+1, r1	; 0x01
    4c6e:	89 81       	ldd	r24, Y+1	; 0x01
    4c70:	9a 81       	ldd	r25, Y+2	; 0x02
    4c72:	fc 01       	movw	r30, r24
    4c74:	b8 96       	adiw	r30, 0x28	; 40
    4c76:	12 82       	std	Z+2, r1	; 0x02
    4c78:	89 81       	ldd	r24, Y+1	; 0x01
    4c7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c7c:	fc 01       	movw	r30, r24
    4c7e:	b8 96       	adiw	r30, 0x28	; 40
    4c80:	13 82       	std	Z+3, r1	; 0x03
    4c82:	89 81       	ldd	r24, Y+1	; 0x01
    4c84:	9a 81       	ldd	r25, Y+2	; 0x02
    4c86:	fc 01       	movw	r30, r24
    4c88:	b8 96       	adiw	r30, 0x28	; 40
    4c8a:	14 82       	std	Z+4, r1	; 0x04
    4c8c:	89 81       	ldd	r24, Y+1	; 0x01
    4c8e:	9a 81       	ldd	r25, Y+2	; 0x02
    4c90:	fc 01       	movw	r30, r24
    4c92:	b8 96       	adiw	r30, 0x28	; 40
    4c94:	15 82       	std	Z+5, r1	; 0x05
    4c96:	89 81       	ldd	r24, Y+1	; 0x01
    4c98:	9a 81       	ldd	r25, Y+2	; 0x02
    4c9a:	fc 01       	movw	r30, r24
    4c9c:	b8 96       	adiw	r30, 0x28	; 40
    4c9e:	16 82       	std	Z+6, r1	; 0x06
    4ca0:	89 81       	ldd	r24, Y+1	; 0x01
    4ca2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ca4:	fc 01       	movw	r30, r24
    4ca6:	b8 96       	adiw	r30, 0x28	; 40
    4ca8:	81 e0       	ldi	r24, 0x01	; 1
    4caa:	87 83       	std	Z+7, r24	; 0x07
        M[6][0]= 1; M[6][1]= 0; M[6][2]= 0; M[6][3]= 0; M[6][4]= 0; M[6][5]= 0; M[6][6]= 0; M[6][7]= 1;
    4cac:	89 81       	ldd	r24, Y+1	; 0x01
    4cae:	9a 81       	ldd	r25, Y+2	; 0x02
    4cb0:	fc 01       	movw	r30, r24
    4cb2:	f0 96       	adiw	r30, 0x30	; 48
    4cb4:	81 e0       	ldi	r24, 0x01	; 1
    4cb6:	80 83       	st	Z, r24
    4cb8:	89 81       	ldd	r24, Y+1	; 0x01
    4cba:	9a 81       	ldd	r25, Y+2	; 0x02
    4cbc:	fc 01       	movw	r30, r24
    4cbe:	f0 96       	adiw	r30, 0x30	; 48
    4cc0:	11 82       	std	Z+1, r1	; 0x01
    4cc2:	89 81       	ldd	r24, Y+1	; 0x01
    4cc4:	9a 81       	ldd	r25, Y+2	; 0x02
    4cc6:	fc 01       	movw	r30, r24
    4cc8:	f0 96       	adiw	r30, 0x30	; 48
    4cca:	12 82       	std	Z+2, r1	; 0x02
    4ccc:	89 81       	ldd	r24, Y+1	; 0x01
    4cce:	9a 81       	ldd	r25, Y+2	; 0x02
    4cd0:	fc 01       	movw	r30, r24
    4cd2:	f0 96       	adiw	r30, 0x30	; 48
    4cd4:	13 82       	std	Z+3, r1	; 0x03
    4cd6:	89 81       	ldd	r24, Y+1	; 0x01
    4cd8:	9a 81       	ldd	r25, Y+2	; 0x02
    4cda:	fc 01       	movw	r30, r24
    4cdc:	f0 96       	adiw	r30, 0x30	; 48
    4cde:	14 82       	std	Z+4, r1	; 0x04
    4ce0:	89 81       	ldd	r24, Y+1	; 0x01
    4ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ce4:	fc 01       	movw	r30, r24
    4ce6:	f0 96       	adiw	r30, 0x30	; 48
    4ce8:	15 82       	std	Z+5, r1	; 0x05
    4cea:	89 81       	ldd	r24, Y+1	; 0x01
    4cec:	9a 81       	ldd	r25, Y+2	; 0x02
    4cee:	fc 01       	movw	r30, r24
    4cf0:	f0 96       	adiw	r30, 0x30	; 48
    4cf2:	16 82       	std	Z+6, r1	; 0x06
    4cf4:	89 81       	ldd	r24, Y+1	; 0x01
    4cf6:	9a 81       	ldd	r25, Y+2	; 0x02
    4cf8:	fc 01       	movw	r30, r24
    4cfa:	f0 96       	adiw	r30, 0x30	; 48
    4cfc:	81 e0       	ldi	r24, 0x01	; 1
    4cfe:	87 83       	std	Z+7, r24	; 0x07
        M[7][0]= 1; M[7][1]= 0; M[7][2]= 0; M[7][3]= 0; M[7][4]= 0; M[7][5]= 0; M[7][6]= 0; M[7][7]= 1;
    4d00:	89 81       	ldd	r24, Y+1	; 0x01
    4d02:	9a 81       	ldd	r25, Y+2	; 0x02
    4d04:	fc 01       	movw	r30, r24
    4d06:	f8 96       	adiw	r30, 0x38	; 56
    4d08:	81 e0       	ldi	r24, 0x01	; 1
    4d0a:	80 83       	st	Z, r24
    4d0c:	89 81       	ldd	r24, Y+1	; 0x01
    4d0e:	9a 81       	ldd	r25, Y+2	; 0x02
    4d10:	fc 01       	movw	r30, r24
    4d12:	f8 96       	adiw	r30, 0x38	; 56
    4d14:	11 82       	std	Z+1, r1	; 0x01
    4d16:	89 81       	ldd	r24, Y+1	; 0x01
    4d18:	9a 81       	ldd	r25, Y+2	; 0x02
    4d1a:	fc 01       	movw	r30, r24
    4d1c:	f8 96       	adiw	r30, 0x38	; 56
    4d1e:	12 82       	std	Z+2, r1	; 0x02
    4d20:	89 81       	ldd	r24, Y+1	; 0x01
    4d22:	9a 81       	ldd	r25, Y+2	; 0x02
    4d24:	fc 01       	movw	r30, r24
    4d26:	f8 96       	adiw	r30, 0x38	; 56
    4d28:	13 82       	std	Z+3, r1	; 0x03
    4d2a:	89 81       	ldd	r24, Y+1	; 0x01
    4d2c:	9a 81       	ldd	r25, Y+2	; 0x02
    4d2e:	fc 01       	movw	r30, r24
    4d30:	f8 96       	adiw	r30, 0x38	; 56
    4d32:	14 82       	std	Z+4, r1	; 0x04
    4d34:	89 81       	ldd	r24, Y+1	; 0x01
    4d36:	9a 81       	ldd	r25, Y+2	; 0x02
    4d38:	fc 01       	movw	r30, r24
    4d3a:	f8 96       	adiw	r30, 0x38	; 56
    4d3c:	15 82       	std	Z+5, r1	; 0x05
    4d3e:	89 81       	ldd	r24, Y+1	; 0x01
    4d40:	9a 81       	ldd	r25, Y+2	; 0x02
    4d42:	fc 01       	movw	r30, r24
    4d44:	f8 96       	adiw	r30, 0x38	; 56
    4d46:	16 82       	std	Z+6, r1	; 0x06
    4d48:	89 81       	ldd	r24, Y+1	; 0x01
    4d4a:	9a 81       	ldd	r25, Y+2	; 0x02
    4d4c:	fc 01       	movw	r30, r24
    4d4e:	f8 96       	adiw	r30, 0x38	; 56
    4d50:	81 e0       	ldi	r24, 0x01	; 1
    4d52:	87 83       	std	Z+7, r24	; 0x07
    4d54:	03 c5       	rjmp	.+2566   	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case 'N':
    {
        M[0][0]= 1; M[0][1]= 0; M[0][2]= 0; M[0][3]= 0; M[0][4]= 0; M[0][5]= 0; M[0][6]= 0; M[0][7]= 1;
    4d56:	e9 81       	ldd	r30, Y+1	; 0x01
    4d58:	fa 81       	ldd	r31, Y+2	; 0x02
    4d5a:	81 e0       	ldi	r24, 0x01	; 1
    4d5c:	80 83       	st	Z, r24
    4d5e:	e9 81       	ldd	r30, Y+1	; 0x01
    4d60:	fa 81       	ldd	r31, Y+2	; 0x02
    4d62:	11 82       	std	Z+1, r1	; 0x01
    4d64:	e9 81       	ldd	r30, Y+1	; 0x01
    4d66:	fa 81       	ldd	r31, Y+2	; 0x02
    4d68:	12 82       	std	Z+2, r1	; 0x02
    4d6a:	e9 81       	ldd	r30, Y+1	; 0x01
    4d6c:	fa 81       	ldd	r31, Y+2	; 0x02
    4d6e:	13 82       	std	Z+3, r1	; 0x03
    4d70:	e9 81       	ldd	r30, Y+1	; 0x01
    4d72:	fa 81       	ldd	r31, Y+2	; 0x02
    4d74:	14 82       	std	Z+4, r1	; 0x04
    4d76:	e9 81       	ldd	r30, Y+1	; 0x01
    4d78:	fa 81       	ldd	r31, Y+2	; 0x02
    4d7a:	15 82       	std	Z+5, r1	; 0x05
    4d7c:	e9 81       	ldd	r30, Y+1	; 0x01
    4d7e:	fa 81       	ldd	r31, Y+2	; 0x02
    4d80:	16 82       	std	Z+6, r1	; 0x06
    4d82:	e9 81       	ldd	r30, Y+1	; 0x01
    4d84:	fa 81       	ldd	r31, Y+2	; 0x02
    4d86:	81 e0       	ldi	r24, 0x01	; 1
    4d88:	87 83       	std	Z+7, r24	; 0x07
        M[1][0]= 1; M[1][1]= 1; M[1][2]= 0; M[1][3]= 0; M[1][4]= 0; M[1][5]= 0; M[1][6]= 0; M[1][7]= 1;
    4d8a:	89 81       	ldd	r24, Y+1	; 0x01
    4d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    4d8e:	fc 01       	movw	r30, r24
    4d90:	38 96       	adiw	r30, 0x08	; 8
    4d92:	81 e0       	ldi	r24, 0x01	; 1
    4d94:	80 83       	st	Z, r24
    4d96:	89 81       	ldd	r24, Y+1	; 0x01
    4d98:	9a 81       	ldd	r25, Y+2	; 0x02
    4d9a:	fc 01       	movw	r30, r24
    4d9c:	38 96       	adiw	r30, 0x08	; 8
    4d9e:	81 e0       	ldi	r24, 0x01	; 1
    4da0:	81 83       	std	Z+1, r24	; 0x01
    4da2:	89 81       	ldd	r24, Y+1	; 0x01
    4da4:	9a 81       	ldd	r25, Y+2	; 0x02
    4da6:	fc 01       	movw	r30, r24
    4da8:	38 96       	adiw	r30, 0x08	; 8
    4daa:	12 82       	std	Z+2, r1	; 0x02
    4dac:	89 81       	ldd	r24, Y+1	; 0x01
    4dae:	9a 81       	ldd	r25, Y+2	; 0x02
    4db0:	fc 01       	movw	r30, r24
    4db2:	38 96       	adiw	r30, 0x08	; 8
    4db4:	13 82       	std	Z+3, r1	; 0x03
    4db6:	89 81       	ldd	r24, Y+1	; 0x01
    4db8:	9a 81       	ldd	r25, Y+2	; 0x02
    4dba:	fc 01       	movw	r30, r24
    4dbc:	38 96       	adiw	r30, 0x08	; 8
    4dbe:	14 82       	std	Z+4, r1	; 0x04
    4dc0:	89 81       	ldd	r24, Y+1	; 0x01
    4dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    4dc4:	fc 01       	movw	r30, r24
    4dc6:	38 96       	adiw	r30, 0x08	; 8
    4dc8:	15 82       	std	Z+5, r1	; 0x05
    4dca:	89 81       	ldd	r24, Y+1	; 0x01
    4dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    4dce:	fc 01       	movw	r30, r24
    4dd0:	38 96       	adiw	r30, 0x08	; 8
    4dd2:	16 82       	std	Z+6, r1	; 0x06
    4dd4:	89 81       	ldd	r24, Y+1	; 0x01
    4dd6:	9a 81       	ldd	r25, Y+2	; 0x02
    4dd8:	fc 01       	movw	r30, r24
    4dda:	38 96       	adiw	r30, 0x08	; 8
    4ddc:	81 e0       	ldi	r24, 0x01	; 1
    4dde:	87 83       	std	Z+7, r24	; 0x07
        M[2][0]= 1; M[2][1]= 0; M[2][2]= 1; M[2][3]= 0; M[2][4]= 0; M[2][5]= 0; M[2][6]= 0; M[2][7]= 1;
    4de0:	89 81       	ldd	r24, Y+1	; 0x01
    4de2:	9a 81       	ldd	r25, Y+2	; 0x02
    4de4:	fc 01       	movw	r30, r24
    4de6:	70 96       	adiw	r30, 0x10	; 16
    4de8:	81 e0       	ldi	r24, 0x01	; 1
    4dea:	80 83       	st	Z, r24
    4dec:	89 81       	ldd	r24, Y+1	; 0x01
    4dee:	9a 81       	ldd	r25, Y+2	; 0x02
    4df0:	fc 01       	movw	r30, r24
    4df2:	70 96       	adiw	r30, 0x10	; 16
    4df4:	11 82       	std	Z+1, r1	; 0x01
    4df6:	89 81       	ldd	r24, Y+1	; 0x01
    4df8:	9a 81       	ldd	r25, Y+2	; 0x02
    4dfa:	fc 01       	movw	r30, r24
    4dfc:	70 96       	adiw	r30, 0x10	; 16
    4dfe:	81 e0       	ldi	r24, 0x01	; 1
    4e00:	82 83       	std	Z+2, r24	; 0x02
    4e02:	89 81       	ldd	r24, Y+1	; 0x01
    4e04:	9a 81       	ldd	r25, Y+2	; 0x02
    4e06:	fc 01       	movw	r30, r24
    4e08:	70 96       	adiw	r30, 0x10	; 16
    4e0a:	13 82       	std	Z+3, r1	; 0x03
    4e0c:	89 81       	ldd	r24, Y+1	; 0x01
    4e0e:	9a 81       	ldd	r25, Y+2	; 0x02
    4e10:	fc 01       	movw	r30, r24
    4e12:	70 96       	adiw	r30, 0x10	; 16
    4e14:	14 82       	std	Z+4, r1	; 0x04
    4e16:	89 81       	ldd	r24, Y+1	; 0x01
    4e18:	9a 81       	ldd	r25, Y+2	; 0x02
    4e1a:	fc 01       	movw	r30, r24
    4e1c:	70 96       	adiw	r30, 0x10	; 16
    4e1e:	15 82       	std	Z+5, r1	; 0x05
    4e20:	89 81       	ldd	r24, Y+1	; 0x01
    4e22:	9a 81       	ldd	r25, Y+2	; 0x02
    4e24:	fc 01       	movw	r30, r24
    4e26:	70 96       	adiw	r30, 0x10	; 16
    4e28:	16 82       	std	Z+6, r1	; 0x06
    4e2a:	89 81       	ldd	r24, Y+1	; 0x01
    4e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    4e2e:	fc 01       	movw	r30, r24
    4e30:	70 96       	adiw	r30, 0x10	; 16
    4e32:	81 e0       	ldi	r24, 0x01	; 1
    4e34:	87 83       	std	Z+7, r24	; 0x07
        M[3][0]= 1; M[3][1]= 0; M[3][2]= 0; M[3][3]= 1; M[3][4]= 0; M[3][5]= 0; M[3][6]= 0; M[3][7]= 1;
    4e36:	89 81       	ldd	r24, Y+1	; 0x01
    4e38:	9a 81       	ldd	r25, Y+2	; 0x02
    4e3a:	fc 01       	movw	r30, r24
    4e3c:	78 96       	adiw	r30, 0x18	; 24
    4e3e:	81 e0       	ldi	r24, 0x01	; 1
    4e40:	80 83       	st	Z, r24
    4e42:	89 81       	ldd	r24, Y+1	; 0x01
    4e44:	9a 81       	ldd	r25, Y+2	; 0x02
    4e46:	fc 01       	movw	r30, r24
    4e48:	78 96       	adiw	r30, 0x18	; 24
    4e4a:	11 82       	std	Z+1, r1	; 0x01
    4e4c:	89 81       	ldd	r24, Y+1	; 0x01
    4e4e:	9a 81       	ldd	r25, Y+2	; 0x02
    4e50:	fc 01       	movw	r30, r24
    4e52:	78 96       	adiw	r30, 0x18	; 24
    4e54:	12 82       	std	Z+2, r1	; 0x02
    4e56:	89 81       	ldd	r24, Y+1	; 0x01
    4e58:	9a 81       	ldd	r25, Y+2	; 0x02
    4e5a:	fc 01       	movw	r30, r24
    4e5c:	78 96       	adiw	r30, 0x18	; 24
    4e5e:	81 e0       	ldi	r24, 0x01	; 1
    4e60:	83 83       	std	Z+3, r24	; 0x03
    4e62:	89 81       	ldd	r24, Y+1	; 0x01
    4e64:	9a 81       	ldd	r25, Y+2	; 0x02
    4e66:	fc 01       	movw	r30, r24
    4e68:	78 96       	adiw	r30, 0x18	; 24
    4e6a:	14 82       	std	Z+4, r1	; 0x04
    4e6c:	89 81       	ldd	r24, Y+1	; 0x01
    4e6e:	9a 81       	ldd	r25, Y+2	; 0x02
    4e70:	fc 01       	movw	r30, r24
    4e72:	78 96       	adiw	r30, 0x18	; 24
    4e74:	15 82       	std	Z+5, r1	; 0x05
    4e76:	89 81       	ldd	r24, Y+1	; 0x01
    4e78:	9a 81       	ldd	r25, Y+2	; 0x02
    4e7a:	fc 01       	movw	r30, r24
    4e7c:	78 96       	adiw	r30, 0x18	; 24
    4e7e:	16 82       	std	Z+6, r1	; 0x06
    4e80:	89 81       	ldd	r24, Y+1	; 0x01
    4e82:	9a 81       	ldd	r25, Y+2	; 0x02
    4e84:	fc 01       	movw	r30, r24
    4e86:	78 96       	adiw	r30, 0x18	; 24
    4e88:	81 e0       	ldi	r24, 0x01	; 1
    4e8a:	87 83       	std	Z+7, r24	; 0x07
        M[4][0]= 1; M[4][1]= 0; M[4][2]= 0; M[4][3]= 0; M[4][4]= 1; M[4][5]= 0; M[4][6]= 0; M[4][7]= 1;
    4e8c:	89 81       	ldd	r24, Y+1	; 0x01
    4e8e:	9a 81       	ldd	r25, Y+2	; 0x02
    4e90:	fc 01       	movw	r30, r24
    4e92:	b0 96       	adiw	r30, 0x20	; 32
    4e94:	81 e0       	ldi	r24, 0x01	; 1
    4e96:	80 83       	st	Z, r24
    4e98:	89 81       	ldd	r24, Y+1	; 0x01
    4e9a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e9c:	fc 01       	movw	r30, r24
    4e9e:	b0 96       	adiw	r30, 0x20	; 32
    4ea0:	11 82       	std	Z+1, r1	; 0x01
    4ea2:	89 81       	ldd	r24, Y+1	; 0x01
    4ea4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ea6:	fc 01       	movw	r30, r24
    4ea8:	b0 96       	adiw	r30, 0x20	; 32
    4eaa:	12 82       	std	Z+2, r1	; 0x02
    4eac:	89 81       	ldd	r24, Y+1	; 0x01
    4eae:	9a 81       	ldd	r25, Y+2	; 0x02
    4eb0:	fc 01       	movw	r30, r24
    4eb2:	b0 96       	adiw	r30, 0x20	; 32
    4eb4:	13 82       	std	Z+3, r1	; 0x03
    4eb6:	89 81       	ldd	r24, Y+1	; 0x01
    4eb8:	9a 81       	ldd	r25, Y+2	; 0x02
    4eba:	fc 01       	movw	r30, r24
    4ebc:	b0 96       	adiw	r30, 0x20	; 32
    4ebe:	81 e0       	ldi	r24, 0x01	; 1
    4ec0:	84 83       	std	Z+4, r24	; 0x04
    4ec2:	89 81       	ldd	r24, Y+1	; 0x01
    4ec4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ec6:	fc 01       	movw	r30, r24
    4ec8:	b0 96       	adiw	r30, 0x20	; 32
    4eca:	15 82       	std	Z+5, r1	; 0x05
    4ecc:	89 81       	ldd	r24, Y+1	; 0x01
    4ece:	9a 81       	ldd	r25, Y+2	; 0x02
    4ed0:	fc 01       	movw	r30, r24
    4ed2:	b0 96       	adiw	r30, 0x20	; 32
    4ed4:	16 82       	std	Z+6, r1	; 0x06
    4ed6:	89 81       	ldd	r24, Y+1	; 0x01
    4ed8:	9a 81       	ldd	r25, Y+2	; 0x02
    4eda:	fc 01       	movw	r30, r24
    4edc:	b0 96       	adiw	r30, 0x20	; 32
    4ede:	81 e0       	ldi	r24, 0x01	; 1
    4ee0:	87 83       	std	Z+7, r24	; 0x07
        M[5][0]= 1; M[5][1]= 0; M[5][2]= 0; M[5][3]= 0; M[5][4]= 0; M[5][5]= 1; M[5][6]= 0; M[5][7]= 1;
    4ee2:	89 81       	ldd	r24, Y+1	; 0x01
    4ee4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ee6:	fc 01       	movw	r30, r24
    4ee8:	b8 96       	adiw	r30, 0x28	; 40
    4eea:	81 e0       	ldi	r24, 0x01	; 1
    4eec:	80 83       	st	Z, r24
    4eee:	89 81       	ldd	r24, Y+1	; 0x01
    4ef0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ef2:	fc 01       	movw	r30, r24
    4ef4:	b8 96       	adiw	r30, 0x28	; 40
    4ef6:	11 82       	std	Z+1, r1	; 0x01
    4ef8:	89 81       	ldd	r24, Y+1	; 0x01
    4efa:	9a 81       	ldd	r25, Y+2	; 0x02
    4efc:	fc 01       	movw	r30, r24
    4efe:	b8 96       	adiw	r30, 0x28	; 40
    4f00:	12 82       	std	Z+2, r1	; 0x02
    4f02:	89 81       	ldd	r24, Y+1	; 0x01
    4f04:	9a 81       	ldd	r25, Y+2	; 0x02
    4f06:	fc 01       	movw	r30, r24
    4f08:	b8 96       	adiw	r30, 0x28	; 40
    4f0a:	13 82       	std	Z+3, r1	; 0x03
    4f0c:	89 81       	ldd	r24, Y+1	; 0x01
    4f0e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f10:	fc 01       	movw	r30, r24
    4f12:	b8 96       	adiw	r30, 0x28	; 40
    4f14:	14 82       	std	Z+4, r1	; 0x04
    4f16:	89 81       	ldd	r24, Y+1	; 0x01
    4f18:	9a 81       	ldd	r25, Y+2	; 0x02
    4f1a:	fc 01       	movw	r30, r24
    4f1c:	b8 96       	adiw	r30, 0x28	; 40
    4f1e:	81 e0       	ldi	r24, 0x01	; 1
    4f20:	85 83       	std	Z+5, r24	; 0x05
    4f22:	89 81       	ldd	r24, Y+1	; 0x01
    4f24:	9a 81       	ldd	r25, Y+2	; 0x02
    4f26:	fc 01       	movw	r30, r24
    4f28:	b8 96       	adiw	r30, 0x28	; 40
    4f2a:	16 82       	std	Z+6, r1	; 0x06
    4f2c:	89 81       	ldd	r24, Y+1	; 0x01
    4f2e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f30:	fc 01       	movw	r30, r24
    4f32:	b8 96       	adiw	r30, 0x28	; 40
    4f34:	81 e0       	ldi	r24, 0x01	; 1
    4f36:	87 83       	std	Z+7, r24	; 0x07
        M[6][0]= 1; M[6][1]= 0; M[6][2]= 0; M[6][3]= 0; M[6][4]= 0; M[6][5]= 0; M[6][6]= 1; M[6][7]= 1;
    4f38:	89 81       	ldd	r24, Y+1	; 0x01
    4f3a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f3c:	fc 01       	movw	r30, r24
    4f3e:	f0 96       	adiw	r30, 0x30	; 48
    4f40:	81 e0       	ldi	r24, 0x01	; 1
    4f42:	80 83       	st	Z, r24
    4f44:	89 81       	ldd	r24, Y+1	; 0x01
    4f46:	9a 81       	ldd	r25, Y+2	; 0x02
    4f48:	fc 01       	movw	r30, r24
    4f4a:	f0 96       	adiw	r30, 0x30	; 48
    4f4c:	11 82       	std	Z+1, r1	; 0x01
    4f4e:	89 81       	ldd	r24, Y+1	; 0x01
    4f50:	9a 81       	ldd	r25, Y+2	; 0x02
    4f52:	fc 01       	movw	r30, r24
    4f54:	f0 96       	adiw	r30, 0x30	; 48
    4f56:	12 82       	std	Z+2, r1	; 0x02
    4f58:	89 81       	ldd	r24, Y+1	; 0x01
    4f5a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f5c:	fc 01       	movw	r30, r24
    4f5e:	f0 96       	adiw	r30, 0x30	; 48
    4f60:	13 82       	std	Z+3, r1	; 0x03
    4f62:	89 81       	ldd	r24, Y+1	; 0x01
    4f64:	9a 81       	ldd	r25, Y+2	; 0x02
    4f66:	fc 01       	movw	r30, r24
    4f68:	f0 96       	adiw	r30, 0x30	; 48
    4f6a:	14 82       	std	Z+4, r1	; 0x04
    4f6c:	89 81       	ldd	r24, Y+1	; 0x01
    4f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f70:	fc 01       	movw	r30, r24
    4f72:	f0 96       	adiw	r30, 0x30	; 48
    4f74:	15 82       	std	Z+5, r1	; 0x05
    4f76:	89 81       	ldd	r24, Y+1	; 0x01
    4f78:	9a 81       	ldd	r25, Y+2	; 0x02
    4f7a:	fc 01       	movw	r30, r24
    4f7c:	f0 96       	adiw	r30, 0x30	; 48
    4f7e:	81 e0       	ldi	r24, 0x01	; 1
    4f80:	86 83       	std	Z+6, r24	; 0x06
    4f82:	89 81       	ldd	r24, Y+1	; 0x01
    4f84:	9a 81       	ldd	r25, Y+2	; 0x02
    4f86:	fc 01       	movw	r30, r24
    4f88:	f0 96       	adiw	r30, 0x30	; 48
    4f8a:	81 e0       	ldi	r24, 0x01	; 1
    4f8c:	87 83       	std	Z+7, r24	; 0x07
        M[7][0]= 1; M[7][1]= 0; M[7][2]= 0; M[7][3]= 0; M[7][4]= 0; M[7][5]= 0; M[7][6]= 0; M[7][7]= 1;
    4f8e:	89 81       	ldd	r24, Y+1	; 0x01
    4f90:	9a 81       	ldd	r25, Y+2	; 0x02
    4f92:	fc 01       	movw	r30, r24
    4f94:	f8 96       	adiw	r30, 0x38	; 56
    4f96:	81 e0       	ldi	r24, 0x01	; 1
    4f98:	80 83       	st	Z, r24
    4f9a:	89 81       	ldd	r24, Y+1	; 0x01
    4f9c:	9a 81       	ldd	r25, Y+2	; 0x02
    4f9e:	fc 01       	movw	r30, r24
    4fa0:	f8 96       	adiw	r30, 0x38	; 56
    4fa2:	11 82       	std	Z+1, r1	; 0x01
    4fa4:	89 81       	ldd	r24, Y+1	; 0x01
    4fa6:	9a 81       	ldd	r25, Y+2	; 0x02
    4fa8:	fc 01       	movw	r30, r24
    4faa:	f8 96       	adiw	r30, 0x38	; 56
    4fac:	12 82       	std	Z+2, r1	; 0x02
    4fae:	89 81       	ldd	r24, Y+1	; 0x01
    4fb0:	9a 81       	ldd	r25, Y+2	; 0x02
    4fb2:	fc 01       	movw	r30, r24
    4fb4:	f8 96       	adiw	r30, 0x38	; 56
    4fb6:	13 82       	std	Z+3, r1	; 0x03
    4fb8:	89 81       	ldd	r24, Y+1	; 0x01
    4fba:	9a 81       	ldd	r25, Y+2	; 0x02
    4fbc:	fc 01       	movw	r30, r24
    4fbe:	f8 96       	adiw	r30, 0x38	; 56
    4fc0:	14 82       	std	Z+4, r1	; 0x04
    4fc2:	89 81       	ldd	r24, Y+1	; 0x01
    4fc4:	9a 81       	ldd	r25, Y+2	; 0x02
    4fc6:	fc 01       	movw	r30, r24
    4fc8:	f8 96       	adiw	r30, 0x38	; 56
    4fca:	15 82       	std	Z+5, r1	; 0x05
    4fcc:	89 81       	ldd	r24, Y+1	; 0x01
    4fce:	9a 81       	ldd	r25, Y+2	; 0x02
    4fd0:	fc 01       	movw	r30, r24
    4fd2:	f8 96       	adiw	r30, 0x38	; 56
    4fd4:	16 82       	std	Z+6, r1	; 0x06
    4fd6:	89 81       	ldd	r24, Y+1	; 0x01
    4fd8:	9a 81       	ldd	r25, Y+2	; 0x02
    4fda:	fc 01       	movw	r30, r24
    4fdc:	f8 96       	adiw	r30, 0x38	; 56
    4fde:	81 e0       	ldi	r24, 0x01	; 1
    4fe0:	87 83       	std	Z+7, r24	; 0x07
    4fe2:	bc c3       	rjmp	.+1912   	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case 'R':
    {
        M[0][0]= 0; M[0][1]= 1; M[0][2]= 1; M[0][3]= 1; M[0][4]= 1; M[0][5]= 0; M[0][6]= 0; M[0][7]= 0;
    4fe4:	e9 81       	ldd	r30, Y+1	; 0x01
    4fe6:	fa 81       	ldd	r31, Y+2	; 0x02
    4fe8:	10 82       	st	Z, r1
    4fea:	e9 81       	ldd	r30, Y+1	; 0x01
    4fec:	fa 81       	ldd	r31, Y+2	; 0x02
    4fee:	81 e0       	ldi	r24, 0x01	; 1
    4ff0:	81 83       	std	Z+1, r24	; 0x01
    4ff2:	e9 81       	ldd	r30, Y+1	; 0x01
    4ff4:	fa 81       	ldd	r31, Y+2	; 0x02
    4ff6:	81 e0       	ldi	r24, 0x01	; 1
    4ff8:	82 83       	std	Z+2, r24	; 0x02
    4ffa:	e9 81       	ldd	r30, Y+1	; 0x01
    4ffc:	fa 81       	ldd	r31, Y+2	; 0x02
    4ffe:	81 e0       	ldi	r24, 0x01	; 1
    5000:	83 83       	std	Z+3, r24	; 0x03
    5002:	e9 81       	ldd	r30, Y+1	; 0x01
    5004:	fa 81       	ldd	r31, Y+2	; 0x02
    5006:	81 e0       	ldi	r24, 0x01	; 1
    5008:	84 83       	std	Z+4, r24	; 0x04
    500a:	e9 81       	ldd	r30, Y+1	; 0x01
    500c:	fa 81       	ldd	r31, Y+2	; 0x02
    500e:	15 82       	std	Z+5, r1	; 0x05
    5010:	e9 81       	ldd	r30, Y+1	; 0x01
    5012:	fa 81       	ldd	r31, Y+2	; 0x02
    5014:	16 82       	std	Z+6, r1	; 0x06
    5016:	e9 81       	ldd	r30, Y+1	; 0x01
    5018:	fa 81       	ldd	r31, Y+2	; 0x02
    501a:	17 82       	std	Z+7, r1	; 0x07
        M[1][0]= 0; M[1][1]= 1; M[1][2]= 0; M[1][3]= 0; M[1][4]= 1; M[1][5]= 0; M[1][6]= 0; M[1][7]= 0;
    501c:	89 81       	ldd	r24, Y+1	; 0x01
    501e:	9a 81       	ldd	r25, Y+2	; 0x02
    5020:	fc 01       	movw	r30, r24
    5022:	38 96       	adiw	r30, 0x08	; 8
    5024:	10 82       	st	Z, r1
    5026:	89 81       	ldd	r24, Y+1	; 0x01
    5028:	9a 81       	ldd	r25, Y+2	; 0x02
    502a:	fc 01       	movw	r30, r24
    502c:	38 96       	adiw	r30, 0x08	; 8
    502e:	81 e0       	ldi	r24, 0x01	; 1
    5030:	81 83       	std	Z+1, r24	; 0x01
    5032:	89 81       	ldd	r24, Y+1	; 0x01
    5034:	9a 81       	ldd	r25, Y+2	; 0x02
    5036:	fc 01       	movw	r30, r24
    5038:	38 96       	adiw	r30, 0x08	; 8
    503a:	12 82       	std	Z+2, r1	; 0x02
    503c:	89 81       	ldd	r24, Y+1	; 0x01
    503e:	9a 81       	ldd	r25, Y+2	; 0x02
    5040:	fc 01       	movw	r30, r24
    5042:	38 96       	adiw	r30, 0x08	; 8
    5044:	13 82       	std	Z+3, r1	; 0x03
    5046:	89 81       	ldd	r24, Y+1	; 0x01
    5048:	9a 81       	ldd	r25, Y+2	; 0x02
    504a:	fc 01       	movw	r30, r24
    504c:	38 96       	adiw	r30, 0x08	; 8
    504e:	81 e0       	ldi	r24, 0x01	; 1
    5050:	84 83       	std	Z+4, r24	; 0x04
    5052:	89 81       	ldd	r24, Y+1	; 0x01
    5054:	9a 81       	ldd	r25, Y+2	; 0x02
    5056:	fc 01       	movw	r30, r24
    5058:	38 96       	adiw	r30, 0x08	; 8
    505a:	15 82       	std	Z+5, r1	; 0x05
    505c:	89 81       	ldd	r24, Y+1	; 0x01
    505e:	9a 81       	ldd	r25, Y+2	; 0x02
    5060:	fc 01       	movw	r30, r24
    5062:	38 96       	adiw	r30, 0x08	; 8
    5064:	16 82       	std	Z+6, r1	; 0x06
    5066:	89 81       	ldd	r24, Y+1	; 0x01
    5068:	9a 81       	ldd	r25, Y+2	; 0x02
    506a:	fc 01       	movw	r30, r24
    506c:	38 96       	adiw	r30, 0x08	; 8
    506e:	17 82       	std	Z+7, r1	; 0x07
        M[2][0]= 0; M[2][1]= 1; M[2][2]= 0; M[2][3]= 0; M[2][4]= 1; M[2][5]= 0; M[2][6]= 0; M[2][7]= 0;
    5070:	89 81       	ldd	r24, Y+1	; 0x01
    5072:	9a 81       	ldd	r25, Y+2	; 0x02
    5074:	fc 01       	movw	r30, r24
    5076:	70 96       	adiw	r30, 0x10	; 16
    5078:	10 82       	st	Z, r1
    507a:	89 81       	ldd	r24, Y+1	; 0x01
    507c:	9a 81       	ldd	r25, Y+2	; 0x02
    507e:	fc 01       	movw	r30, r24
    5080:	70 96       	adiw	r30, 0x10	; 16
    5082:	81 e0       	ldi	r24, 0x01	; 1
    5084:	81 83       	std	Z+1, r24	; 0x01
    5086:	89 81       	ldd	r24, Y+1	; 0x01
    5088:	9a 81       	ldd	r25, Y+2	; 0x02
    508a:	fc 01       	movw	r30, r24
    508c:	70 96       	adiw	r30, 0x10	; 16
    508e:	12 82       	std	Z+2, r1	; 0x02
    5090:	89 81       	ldd	r24, Y+1	; 0x01
    5092:	9a 81       	ldd	r25, Y+2	; 0x02
    5094:	fc 01       	movw	r30, r24
    5096:	70 96       	adiw	r30, 0x10	; 16
    5098:	13 82       	std	Z+3, r1	; 0x03
    509a:	89 81       	ldd	r24, Y+1	; 0x01
    509c:	9a 81       	ldd	r25, Y+2	; 0x02
    509e:	fc 01       	movw	r30, r24
    50a0:	70 96       	adiw	r30, 0x10	; 16
    50a2:	81 e0       	ldi	r24, 0x01	; 1
    50a4:	84 83       	std	Z+4, r24	; 0x04
    50a6:	89 81       	ldd	r24, Y+1	; 0x01
    50a8:	9a 81       	ldd	r25, Y+2	; 0x02
    50aa:	fc 01       	movw	r30, r24
    50ac:	70 96       	adiw	r30, 0x10	; 16
    50ae:	15 82       	std	Z+5, r1	; 0x05
    50b0:	89 81       	ldd	r24, Y+1	; 0x01
    50b2:	9a 81       	ldd	r25, Y+2	; 0x02
    50b4:	fc 01       	movw	r30, r24
    50b6:	70 96       	adiw	r30, 0x10	; 16
    50b8:	16 82       	std	Z+6, r1	; 0x06
    50ba:	89 81       	ldd	r24, Y+1	; 0x01
    50bc:	9a 81       	ldd	r25, Y+2	; 0x02
    50be:	fc 01       	movw	r30, r24
    50c0:	70 96       	adiw	r30, 0x10	; 16
    50c2:	17 82       	std	Z+7, r1	; 0x07
        M[3][0]= 0; M[3][1]= 1; M[3][2]= 1; M[3][3]= 1; M[3][4]= 1; M[3][5]= 0; M[3][6]= 0; M[3][7]= 0;
    50c4:	89 81       	ldd	r24, Y+1	; 0x01
    50c6:	9a 81       	ldd	r25, Y+2	; 0x02
    50c8:	fc 01       	movw	r30, r24
    50ca:	78 96       	adiw	r30, 0x18	; 24
    50cc:	10 82       	st	Z, r1
    50ce:	89 81       	ldd	r24, Y+1	; 0x01
    50d0:	9a 81       	ldd	r25, Y+2	; 0x02
    50d2:	fc 01       	movw	r30, r24
    50d4:	78 96       	adiw	r30, 0x18	; 24
    50d6:	81 e0       	ldi	r24, 0x01	; 1
    50d8:	81 83       	std	Z+1, r24	; 0x01
    50da:	89 81       	ldd	r24, Y+1	; 0x01
    50dc:	9a 81       	ldd	r25, Y+2	; 0x02
    50de:	fc 01       	movw	r30, r24
    50e0:	78 96       	adiw	r30, 0x18	; 24
    50e2:	81 e0       	ldi	r24, 0x01	; 1
    50e4:	82 83       	std	Z+2, r24	; 0x02
    50e6:	89 81       	ldd	r24, Y+1	; 0x01
    50e8:	9a 81       	ldd	r25, Y+2	; 0x02
    50ea:	fc 01       	movw	r30, r24
    50ec:	78 96       	adiw	r30, 0x18	; 24
    50ee:	81 e0       	ldi	r24, 0x01	; 1
    50f0:	83 83       	std	Z+3, r24	; 0x03
    50f2:	89 81       	ldd	r24, Y+1	; 0x01
    50f4:	9a 81       	ldd	r25, Y+2	; 0x02
    50f6:	fc 01       	movw	r30, r24
    50f8:	78 96       	adiw	r30, 0x18	; 24
    50fa:	81 e0       	ldi	r24, 0x01	; 1
    50fc:	84 83       	std	Z+4, r24	; 0x04
    50fe:	89 81       	ldd	r24, Y+1	; 0x01
    5100:	9a 81       	ldd	r25, Y+2	; 0x02
    5102:	fc 01       	movw	r30, r24
    5104:	78 96       	adiw	r30, 0x18	; 24
    5106:	15 82       	std	Z+5, r1	; 0x05
    5108:	89 81       	ldd	r24, Y+1	; 0x01
    510a:	9a 81       	ldd	r25, Y+2	; 0x02
    510c:	fc 01       	movw	r30, r24
    510e:	78 96       	adiw	r30, 0x18	; 24
    5110:	16 82       	std	Z+6, r1	; 0x06
    5112:	89 81       	ldd	r24, Y+1	; 0x01
    5114:	9a 81       	ldd	r25, Y+2	; 0x02
    5116:	fc 01       	movw	r30, r24
    5118:	78 96       	adiw	r30, 0x18	; 24
    511a:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 0; M[4][1]= 1; M[4][2]= 0; M[4][3]= 1; M[4][4]= 0; M[4][5]= 0; M[4][6]= 0; M[4][7]= 0;
    511c:	89 81       	ldd	r24, Y+1	; 0x01
    511e:	9a 81       	ldd	r25, Y+2	; 0x02
    5120:	fc 01       	movw	r30, r24
    5122:	b0 96       	adiw	r30, 0x20	; 32
    5124:	10 82       	st	Z, r1
    5126:	89 81       	ldd	r24, Y+1	; 0x01
    5128:	9a 81       	ldd	r25, Y+2	; 0x02
    512a:	fc 01       	movw	r30, r24
    512c:	b0 96       	adiw	r30, 0x20	; 32
    512e:	81 e0       	ldi	r24, 0x01	; 1
    5130:	81 83       	std	Z+1, r24	; 0x01
    5132:	89 81       	ldd	r24, Y+1	; 0x01
    5134:	9a 81       	ldd	r25, Y+2	; 0x02
    5136:	fc 01       	movw	r30, r24
    5138:	b0 96       	adiw	r30, 0x20	; 32
    513a:	12 82       	std	Z+2, r1	; 0x02
    513c:	89 81       	ldd	r24, Y+1	; 0x01
    513e:	9a 81       	ldd	r25, Y+2	; 0x02
    5140:	fc 01       	movw	r30, r24
    5142:	b0 96       	adiw	r30, 0x20	; 32
    5144:	81 e0       	ldi	r24, 0x01	; 1
    5146:	83 83       	std	Z+3, r24	; 0x03
    5148:	89 81       	ldd	r24, Y+1	; 0x01
    514a:	9a 81       	ldd	r25, Y+2	; 0x02
    514c:	fc 01       	movw	r30, r24
    514e:	b0 96       	adiw	r30, 0x20	; 32
    5150:	14 82       	std	Z+4, r1	; 0x04
    5152:	89 81       	ldd	r24, Y+1	; 0x01
    5154:	9a 81       	ldd	r25, Y+2	; 0x02
    5156:	fc 01       	movw	r30, r24
    5158:	b0 96       	adiw	r30, 0x20	; 32
    515a:	15 82       	std	Z+5, r1	; 0x05
    515c:	89 81       	ldd	r24, Y+1	; 0x01
    515e:	9a 81       	ldd	r25, Y+2	; 0x02
    5160:	fc 01       	movw	r30, r24
    5162:	b0 96       	adiw	r30, 0x20	; 32
    5164:	16 82       	std	Z+6, r1	; 0x06
    5166:	89 81       	ldd	r24, Y+1	; 0x01
    5168:	9a 81       	ldd	r25, Y+2	; 0x02
    516a:	fc 01       	movw	r30, r24
    516c:	b0 96       	adiw	r30, 0x20	; 32
    516e:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 0; M[5][1]= 1; M[5][2]= 0; M[5][3]= 0; M[5][4]= 1; M[5][5]= 0; M[5][6]= 0; M[5][7]= 0;
    5170:	89 81       	ldd	r24, Y+1	; 0x01
    5172:	9a 81       	ldd	r25, Y+2	; 0x02
    5174:	fc 01       	movw	r30, r24
    5176:	b8 96       	adiw	r30, 0x28	; 40
    5178:	10 82       	st	Z, r1
    517a:	89 81       	ldd	r24, Y+1	; 0x01
    517c:	9a 81       	ldd	r25, Y+2	; 0x02
    517e:	fc 01       	movw	r30, r24
    5180:	b8 96       	adiw	r30, 0x28	; 40
    5182:	81 e0       	ldi	r24, 0x01	; 1
    5184:	81 83       	std	Z+1, r24	; 0x01
    5186:	89 81       	ldd	r24, Y+1	; 0x01
    5188:	9a 81       	ldd	r25, Y+2	; 0x02
    518a:	fc 01       	movw	r30, r24
    518c:	b8 96       	adiw	r30, 0x28	; 40
    518e:	12 82       	std	Z+2, r1	; 0x02
    5190:	89 81       	ldd	r24, Y+1	; 0x01
    5192:	9a 81       	ldd	r25, Y+2	; 0x02
    5194:	fc 01       	movw	r30, r24
    5196:	b8 96       	adiw	r30, 0x28	; 40
    5198:	13 82       	std	Z+3, r1	; 0x03
    519a:	89 81       	ldd	r24, Y+1	; 0x01
    519c:	9a 81       	ldd	r25, Y+2	; 0x02
    519e:	fc 01       	movw	r30, r24
    51a0:	b8 96       	adiw	r30, 0x28	; 40
    51a2:	81 e0       	ldi	r24, 0x01	; 1
    51a4:	84 83       	std	Z+4, r24	; 0x04
    51a6:	89 81       	ldd	r24, Y+1	; 0x01
    51a8:	9a 81       	ldd	r25, Y+2	; 0x02
    51aa:	fc 01       	movw	r30, r24
    51ac:	b8 96       	adiw	r30, 0x28	; 40
    51ae:	15 82       	std	Z+5, r1	; 0x05
    51b0:	89 81       	ldd	r24, Y+1	; 0x01
    51b2:	9a 81       	ldd	r25, Y+2	; 0x02
    51b4:	fc 01       	movw	r30, r24
    51b6:	b8 96       	adiw	r30, 0x28	; 40
    51b8:	16 82       	std	Z+6, r1	; 0x06
    51ba:	89 81       	ldd	r24, Y+1	; 0x01
    51bc:	9a 81       	ldd	r25, Y+2	; 0x02
    51be:	fc 01       	movw	r30, r24
    51c0:	b8 96       	adiw	r30, 0x28	; 40
    51c2:	17 82       	std	Z+7, r1	; 0x07
        M[6][0]= 0; M[6][1]= 1; M[6][2]= 0; M[6][3]= 0; M[6][4]= 1; M[6][5]= 0; M[6][6]= 0; M[6][7]= 0;
    51c4:	89 81       	ldd	r24, Y+1	; 0x01
    51c6:	9a 81       	ldd	r25, Y+2	; 0x02
    51c8:	fc 01       	movw	r30, r24
    51ca:	f0 96       	adiw	r30, 0x30	; 48
    51cc:	10 82       	st	Z, r1
    51ce:	89 81       	ldd	r24, Y+1	; 0x01
    51d0:	9a 81       	ldd	r25, Y+2	; 0x02
    51d2:	fc 01       	movw	r30, r24
    51d4:	f0 96       	adiw	r30, 0x30	; 48
    51d6:	81 e0       	ldi	r24, 0x01	; 1
    51d8:	81 83       	std	Z+1, r24	; 0x01
    51da:	89 81       	ldd	r24, Y+1	; 0x01
    51dc:	9a 81       	ldd	r25, Y+2	; 0x02
    51de:	fc 01       	movw	r30, r24
    51e0:	f0 96       	adiw	r30, 0x30	; 48
    51e2:	12 82       	std	Z+2, r1	; 0x02
    51e4:	89 81       	ldd	r24, Y+1	; 0x01
    51e6:	9a 81       	ldd	r25, Y+2	; 0x02
    51e8:	fc 01       	movw	r30, r24
    51ea:	f0 96       	adiw	r30, 0x30	; 48
    51ec:	13 82       	std	Z+3, r1	; 0x03
    51ee:	89 81       	ldd	r24, Y+1	; 0x01
    51f0:	9a 81       	ldd	r25, Y+2	; 0x02
    51f2:	fc 01       	movw	r30, r24
    51f4:	f0 96       	adiw	r30, 0x30	; 48
    51f6:	81 e0       	ldi	r24, 0x01	; 1
    51f8:	84 83       	std	Z+4, r24	; 0x04
    51fa:	89 81       	ldd	r24, Y+1	; 0x01
    51fc:	9a 81       	ldd	r25, Y+2	; 0x02
    51fe:	fc 01       	movw	r30, r24
    5200:	f0 96       	adiw	r30, 0x30	; 48
    5202:	15 82       	std	Z+5, r1	; 0x05
    5204:	89 81       	ldd	r24, Y+1	; 0x01
    5206:	9a 81       	ldd	r25, Y+2	; 0x02
    5208:	fc 01       	movw	r30, r24
    520a:	f0 96       	adiw	r30, 0x30	; 48
    520c:	16 82       	std	Z+6, r1	; 0x06
    520e:	89 81       	ldd	r24, Y+1	; 0x01
    5210:	9a 81       	ldd	r25, Y+2	; 0x02
    5212:	fc 01       	movw	r30, r24
    5214:	f0 96       	adiw	r30, 0x30	; 48
    5216:	17 82       	std	Z+7, r1	; 0x07
        M[7][0]= 0; M[7][1]= 1; M[7][2]= 0; M[7][3]= 0; M[7][4]= 1; M[7][5]= 0; M[7][6]= 0; M[7][7]= 0;
    5218:	89 81       	ldd	r24, Y+1	; 0x01
    521a:	9a 81       	ldd	r25, Y+2	; 0x02
    521c:	fc 01       	movw	r30, r24
    521e:	f8 96       	adiw	r30, 0x38	; 56
    5220:	10 82       	st	Z, r1
    5222:	89 81       	ldd	r24, Y+1	; 0x01
    5224:	9a 81       	ldd	r25, Y+2	; 0x02
    5226:	fc 01       	movw	r30, r24
    5228:	f8 96       	adiw	r30, 0x38	; 56
    522a:	81 e0       	ldi	r24, 0x01	; 1
    522c:	81 83       	std	Z+1, r24	; 0x01
    522e:	89 81       	ldd	r24, Y+1	; 0x01
    5230:	9a 81       	ldd	r25, Y+2	; 0x02
    5232:	fc 01       	movw	r30, r24
    5234:	f8 96       	adiw	r30, 0x38	; 56
    5236:	12 82       	std	Z+2, r1	; 0x02
    5238:	89 81       	ldd	r24, Y+1	; 0x01
    523a:	9a 81       	ldd	r25, Y+2	; 0x02
    523c:	fc 01       	movw	r30, r24
    523e:	f8 96       	adiw	r30, 0x38	; 56
    5240:	13 82       	std	Z+3, r1	; 0x03
    5242:	89 81       	ldd	r24, Y+1	; 0x01
    5244:	9a 81       	ldd	r25, Y+2	; 0x02
    5246:	fc 01       	movw	r30, r24
    5248:	f8 96       	adiw	r30, 0x38	; 56
    524a:	81 e0       	ldi	r24, 0x01	; 1
    524c:	84 83       	std	Z+4, r24	; 0x04
    524e:	89 81       	ldd	r24, Y+1	; 0x01
    5250:	9a 81       	ldd	r25, Y+2	; 0x02
    5252:	fc 01       	movw	r30, r24
    5254:	f8 96       	adiw	r30, 0x38	; 56
    5256:	15 82       	std	Z+5, r1	; 0x05
    5258:	89 81       	ldd	r24, Y+1	; 0x01
    525a:	9a 81       	ldd	r25, Y+2	; 0x02
    525c:	fc 01       	movw	r30, r24
    525e:	f8 96       	adiw	r30, 0x38	; 56
    5260:	16 82       	std	Z+6, r1	; 0x06
    5262:	89 81       	ldd	r24, Y+1	; 0x01
    5264:	9a 81       	ldd	r25, Y+2	; 0x02
    5266:	fc 01       	movw	r30, r24
    5268:	f8 96       	adiw	r30, 0x38	; 56
    526a:	17 82       	std	Z+7, r1	; 0x07
    526c:	77 c2       	rjmp	.+1262   	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
    }
    break;

    case '*':
        {
            M[0][0]= 0; M[0][1]= 1; M[0][2]= 1; M[0][3]= 0; M[0][4]= 0; M[0][5]= 1; M[0][6]= 1; M[0][7]= 0;
    526e:	e9 81       	ldd	r30, Y+1	; 0x01
    5270:	fa 81       	ldd	r31, Y+2	; 0x02
    5272:	10 82       	st	Z, r1
    5274:	e9 81       	ldd	r30, Y+1	; 0x01
    5276:	fa 81       	ldd	r31, Y+2	; 0x02
    5278:	81 e0       	ldi	r24, 0x01	; 1
    527a:	81 83       	std	Z+1, r24	; 0x01
    527c:	e9 81       	ldd	r30, Y+1	; 0x01
    527e:	fa 81       	ldd	r31, Y+2	; 0x02
    5280:	81 e0       	ldi	r24, 0x01	; 1
    5282:	82 83       	std	Z+2, r24	; 0x02
    5284:	e9 81       	ldd	r30, Y+1	; 0x01
    5286:	fa 81       	ldd	r31, Y+2	; 0x02
    5288:	13 82       	std	Z+3, r1	; 0x03
    528a:	e9 81       	ldd	r30, Y+1	; 0x01
    528c:	fa 81       	ldd	r31, Y+2	; 0x02
    528e:	14 82       	std	Z+4, r1	; 0x04
    5290:	e9 81       	ldd	r30, Y+1	; 0x01
    5292:	fa 81       	ldd	r31, Y+2	; 0x02
    5294:	81 e0       	ldi	r24, 0x01	; 1
    5296:	85 83       	std	Z+5, r24	; 0x05
    5298:	e9 81       	ldd	r30, Y+1	; 0x01
    529a:	fa 81       	ldd	r31, Y+2	; 0x02
    529c:	81 e0       	ldi	r24, 0x01	; 1
    529e:	86 83       	std	Z+6, r24	; 0x06
    52a0:	e9 81       	ldd	r30, Y+1	; 0x01
    52a2:	fa 81       	ldd	r31, Y+2	; 0x02
    52a4:	17 82       	std	Z+7, r1	; 0x07
            M[1][0]= 1; M[1][1]= 0; M[1][2]= 0; M[1][3]= 1; M[1][4]= 1; M[1][5]= 0; M[1][6]= 0; M[1][7]= 1;
    52a6:	89 81       	ldd	r24, Y+1	; 0x01
    52a8:	9a 81       	ldd	r25, Y+2	; 0x02
    52aa:	fc 01       	movw	r30, r24
    52ac:	38 96       	adiw	r30, 0x08	; 8
    52ae:	81 e0       	ldi	r24, 0x01	; 1
    52b0:	80 83       	st	Z, r24
    52b2:	89 81       	ldd	r24, Y+1	; 0x01
    52b4:	9a 81       	ldd	r25, Y+2	; 0x02
    52b6:	fc 01       	movw	r30, r24
    52b8:	38 96       	adiw	r30, 0x08	; 8
    52ba:	11 82       	std	Z+1, r1	; 0x01
    52bc:	89 81       	ldd	r24, Y+1	; 0x01
    52be:	9a 81       	ldd	r25, Y+2	; 0x02
    52c0:	fc 01       	movw	r30, r24
    52c2:	38 96       	adiw	r30, 0x08	; 8
    52c4:	12 82       	std	Z+2, r1	; 0x02
    52c6:	89 81       	ldd	r24, Y+1	; 0x01
    52c8:	9a 81       	ldd	r25, Y+2	; 0x02
    52ca:	fc 01       	movw	r30, r24
    52cc:	38 96       	adiw	r30, 0x08	; 8
    52ce:	81 e0       	ldi	r24, 0x01	; 1
    52d0:	83 83       	std	Z+3, r24	; 0x03
    52d2:	89 81       	ldd	r24, Y+1	; 0x01
    52d4:	9a 81       	ldd	r25, Y+2	; 0x02
    52d6:	fc 01       	movw	r30, r24
    52d8:	38 96       	adiw	r30, 0x08	; 8
    52da:	81 e0       	ldi	r24, 0x01	; 1
    52dc:	84 83       	std	Z+4, r24	; 0x04
    52de:	89 81       	ldd	r24, Y+1	; 0x01
    52e0:	9a 81       	ldd	r25, Y+2	; 0x02
    52e2:	fc 01       	movw	r30, r24
    52e4:	38 96       	adiw	r30, 0x08	; 8
    52e6:	15 82       	std	Z+5, r1	; 0x05
    52e8:	89 81       	ldd	r24, Y+1	; 0x01
    52ea:	9a 81       	ldd	r25, Y+2	; 0x02
    52ec:	fc 01       	movw	r30, r24
    52ee:	38 96       	adiw	r30, 0x08	; 8
    52f0:	16 82       	std	Z+6, r1	; 0x06
    52f2:	89 81       	ldd	r24, Y+1	; 0x01
    52f4:	9a 81       	ldd	r25, Y+2	; 0x02
    52f6:	fc 01       	movw	r30, r24
    52f8:	38 96       	adiw	r30, 0x08	; 8
    52fa:	81 e0       	ldi	r24, 0x01	; 1
    52fc:	87 83       	std	Z+7, r24	; 0x07
            M[2][0]= 1; M[2][1]= 0; M[2][2]= 0; M[2][3]= 1; M[2][4]= 1; M[2][5]= 0; M[2][6]= 0; M[2][7]= 1;
    52fe:	89 81       	ldd	r24, Y+1	; 0x01
    5300:	9a 81       	ldd	r25, Y+2	; 0x02
    5302:	fc 01       	movw	r30, r24
    5304:	70 96       	adiw	r30, 0x10	; 16
    5306:	81 e0       	ldi	r24, 0x01	; 1
    5308:	80 83       	st	Z, r24
    530a:	89 81       	ldd	r24, Y+1	; 0x01
    530c:	9a 81       	ldd	r25, Y+2	; 0x02
    530e:	fc 01       	movw	r30, r24
    5310:	70 96       	adiw	r30, 0x10	; 16
    5312:	11 82       	std	Z+1, r1	; 0x01
    5314:	89 81       	ldd	r24, Y+1	; 0x01
    5316:	9a 81       	ldd	r25, Y+2	; 0x02
    5318:	fc 01       	movw	r30, r24
    531a:	70 96       	adiw	r30, 0x10	; 16
    531c:	12 82       	std	Z+2, r1	; 0x02
    531e:	89 81       	ldd	r24, Y+1	; 0x01
    5320:	9a 81       	ldd	r25, Y+2	; 0x02
    5322:	fc 01       	movw	r30, r24
    5324:	70 96       	adiw	r30, 0x10	; 16
    5326:	81 e0       	ldi	r24, 0x01	; 1
    5328:	83 83       	std	Z+3, r24	; 0x03
    532a:	89 81       	ldd	r24, Y+1	; 0x01
    532c:	9a 81       	ldd	r25, Y+2	; 0x02
    532e:	fc 01       	movw	r30, r24
    5330:	70 96       	adiw	r30, 0x10	; 16
    5332:	81 e0       	ldi	r24, 0x01	; 1
    5334:	84 83       	std	Z+4, r24	; 0x04
    5336:	89 81       	ldd	r24, Y+1	; 0x01
    5338:	9a 81       	ldd	r25, Y+2	; 0x02
    533a:	fc 01       	movw	r30, r24
    533c:	70 96       	adiw	r30, 0x10	; 16
    533e:	15 82       	std	Z+5, r1	; 0x05
    5340:	89 81       	ldd	r24, Y+1	; 0x01
    5342:	9a 81       	ldd	r25, Y+2	; 0x02
    5344:	fc 01       	movw	r30, r24
    5346:	70 96       	adiw	r30, 0x10	; 16
    5348:	16 82       	std	Z+6, r1	; 0x06
    534a:	89 81       	ldd	r24, Y+1	; 0x01
    534c:	9a 81       	ldd	r25, Y+2	; 0x02
    534e:	fc 01       	movw	r30, r24
    5350:	70 96       	adiw	r30, 0x10	; 16
    5352:	81 e0       	ldi	r24, 0x01	; 1
    5354:	87 83       	std	Z+7, r24	; 0x07
            M[3][0]= 0; M[3][1]= 1; M[3][2]= 0; M[3][3]= 0; M[3][4]= 0; M[3][5]= 0; M[3][6]= 1; M[3][7]= 0;
    5356:	89 81       	ldd	r24, Y+1	; 0x01
    5358:	9a 81       	ldd	r25, Y+2	; 0x02
    535a:	fc 01       	movw	r30, r24
    535c:	78 96       	adiw	r30, 0x18	; 24
    535e:	10 82       	st	Z, r1
    5360:	89 81       	ldd	r24, Y+1	; 0x01
    5362:	9a 81       	ldd	r25, Y+2	; 0x02
    5364:	fc 01       	movw	r30, r24
    5366:	78 96       	adiw	r30, 0x18	; 24
    5368:	81 e0       	ldi	r24, 0x01	; 1
    536a:	81 83       	std	Z+1, r24	; 0x01
    536c:	89 81       	ldd	r24, Y+1	; 0x01
    536e:	9a 81       	ldd	r25, Y+2	; 0x02
    5370:	fc 01       	movw	r30, r24
    5372:	78 96       	adiw	r30, 0x18	; 24
    5374:	12 82       	std	Z+2, r1	; 0x02
    5376:	89 81       	ldd	r24, Y+1	; 0x01
    5378:	9a 81       	ldd	r25, Y+2	; 0x02
    537a:	fc 01       	movw	r30, r24
    537c:	78 96       	adiw	r30, 0x18	; 24
    537e:	13 82       	std	Z+3, r1	; 0x03
    5380:	89 81       	ldd	r24, Y+1	; 0x01
    5382:	9a 81       	ldd	r25, Y+2	; 0x02
    5384:	fc 01       	movw	r30, r24
    5386:	78 96       	adiw	r30, 0x18	; 24
    5388:	14 82       	std	Z+4, r1	; 0x04
    538a:	89 81       	ldd	r24, Y+1	; 0x01
    538c:	9a 81       	ldd	r25, Y+2	; 0x02
    538e:	fc 01       	movw	r30, r24
    5390:	78 96       	adiw	r30, 0x18	; 24
    5392:	15 82       	std	Z+5, r1	; 0x05
    5394:	89 81       	ldd	r24, Y+1	; 0x01
    5396:	9a 81       	ldd	r25, Y+2	; 0x02
    5398:	fc 01       	movw	r30, r24
    539a:	78 96       	adiw	r30, 0x18	; 24
    539c:	81 e0       	ldi	r24, 0x01	; 1
    539e:	86 83       	std	Z+6, r24	; 0x06
    53a0:	89 81       	ldd	r24, Y+1	; 0x01
    53a2:	9a 81       	ldd	r25, Y+2	; 0x02
    53a4:	fc 01       	movw	r30, r24
    53a6:	78 96       	adiw	r30, 0x18	; 24
    53a8:	17 82       	std	Z+7, r1	; 0x07
            M[4][0]= 0; M[4][1]= 1; M[4][2]= 1; M[4][3]= 0; M[4][4]= 0; M[4][5]= 1; M[4][6]= 1; M[4][7]= 0;
    53aa:	89 81       	ldd	r24, Y+1	; 0x01
    53ac:	9a 81       	ldd	r25, Y+2	; 0x02
    53ae:	fc 01       	movw	r30, r24
    53b0:	b0 96       	adiw	r30, 0x20	; 32
    53b2:	10 82       	st	Z, r1
    53b4:	89 81       	ldd	r24, Y+1	; 0x01
    53b6:	9a 81       	ldd	r25, Y+2	; 0x02
    53b8:	fc 01       	movw	r30, r24
    53ba:	b0 96       	adiw	r30, 0x20	; 32
    53bc:	81 e0       	ldi	r24, 0x01	; 1
    53be:	81 83       	std	Z+1, r24	; 0x01
    53c0:	89 81       	ldd	r24, Y+1	; 0x01
    53c2:	9a 81       	ldd	r25, Y+2	; 0x02
    53c4:	fc 01       	movw	r30, r24
    53c6:	b0 96       	adiw	r30, 0x20	; 32
    53c8:	81 e0       	ldi	r24, 0x01	; 1
    53ca:	82 83       	std	Z+2, r24	; 0x02
    53cc:	89 81       	ldd	r24, Y+1	; 0x01
    53ce:	9a 81       	ldd	r25, Y+2	; 0x02
    53d0:	fc 01       	movw	r30, r24
    53d2:	b0 96       	adiw	r30, 0x20	; 32
    53d4:	13 82       	std	Z+3, r1	; 0x03
    53d6:	89 81       	ldd	r24, Y+1	; 0x01
    53d8:	9a 81       	ldd	r25, Y+2	; 0x02
    53da:	fc 01       	movw	r30, r24
    53dc:	b0 96       	adiw	r30, 0x20	; 32
    53de:	14 82       	std	Z+4, r1	; 0x04
    53e0:	89 81       	ldd	r24, Y+1	; 0x01
    53e2:	9a 81       	ldd	r25, Y+2	; 0x02
    53e4:	fc 01       	movw	r30, r24
    53e6:	b0 96       	adiw	r30, 0x20	; 32
    53e8:	81 e0       	ldi	r24, 0x01	; 1
    53ea:	85 83       	std	Z+5, r24	; 0x05
    53ec:	89 81       	ldd	r24, Y+1	; 0x01
    53ee:	9a 81       	ldd	r25, Y+2	; 0x02
    53f0:	fc 01       	movw	r30, r24
    53f2:	b0 96       	adiw	r30, 0x20	; 32
    53f4:	81 e0       	ldi	r24, 0x01	; 1
    53f6:	86 83       	std	Z+6, r24	; 0x06
    53f8:	89 81       	ldd	r24, Y+1	; 0x01
    53fa:	9a 81       	ldd	r25, Y+2	; 0x02
    53fc:	fc 01       	movw	r30, r24
    53fe:	b0 96       	adiw	r30, 0x20	; 32
    5400:	17 82       	std	Z+7, r1	; 0x07
            M[5][0]= 0; M[5][1]= 0; M[5][2]= 1; M[5][3]= 0; M[5][4]= 0; M[5][5]= 1; M[5][6]= 0; M[5][7]= 0;
    5402:	89 81       	ldd	r24, Y+1	; 0x01
    5404:	9a 81       	ldd	r25, Y+2	; 0x02
    5406:	fc 01       	movw	r30, r24
    5408:	b8 96       	adiw	r30, 0x28	; 40
    540a:	10 82       	st	Z, r1
    540c:	89 81       	ldd	r24, Y+1	; 0x01
    540e:	9a 81       	ldd	r25, Y+2	; 0x02
    5410:	fc 01       	movw	r30, r24
    5412:	b8 96       	adiw	r30, 0x28	; 40
    5414:	11 82       	std	Z+1, r1	; 0x01
    5416:	89 81       	ldd	r24, Y+1	; 0x01
    5418:	9a 81       	ldd	r25, Y+2	; 0x02
    541a:	fc 01       	movw	r30, r24
    541c:	b8 96       	adiw	r30, 0x28	; 40
    541e:	81 e0       	ldi	r24, 0x01	; 1
    5420:	82 83       	std	Z+2, r24	; 0x02
    5422:	89 81       	ldd	r24, Y+1	; 0x01
    5424:	9a 81       	ldd	r25, Y+2	; 0x02
    5426:	fc 01       	movw	r30, r24
    5428:	b8 96       	adiw	r30, 0x28	; 40
    542a:	13 82       	std	Z+3, r1	; 0x03
    542c:	89 81       	ldd	r24, Y+1	; 0x01
    542e:	9a 81       	ldd	r25, Y+2	; 0x02
    5430:	fc 01       	movw	r30, r24
    5432:	b8 96       	adiw	r30, 0x28	; 40
    5434:	14 82       	std	Z+4, r1	; 0x04
    5436:	89 81       	ldd	r24, Y+1	; 0x01
    5438:	9a 81       	ldd	r25, Y+2	; 0x02
    543a:	fc 01       	movw	r30, r24
    543c:	b8 96       	adiw	r30, 0x28	; 40
    543e:	81 e0       	ldi	r24, 0x01	; 1
    5440:	85 83       	std	Z+5, r24	; 0x05
    5442:	89 81       	ldd	r24, Y+1	; 0x01
    5444:	9a 81       	ldd	r25, Y+2	; 0x02
    5446:	fc 01       	movw	r30, r24
    5448:	b8 96       	adiw	r30, 0x28	; 40
    544a:	16 82       	std	Z+6, r1	; 0x06
    544c:	89 81       	ldd	r24, Y+1	; 0x01
    544e:	9a 81       	ldd	r25, Y+2	; 0x02
    5450:	fc 01       	movw	r30, r24
    5452:	b8 96       	adiw	r30, 0x28	; 40
    5454:	17 82       	std	Z+7, r1	; 0x07
            M[6][0]= 0; M[6][1]= 0; M[6][2]= 0; M[6][3]= 1; M[6][4]= 1; M[6][5]= 0; M[6][6]= 0; M[6][7]= 0;
    5456:	89 81       	ldd	r24, Y+1	; 0x01
    5458:	9a 81       	ldd	r25, Y+2	; 0x02
    545a:	fc 01       	movw	r30, r24
    545c:	f0 96       	adiw	r30, 0x30	; 48
    545e:	10 82       	st	Z, r1
    5460:	89 81       	ldd	r24, Y+1	; 0x01
    5462:	9a 81       	ldd	r25, Y+2	; 0x02
    5464:	fc 01       	movw	r30, r24
    5466:	f0 96       	adiw	r30, 0x30	; 48
    5468:	11 82       	std	Z+1, r1	; 0x01
    546a:	89 81       	ldd	r24, Y+1	; 0x01
    546c:	9a 81       	ldd	r25, Y+2	; 0x02
    546e:	fc 01       	movw	r30, r24
    5470:	f0 96       	adiw	r30, 0x30	; 48
    5472:	12 82       	std	Z+2, r1	; 0x02
    5474:	89 81       	ldd	r24, Y+1	; 0x01
    5476:	9a 81       	ldd	r25, Y+2	; 0x02
    5478:	fc 01       	movw	r30, r24
    547a:	f0 96       	adiw	r30, 0x30	; 48
    547c:	81 e0       	ldi	r24, 0x01	; 1
    547e:	83 83       	std	Z+3, r24	; 0x03
    5480:	89 81       	ldd	r24, Y+1	; 0x01
    5482:	9a 81       	ldd	r25, Y+2	; 0x02
    5484:	fc 01       	movw	r30, r24
    5486:	f0 96       	adiw	r30, 0x30	; 48
    5488:	81 e0       	ldi	r24, 0x01	; 1
    548a:	84 83       	std	Z+4, r24	; 0x04
    548c:	89 81       	ldd	r24, Y+1	; 0x01
    548e:	9a 81       	ldd	r25, Y+2	; 0x02
    5490:	fc 01       	movw	r30, r24
    5492:	f0 96       	adiw	r30, 0x30	; 48
    5494:	15 82       	std	Z+5, r1	; 0x05
    5496:	89 81       	ldd	r24, Y+1	; 0x01
    5498:	9a 81       	ldd	r25, Y+2	; 0x02
    549a:	fc 01       	movw	r30, r24
    549c:	f0 96       	adiw	r30, 0x30	; 48
    549e:	16 82       	std	Z+6, r1	; 0x06
    54a0:	89 81       	ldd	r24, Y+1	; 0x01
    54a2:	9a 81       	ldd	r25, Y+2	; 0x02
    54a4:	fc 01       	movw	r30, r24
    54a6:	f0 96       	adiw	r30, 0x30	; 48
    54a8:	17 82       	std	Z+7, r1	; 0x07
            M[7][0]= 0; M[7][1]= 0; M[7][2]= 0; M[7][3]= 0; M[7][4]= 0; M[7][5]= 0; M[7][6]= 0; M[7][7]= 0;
    54aa:	89 81       	ldd	r24, Y+1	; 0x01
    54ac:	9a 81       	ldd	r25, Y+2	; 0x02
    54ae:	fc 01       	movw	r30, r24
    54b0:	f8 96       	adiw	r30, 0x38	; 56
    54b2:	10 82       	st	Z, r1
    54b4:	89 81       	ldd	r24, Y+1	; 0x01
    54b6:	9a 81       	ldd	r25, Y+2	; 0x02
    54b8:	fc 01       	movw	r30, r24
    54ba:	f8 96       	adiw	r30, 0x38	; 56
    54bc:	11 82       	std	Z+1, r1	; 0x01
    54be:	89 81       	ldd	r24, Y+1	; 0x01
    54c0:	9a 81       	ldd	r25, Y+2	; 0x02
    54c2:	fc 01       	movw	r30, r24
    54c4:	f8 96       	adiw	r30, 0x38	; 56
    54c6:	12 82       	std	Z+2, r1	; 0x02
    54c8:	89 81       	ldd	r24, Y+1	; 0x01
    54ca:	9a 81       	ldd	r25, Y+2	; 0x02
    54cc:	fc 01       	movw	r30, r24
    54ce:	f8 96       	adiw	r30, 0x38	; 56
    54d0:	13 82       	std	Z+3, r1	; 0x03
    54d2:	89 81       	ldd	r24, Y+1	; 0x01
    54d4:	9a 81       	ldd	r25, Y+2	; 0x02
    54d6:	fc 01       	movw	r30, r24
    54d8:	f8 96       	adiw	r30, 0x38	; 56
    54da:	14 82       	std	Z+4, r1	; 0x04
    54dc:	89 81       	ldd	r24, Y+1	; 0x01
    54de:	9a 81       	ldd	r25, Y+2	; 0x02
    54e0:	fc 01       	movw	r30, r24
    54e2:	f8 96       	adiw	r30, 0x38	; 56
    54e4:	15 82       	std	Z+5, r1	; 0x05
    54e6:	89 81       	ldd	r24, Y+1	; 0x01
    54e8:	9a 81       	ldd	r25, Y+2	; 0x02
    54ea:	fc 01       	movw	r30, r24
    54ec:	f8 96       	adiw	r30, 0x38	; 56
    54ee:	16 82       	std	Z+6, r1	; 0x06
    54f0:	89 81       	ldd	r24, Y+1	; 0x01
    54f2:	9a 81       	ldd	r25, Y+2	; 0x02
    54f4:	fc 01       	movw	r30, r24
    54f6:	f8 96       	adiw	r30, 0x38	; 56
    54f8:	17 82       	std	Z+7, r1	; 0x07
    54fa:	30 c1       	rjmp	.+608    	; 0x575c <Mat8x8Letters_voidLetter+0x1c76>
        }
        break;

    case '\0':
    {
        M[0][0]= 0; M[0][1]= 0; M[0][2]= 0; M[0][3]= 0; M[0][4]= 0; M[0][5]= 0; M[0][6]= 0; M[0][7]= 0;
    54fc:	e9 81       	ldd	r30, Y+1	; 0x01
    54fe:	fa 81       	ldd	r31, Y+2	; 0x02
    5500:	10 82       	st	Z, r1
    5502:	e9 81       	ldd	r30, Y+1	; 0x01
    5504:	fa 81       	ldd	r31, Y+2	; 0x02
    5506:	11 82       	std	Z+1, r1	; 0x01
    5508:	e9 81       	ldd	r30, Y+1	; 0x01
    550a:	fa 81       	ldd	r31, Y+2	; 0x02
    550c:	12 82       	std	Z+2, r1	; 0x02
    550e:	e9 81       	ldd	r30, Y+1	; 0x01
    5510:	fa 81       	ldd	r31, Y+2	; 0x02
    5512:	13 82       	std	Z+3, r1	; 0x03
    5514:	e9 81       	ldd	r30, Y+1	; 0x01
    5516:	fa 81       	ldd	r31, Y+2	; 0x02
    5518:	14 82       	std	Z+4, r1	; 0x04
    551a:	e9 81       	ldd	r30, Y+1	; 0x01
    551c:	fa 81       	ldd	r31, Y+2	; 0x02
    551e:	15 82       	std	Z+5, r1	; 0x05
    5520:	e9 81       	ldd	r30, Y+1	; 0x01
    5522:	fa 81       	ldd	r31, Y+2	; 0x02
    5524:	16 82       	std	Z+6, r1	; 0x06
    5526:	e9 81       	ldd	r30, Y+1	; 0x01
    5528:	fa 81       	ldd	r31, Y+2	; 0x02
    552a:	17 82       	std	Z+7, r1	; 0x07
        M[1][0]= 0; M[1][1]= 0; M[1][2]= 0; M[1][3]= 0; M[1][4]= 0; M[1][5]= 0; M[1][6]= 0; M[1][7]= 0;
    552c:	89 81       	ldd	r24, Y+1	; 0x01
    552e:	9a 81       	ldd	r25, Y+2	; 0x02
    5530:	fc 01       	movw	r30, r24
    5532:	38 96       	adiw	r30, 0x08	; 8
    5534:	10 82       	st	Z, r1
    5536:	89 81       	ldd	r24, Y+1	; 0x01
    5538:	9a 81       	ldd	r25, Y+2	; 0x02
    553a:	fc 01       	movw	r30, r24
    553c:	38 96       	adiw	r30, 0x08	; 8
    553e:	11 82       	std	Z+1, r1	; 0x01
    5540:	89 81       	ldd	r24, Y+1	; 0x01
    5542:	9a 81       	ldd	r25, Y+2	; 0x02
    5544:	fc 01       	movw	r30, r24
    5546:	38 96       	adiw	r30, 0x08	; 8
    5548:	12 82       	std	Z+2, r1	; 0x02
    554a:	89 81       	ldd	r24, Y+1	; 0x01
    554c:	9a 81       	ldd	r25, Y+2	; 0x02
    554e:	fc 01       	movw	r30, r24
    5550:	38 96       	adiw	r30, 0x08	; 8
    5552:	13 82       	std	Z+3, r1	; 0x03
    5554:	89 81       	ldd	r24, Y+1	; 0x01
    5556:	9a 81       	ldd	r25, Y+2	; 0x02
    5558:	fc 01       	movw	r30, r24
    555a:	38 96       	adiw	r30, 0x08	; 8
    555c:	14 82       	std	Z+4, r1	; 0x04
    555e:	89 81       	ldd	r24, Y+1	; 0x01
    5560:	9a 81       	ldd	r25, Y+2	; 0x02
    5562:	fc 01       	movw	r30, r24
    5564:	38 96       	adiw	r30, 0x08	; 8
    5566:	15 82       	std	Z+5, r1	; 0x05
    5568:	89 81       	ldd	r24, Y+1	; 0x01
    556a:	9a 81       	ldd	r25, Y+2	; 0x02
    556c:	fc 01       	movw	r30, r24
    556e:	38 96       	adiw	r30, 0x08	; 8
    5570:	16 82       	std	Z+6, r1	; 0x06
    5572:	89 81       	ldd	r24, Y+1	; 0x01
    5574:	9a 81       	ldd	r25, Y+2	; 0x02
    5576:	fc 01       	movw	r30, r24
    5578:	38 96       	adiw	r30, 0x08	; 8
    557a:	17 82       	std	Z+7, r1	; 0x07
        M[2][0]= 0; M[2][1]= 0; M[2][2]= 0; M[2][3]= 0; M[2][4]= 0; M[2][5]= 0; M[2][6]= 0; M[2][7]= 0;
    557c:	89 81       	ldd	r24, Y+1	; 0x01
    557e:	9a 81       	ldd	r25, Y+2	; 0x02
    5580:	fc 01       	movw	r30, r24
    5582:	70 96       	adiw	r30, 0x10	; 16
    5584:	10 82       	st	Z, r1
    5586:	89 81       	ldd	r24, Y+1	; 0x01
    5588:	9a 81       	ldd	r25, Y+2	; 0x02
    558a:	fc 01       	movw	r30, r24
    558c:	70 96       	adiw	r30, 0x10	; 16
    558e:	11 82       	std	Z+1, r1	; 0x01
    5590:	89 81       	ldd	r24, Y+1	; 0x01
    5592:	9a 81       	ldd	r25, Y+2	; 0x02
    5594:	fc 01       	movw	r30, r24
    5596:	70 96       	adiw	r30, 0x10	; 16
    5598:	12 82       	std	Z+2, r1	; 0x02
    559a:	89 81       	ldd	r24, Y+1	; 0x01
    559c:	9a 81       	ldd	r25, Y+2	; 0x02
    559e:	fc 01       	movw	r30, r24
    55a0:	70 96       	adiw	r30, 0x10	; 16
    55a2:	13 82       	std	Z+3, r1	; 0x03
    55a4:	89 81       	ldd	r24, Y+1	; 0x01
    55a6:	9a 81       	ldd	r25, Y+2	; 0x02
    55a8:	fc 01       	movw	r30, r24
    55aa:	70 96       	adiw	r30, 0x10	; 16
    55ac:	14 82       	std	Z+4, r1	; 0x04
    55ae:	89 81       	ldd	r24, Y+1	; 0x01
    55b0:	9a 81       	ldd	r25, Y+2	; 0x02
    55b2:	fc 01       	movw	r30, r24
    55b4:	70 96       	adiw	r30, 0x10	; 16
    55b6:	15 82       	std	Z+5, r1	; 0x05
    55b8:	89 81       	ldd	r24, Y+1	; 0x01
    55ba:	9a 81       	ldd	r25, Y+2	; 0x02
    55bc:	fc 01       	movw	r30, r24
    55be:	70 96       	adiw	r30, 0x10	; 16
    55c0:	16 82       	std	Z+6, r1	; 0x06
    55c2:	89 81       	ldd	r24, Y+1	; 0x01
    55c4:	9a 81       	ldd	r25, Y+2	; 0x02
    55c6:	fc 01       	movw	r30, r24
    55c8:	70 96       	adiw	r30, 0x10	; 16
    55ca:	17 82       	std	Z+7, r1	; 0x07
        M[3][0]= 0; M[3][1]= 0; M[3][2]= 0; M[3][3]= 0; M[3][4]= 0; M[3][5]= 0; M[3][6]= 0; M[3][7]= 0;
    55cc:	89 81       	ldd	r24, Y+1	; 0x01
    55ce:	9a 81       	ldd	r25, Y+2	; 0x02
    55d0:	fc 01       	movw	r30, r24
    55d2:	78 96       	adiw	r30, 0x18	; 24
    55d4:	10 82       	st	Z, r1
    55d6:	89 81       	ldd	r24, Y+1	; 0x01
    55d8:	9a 81       	ldd	r25, Y+2	; 0x02
    55da:	fc 01       	movw	r30, r24
    55dc:	78 96       	adiw	r30, 0x18	; 24
    55de:	11 82       	std	Z+1, r1	; 0x01
    55e0:	89 81       	ldd	r24, Y+1	; 0x01
    55e2:	9a 81       	ldd	r25, Y+2	; 0x02
    55e4:	fc 01       	movw	r30, r24
    55e6:	78 96       	adiw	r30, 0x18	; 24
    55e8:	12 82       	std	Z+2, r1	; 0x02
    55ea:	89 81       	ldd	r24, Y+1	; 0x01
    55ec:	9a 81       	ldd	r25, Y+2	; 0x02
    55ee:	fc 01       	movw	r30, r24
    55f0:	78 96       	adiw	r30, 0x18	; 24
    55f2:	13 82       	std	Z+3, r1	; 0x03
    55f4:	89 81       	ldd	r24, Y+1	; 0x01
    55f6:	9a 81       	ldd	r25, Y+2	; 0x02
    55f8:	fc 01       	movw	r30, r24
    55fa:	78 96       	adiw	r30, 0x18	; 24
    55fc:	14 82       	std	Z+4, r1	; 0x04
    55fe:	89 81       	ldd	r24, Y+1	; 0x01
    5600:	9a 81       	ldd	r25, Y+2	; 0x02
    5602:	fc 01       	movw	r30, r24
    5604:	78 96       	adiw	r30, 0x18	; 24
    5606:	15 82       	std	Z+5, r1	; 0x05
    5608:	89 81       	ldd	r24, Y+1	; 0x01
    560a:	9a 81       	ldd	r25, Y+2	; 0x02
    560c:	fc 01       	movw	r30, r24
    560e:	78 96       	adiw	r30, 0x18	; 24
    5610:	16 82       	std	Z+6, r1	; 0x06
    5612:	89 81       	ldd	r24, Y+1	; 0x01
    5614:	9a 81       	ldd	r25, Y+2	; 0x02
    5616:	fc 01       	movw	r30, r24
    5618:	78 96       	adiw	r30, 0x18	; 24
    561a:	17 82       	std	Z+7, r1	; 0x07
        M[4][0]= 0; M[4][1]= 0; M[4][2]= 0; M[4][3]= 0; M[4][4]= 0; M[4][5]= 0; M[4][6]= 0; M[4][7]= 0;
    561c:	89 81       	ldd	r24, Y+1	; 0x01
    561e:	9a 81       	ldd	r25, Y+2	; 0x02
    5620:	fc 01       	movw	r30, r24
    5622:	b0 96       	adiw	r30, 0x20	; 32
    5624:	10 82       	st	Z, r1
    5626:	89 81       	ldd	r24, Y+1	; 0x01
    5628:	9a 81       	ldd	r25, Y+2	; 0x02
    562a:	fc 01       	movw	r30, r24
    562c:	b0 96       	adiw	r30, 0x20	; 32
    562e:	11 82       	std	Z+1, r1	; 0x01
    5630:	89 81       	ldd	r24, Y+1	; 0x01
    5632:	9a 81       	ldd	r25, Y+2	; 0x02
    5634:	fc 01       	movw	r30, r24
    5636:	b0 96       	adiw	r30, 0x20	; 32
    5638:	12 82       	std	Z+2, r1	; 0x02
    563a:	89 81       	ldd	r24, Y+1	; 0x01
    563c:	9a 81       	ldd	r25, Y+2	; 0x02
    563e:	fc 01       	movw	r30, r24
    5640:	b0 96       	adiw	r30, 0x20	; 32
    5642:	13 82       	std	Z+3, r1	; 0x03
    5644:	89 81       	ldd	r24, Y+1	; 0x01
    5646:	9a 81       	ldd	r25, Y+2	; 0x02
    5648:	fc 01       	movw	r30, r24
    564a:	b0 96       	adiw	r30, 0x20	; 32
    564c:	14 82       	std	Z+4, r1	; 0x04
    564e:	89 81       	ldd	r24, Y+1	; 0x01
    5650:	9a 81       	ldd	r25, Y+2	; 0x02
    5652:	fc 01       	movw	r30, r24
    5654:	b0 96       	adiw	r30, 0x20	; 32
    5656:	15 82       	std	Z+5, r1	; 0x05
    5658:	89 81       	ldd	r24, Y+1	; 0x01
    565a:	9a 81       	ldd	r25, Y+2	; 0x02
    565c:	fc 01       	movw	r30, r24
    565e:	b0 96       	adiw	r30, 0x20	; 32
    5660:	16 82       	std	Z+6, r1	; 0x06
    5662:	89 81       	ldd	r24, Y+1	; 0x01
    5664:	9a 81       	ldd	r25, Y+2	; 0x02
    5666:	fc 01       	movw	r30, r24
    5668:	b0 96       	adiw	r30, 0x20	; 32
    566a:	17 82       	std	Z+7, r1	; 0x07
        M[5][0]= 0; M[5][1]= 0; M[5][2]= 0; M[5][3]= 0; M[5][4]= 0; M[5][5]= 0; M[5][6]= 0; M[5][7]= 0;
    566c:	89 81       	ldd	r24, Y+1	; 0x01
    566e:	9a 81       	ldd	r25, Y+2	; 0x02
    5670:	fc 01       	movw	r30, r24
    5672:	b8 96       	adiw	r30, 0x28	; 40
    5674:	10 82       	st	Z, r1
    5676:	89 81       	ldd	r24, Y+1	; 0x01
    5678:	9a 81       	ldd	r25, Y+2	; 0x02
    567a:	fc 01       	movw	r30, r24
    567c:	b8 96       	adiw	r30, 0x28	; 40
    567e:	11 82       	std	Z+1, r1	; 0x01
    5680:	89 81       	ldd	r24, Y+1	; 0x01
    5682:	9a 81       	ldd	r25, Y+2	; 0x02
    5684:	fc 01       	movw	r30, r24
    5686:	b8 96       	adiw	r30, 0x28	; 40
    5688:	12 82       	std	Z+2, r1	; 0x02
    568a:	89 81       	ldd	r24, Y+1	; 0x01
    568c:	9a 81       	ldd	r25, Y+2	; 0x02
    568e:	fc 01       	movw	r30, r24
    5690:	b8 96       	adiw	r30, 0x28	; 40
    5692:	13 82       	std	Z+3, r1	; 0x03
    5694:	89 81       	ldd	r24, Y+1	; 0x01
    5696:	9a 81       	ldd	r25, Y+2	; 0x02
    5698:	fc 01       	movw	r30, r24
    569a:	b8 96       	adiw	r30, 0x28	; 40
    569c:	14 82       	std	Z+4, r1	; 0x04
    569e:	89 81       	ldd	r24, Y+1	; 0x01
    56a0:	9a 81       	ldd	r25, Y+2	; 0x02
    56a2:	fc 01       	movw	r30, r24
    56a4:	b8 96       	adiw	r30, 0x28	; 40
    56a6:	15 82       	std	Z+5, r1	; 0x05
    56a8:	89 81       	ldd	r24, Y+1	; 0x01
    56aa:	9a 81       	ldd	r25, Y+2	; 0x02
    56ac:	fc 01       	movw	r30, r24
    56ae:	b8 96       	adiw	r30, 0x28	; 40
    56b0:	16 82       	std	Z+6, r1	; 0x06
    56b2:	89 81       	ldd	r24, Y+1	; 0x01
    56b4:	9a 81       	ldd	r25, Y+2	; 0x02
    56b6:	fc 01       	movw	r30, r24
    56b8:	b8 96       	adiw	r30, 0x28	; 40
    56ba:	17 82       	std	Z+7, r1	; 0x07
        M[6][0]= 0; M[6][1]= 0; M[6][2]= 0; M[6][3]= 0; M[6][4]= 0; M[6][5]= 0; M[6][6]= 0; M[6][7]= 0;
    56bc:	89 81       	ldd	r24, Y+1	; 0x01
    56be:	9a 81       	ldd	r25, Y+2	; 0x02
    56c0:	fc 01       	movw	r30, r24
    56c2:	f0 96       	adiw	r30, 0x30	; 48
    56c4:	10 82       	st	Z, r1
    56c6:	89 81       	ldd	r24, Y+1	; 0x01
    56c8:	9a 81       	ldd	r25, Y+2	; 0x02
    56ca:	fc 01       	movw	r30, r24
    56cc:	f0 96       	adiw	r30, 0x30	; 48
    56ce:	11 82       	std	Z+1, r1	; 0x01
    56d0:	89 81       	ldd	r24, Y+1	; 0x01
    56d2:	9a 81       	ldd	r25, Y+2	; 0x02
    56d4:	fc 01       	movw	r30, r24
    56d6:	f0 96       	adiw	r30, 0x30	; 48
    56d8:	12 82       	std	Z+2, r1	; 0x02
    56da:	89 81       	ldd	r24, Y+1	; 0x01
    56dc:	9a 81       	ldd	r25, Y+2	; 0x02
    56de:	fc 01       	movw	r30, r24
    56e0:	f0 96       	adiw	r30, 0x30	; 48
    56e2:	13 82       	std	Z+3, r1	; 0x03
    56e4:	89 81       	ldd	r24, Y+1	; 0x01
    56e6:	9a 81       	ldd	r25, Y+2	; 0x02
    56e8:	fc 01       	movw	r30, r24
    56ea:	f0 96       	adiw	r30, 0x30	; 48
    56ec:	14 82       	std	Z+4, r1	; 0x04
    56ee:	89 81       	ldd	r24, Y+1	; 0x01
    56f0:	9a 81       	ldd	r25, Y+2	; 0x02
    56f2:	fc 01       	movw	r30, r24
    56f4:	f0 96       	adiw	r30, 0x30	; 48
    56f6:	15 82       	std	Z+5, r1	; 0x05
    56f8:	89 81       	ldd	r24, Y+1	; 0x01
    56fa:	9a 81       	ldd	r25, Y+2	; 0x02
    56fc:	fc 01       	movw	r30, r24
    56fe:	f0 96       	adiw	r30, 0x30	; 48
    5700:	16 82       	std	Z+6, r1	; 0x06
    5702:	89 81       	ldd	r24, Y+1	; 0x01
    5704:	9a 81       	ldd	r25, Y+2	; 0x02
    5706:	fc 01       	movw	r30, r24
    5708:	f0 96       	adiw	r30, 0x30	; 48
    570a:	17 82       	std	Z+7, r1	; 0x07
        M[7][0]= 0; M[7][1]= 0; M[7][2]= 0; M[7][3]= 0; M[7][4]= 0; M[7][5]= 0; M[7][6]= 0; M[7][7]= 0;
    570c:	89 81       	ldd	r24, Y+1	; 0x01
    570e:	9a 81       	ldd	r25, Y+2	; 0x02
    5710:	fc 01       	movw	r30, r24
    5712:	f8 96       	adiw	r30, 0x38	; 56
    5714:	10 82       	st	Z, r1
    5716:	89 81       	ldd	r24, Y+1	; 0x01
    5718:	9a 81       	ldd	r25, Y+2	; 0x02
    571a:	fc 01       	movw	r30, r24
    571c:	f8 96       	adiw	r30, 0x38	; 56
    571e:	11 82       	std	Z+1, r1	; 0x01
    5720:	89 81       	ldd	r24, Y+1	; 0x01
    5722:	9a 81       	ldd	r25, Y+2	; 0x02
    5724:	fc 01       	movw	r30, r24
    5726:	f8 96       	adiw	r30, 0x38	; 56
    5728:	12 82       	std	Z+2, r1	; 0x02
    572a:	89 81       	ldd	r24, Y+1	; 0x01
    572c:	9a 81       	ldd	r25, Y+2	; 0x02
    572e:	fc 01       	movw	r30, r24
    5730:	f8 96       	adiw	r30, 0x38	; 56
    5732:	13 82       	std	Z+3, r1	; 0x03
    5734:	89 81       	ldd	r24, Y+1	; 0x01
    5736:	9a 81       	ldd	r25, Y+2	; 0x02
    5738:	fc 01       	movw	r30, r24
    573a:	f8 96       	adiw	r30, 0x38	; 56
    573c:	14 82       	std	Z+4, r1	; 0x04
    573e:	89 81       	ldd	r24, Y+1	; 0x01
    5740:	9a 81       	ldd	r25, Y+2	; 0x02
    5742:	fc 01       	movw	r30, r24
    5744:	f8 96       	adiw	r30, 0x38	; 56
    5746:	15 82       	std	Z+5, r1	; 0x05
    5748:	89 81       	ldd	r24, Y+1	; 0x01
    574a:	9a 81       	ldd	r25, Y+2	; 0x02
    574c:	fc 01       	movw	r30, r24
    574e:	f8 96       	adiw	r30, 0x38	; 56
    5750:	16 82       	std	Z+6, r1	; 0x06
    5752:	89 81       	ldd	r24, Y+1	; 0x01
    5754:	9a 81       	ldd	r25, Y+2	; 0x02
    5756:	fc 01       	movw	r30, r24
    5758:	f8 96       	adiw	r30, 0x38	; 56
    575a:	17 82       	std	Z+7, r1	; 0x07
    break;

    default:
        break;
    }
}
    575c:	0f 90       	pop	r0
    575e:	0f 90       	pop	r0
    5760:	0f 90       	pop	r0
    5762:	0f 90       	pop	r0
    5764:	0f 90       	pop	r0
    5766:	cf 91       	pop	r28
    5768:	df 91       	pop	r29
    576a:	08 95       	ret

0000576c <main>:
// #include "./SEVSEG_DRIVER/SEVSEG_int.h"
#include <stdlib.h>
#include "avr/delay.h"

int main()
{
    576c:	0f 93       	push	r16
    576e:	1f 93       	push	r17
    5770:	df 93       	push	r29
    5772:	cf 93       	push	r28
    5774:	cd b7       	in	r28, 0x3d	; 61
    5776:	de b7       	in	r29, 0x3e	; 62
    5778:	c2 56       	subi	r28, 0x62	; 98
    577a:	d0 40       	sbci	r29, 0x00	; 0
    577c:	0f b6       	in	r0, 0x3f	; 63
    577e:	f8 94       	cli
    5780:	de bf       	out	0x3e, r29	; 62
    5782:	0f be       	out	0x3f, r0	; 63
    5784:	cd bf       	out	0x3d, r28	; 61

    DIO_voidInitialize();
    5786:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <DIO_voidInitialize>
    KEYPAD_voidInitialize();
    578a:	0e 94 20 1b 	call	0x3640	; 0x3640 <KEYPAD_voidInitialize>
    LCD_voidInitialize();
    578e:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <LCD_voidInitialize>
    //    s8 * name = "Shady";
    //    s8 x = 'X';
    //    s8 y = 'Y';
    LCD_voidPrintf("Hel\tlo %3d \n on", 2365);
    5792:	00 d0       	rcall	.+0      	; 0x5794 <main+0x28>
    5794:	00 d0       	rcall	.+0      	; 0x5796 <main+0x2a>
    5796:	ed b7       	in	r30, 0x3d	; 61
    5798:	fe b7       	in	r31, 0x3e	; 62
    579a:	31 96       	adiw	r30, 0x01	; 1
    579c:	80 e6       	ldi	r24, 0x60	; 96
    579e:	90 e0       	ldi	r25, 0x00	; 0
    57a0:	91 83       	std	Z+1, r25	; 0x01
    57a2:	80 83       	st	Z, r24
    57a4:	8d e3       	ldi	r24, 0x3D	; 61
    57a6:	99 e0       	ldi	r25, 0x09	; 9
    57a8:	93 83       	std	Z+3, r25	; 0x03
    57aa:	82 83       	std	Z+2, r24	; 0x02
    57ac:	0e 94 56 18 	call	0x30ac	; 0x30ac <LCD_voidPrintf>
    57b0:	0f 90       	pop	r0
    57b2:	0f 90       	pop	r0
    57b4:	0f 90       	pop	r0
    57b6:	0f 90       	pop	r0
    LCD_voidWriteIntegerDecFLored(4536,3);
    57b8:	88 eb       	ldi	r24, 0xB8	; 184
    57ba:	91 e1       	ldi	r25, 0x11	; 17
    57bc:	63 e0       	ldi	r22, 0x03	; 3
    57be:	70 e0       	ldi	r23, 0x00	; 0
    57c0:	0e 94 35 17 	call	0x2e6a	; 0x2e6a <LCD_voidWriteIntegerDecFLored>
    //    LCD_voidWriteIntegerDec(2533);

    while (1)
    {
        if (KEYPAD_u8IsPressed(KEYPAD_SWITCH1))
    57c4:	80 e0       	ldi	r24, 0x00	; 0
    57c6:	0e 94 37 1b 	call	0x366e	; 0x366e <KEYPAD_u8IsPressed>
    57ca:	88 23       	and	r24, r24
    57cc:	09 f4       	brne	.+2      	; 0x57d0 <main+0x64>
    57ce:	c6 c0       	rjmp	.+396    	; 0x595c <main+0x1f0>
        {
            LCD_voidPrintf("Hello %x", 305);
    57d0:	00 d0       	rcall	.+0      	; 0x57d2 <main+0x66>
    57d2:	00 d0       	rcall	.+0      	; 0x57d4 <main+0x68>
    57d4:	ed b7       	in	r30, 0x3d	; 61
    57d6:	fe b7       	in	r31, 0x3e	; 62
    57d8:	31 96       	adiw	r30, 0x01	; 1
    57da:	80 e7       	ldi	r24, 0x70	; 112
    57dc:	90 e0       	ldi	r25, 0x00	; 0
    57de:	91 83       	std	Z+1, r25	; 0x01
    57e0:	80 83       	st	Z, r24
    57e2:	81 e3       	ldi	r24, 0x31	; 49
    57e4:	91 e0       	ldi	r25, 0x01	; 1
    57e6:	93 83       	std	Z+3, r25	; 0x03
    57e8:	82 83       	std	Z+2, r24	; 0x02
    57ea:	0e 94 56 18 	call	0x30ac	; 0x30ac <LCD_voidPrintf>
    57ee:	0f 90       	pop	r0
    57f0:	0f 90       	pop	r0
    57f2:	0f 90       	pop	r0
    57f4:	0f 90       	pop	r0
    57f6:	fe 01       	movw	r30, r28
    57f8:	e1 5a       	subi	r30, 0xA1	; 161
    57fa:	ff 4f       	sbci	r31, 0xFF	; 255
    57fc:	80 e0       	ldi	r24, 0x00	; 0
    57fe:	90 e0       	ldi	r25, 0x00	; 0
    5800:	aa ef       	ldi	r26, 0xFA	; 250
    5802:	b3 e4       	ldi	r27, 0x43	; 67
    5804:	80 83       	st	Z, r24
    5806:	91 83       	std	Z+1, r25	; 0x01
    5808:	a2 83       	std	Z+2, r26	; 0x02
    580a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    580c:	8e 01       	movw	r16, r28
    580e:	05 5a       	subi	r16, 0xA5	; 165
    5810:	1f 4f       	sbci	r17, 0xFF	; 255
    5812:	fe 01       	movw	r30, r28
    5814:	e1 5a       	subi	r30, 0xA1	; 161
    5816:	ff 4f       	sbci	r31, 0xFF	; 255
    5818:	60 81       	ld	r22, Z
    581a:	71 81       	ldd	r23, Z+1	; 0x01
    581c:	82 81       	ldd	r24, Z+2	; 0x02
    581e:	93 81       	ldd	r25, Z+3	; 0x03
    5820:	20 e0       	ldi	r18, 0x00	; 0
    5822:	30 e0       	ldi	r19, 0x00	; 0
    5824:	4a e7       	ldi	r20, 0x7A	; 122
    5826:	55 e4       	ldi	r21, 0x45	; 69
    5828:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    582c:	dc 01       	movw	r26, r24
    582e:	cb 01       	movw	r24, r22
    5830:	f8 01       	movw	r30, r16
    5832:	80 83       	st	Z, r24
    5834:	91 83       	std	Z+1, r25	; 0x01
    5836:	a2 83       	std	Z+2, r26	; 0x02
    5838:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    583a:	fe 01       	movw	r30, r28
    583c:	e5 5a       	subi	r30, 0xA5	; 165
    583e:	ff 4f       	sbci	r31, 0xFF	; 255
    5840:	60 81       	ld	r22, Z
    5842:	71 81       	ldd	r23, Z+1	; 0x01
    5844:	82 81       	ldd	r24, Z+2	; 0x02
    5846:	93 81       	ldd	r25, Z+3	; 0x03
    5848:	20 e0       	ldi	r18, 0x00	; 0
    584a:	30 e0       	ldi	r19, 0x00	; 0
    584c:	40 e8       	ldi	r20, 0x80	; 128
    584e:	5f e3       	ldi	r21, 0x3F	; 63
    5850:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5854:	88 23       	and	r24, r24
    5856:	44 f4       	brge	.+16     	; 0x5868 <main+0xfc>
		__ticks = 1;
    5858:	fe 01       	movw	r30, r28
    585a:	e7 5a       	subi	r30, 0xA7	; 167
    585c:	ff 4f       	sbci	r31, 0xFF	; 255
    585e:	81 e0       	ldi	r24, 0x01	; 1
    5860:	90 e0       	ldi	r25, 0x00	; 0
    5862:	91 83       	std	Z+1, r25	; 0x01
    5864:	80 83       	st	Z, r24
    5866:	64 c0       	rjmp	.+200    	; 0x5930 <main+0x1c4>
	else if (__tmp > 65535)
    5868:	fe 01       	movw	r30, r28
    586a:	e5 5a       	subi	r30, 0xA5	; 165
    586c:	ff 4f       	sbci	r31, 0xFF	; 255
    586e:	60 81       	ld	r22, Z
    5870:	71 81       	ldd	r23, Z+1	; 0x01
    5872:	82 81       	ldd	r24, Z+2	; 0x02
    5874:	93 81       	ldd	r25, Z+3	; 0x03
    5876:	20 e0       	ldi	r18, 0x00	; 0
    5878:	3f ef       	ldi	r19, 0xFF	; 255
    587a:	4f e7       	ldi	r20, 0x7F	; 127
    587c:	57 e4       	ldi	r21, 0x47	; 71
    587e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5882:	18 16       	cp	r1, r24
    5884:	0c f0       	brlt	.+2      	; 0x5888 <main+0x11c>
    5886:	43 c0       	rjmp	.+134    	; 0x590e <main+0x1a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5888:	fe 01       	movw	r30, r28
    588a:	e1 5a       	subi	r30, 0xA1	; 161
    588c:	ff 4f       	sbci	r31, 0xFF	; 255
    588e:	60 81       	ld	r22, Z
    5890:	71 81       	ldd	r23, Z+1	; 0x01
    5892:	82 81       	ldd	r24, Z+2	; 0x02
    5894:	93 81       	ldd	r25, Z+3	; 0x03
    5896:	20 e0       	ldi	r18, 0x00	; 0
    5898:	30 e0       	ldi	r19, 0x00	; 0
    589a:	40 e2       	ldi	r20, 0x20	; 32
    589c:	51 e4       	ldi	r21, 0x41	; 65
    589e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    58a2:	dc 01       	movw	r26, r24
    58a4:	cb 01       	movw	r24, r22
    58a6:	8e 01       	movw	r16, r28
    58a8:	07 5a       	subi	r16, 0xA7	; 167
    58aa:	1f 4f       	sbci	r17, 0xFF	; 255
    58ac:	bc 01       	movw	r22, r24
    58ae:	cd 01       	movw	r24, r26
    58b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    58b4:	dc 01       	movw	r26, r24
    58b6:	cb 01       	movw	r24, r22
    58b8:	f8 01       	movw	r30, r16
    58ba:	91 83       	std	Z+1, r25	; 0x01
    58bc:	80 83       	st	Z, r24
    58be:	1f c0       	rjmp	.+62     	; 0x58fe <main+0x192>
    58c0:	fe 01       	movw	r30, r28
    58c2:	e9 5a       	subi	r30, 0xA9	; 169
    58c4:	ff 4f       	sbci	r31, 0xFF	; 255
    58c6:	80 e9       	ldi	r24, 0x90	; 144
    58c8:	91 e0       	ldi	r25, 0x01	; 1
    58ca:	91 83       	std	Z+1, r25	; 0x01
    58cc:	80 83       	st	Z, r24
    58ce:	fe 01       	movw	r30, r28
    58d0:	e9 5a       	subi	r30, 0xA9	; 169
    58d2:	ff 4f       	sbci	r31, 0xFF	; 255
    58d4:	80 81       	ld	r24, Z
    58d6:	91 81       	ldd	r25, Z+1	; 0x01
    58d8:	01 97       	sbiw	r24, 0x01	; 1
    58da:	f1 f7       	brne	.-4      	; 0x58d8 <main+0x16c>
    58dc:	fe 01       	movw	r30, r28
    58de:	e9 5a       	subi	r30, 0xA9	; 169
    58e0:	ff 4f       	sbci	r31, 0xFF	; 255
    58e2:	91 83       	std	Z+1, r25	; 0x01
    58e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    58e6:	de 01       	movw	r26, r28
    58e8:	a7 5a       	subi	r26, 0xA7	; 167
    58ea:	bf 4f       	sbci	r27, 0xFF	; 255
    58ec:	fe 01       	movw	r30, r28
    58ee:	e7 5a       	subi	r30, 0xA7	; 167
    58f0:	ff 4f       	sbci	r31, 0xFF	; 255
    58f2:	80 81       	ld	r24, Z
    58f4:	91 81       	ldd	r25, Z+1	; 0x01
    58f6:	01 97       	sbiw	r24, 0x01	; 1
    58f8:	11 96       	adiw	r26, 0x01	; 1
    58fa:	9c 93       	st	X, r25
    58fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    58fe:	fe 01       	movw	r30, r28
    5900:	e7 5a       	subi	r30, 0xA7	; 167
    5902:	ff 4f       	sbci	r31, 0xFF	; 255
    5904:	80 81       	ld	r24, Z
    5906:	91 81       	ldd	r25, Z+1	; 0x01
    5908:	00 97       	sbiw	r24, 0x00	; 0
    590a:	d1 f6       	brne	.-76     	; 0x58c0 <main+0x154>
    590c:	27 c0       	rjmp	.+78     	; 0x595c <main+0x1f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    590e:	8e 01       	movw	r16, r28
    5910:	07 5a       	subi	r16, 0xA7	; 167
    5912:	1f 4f       	sbci	r17, 0xFF	; 255
    5914:	fe 01       	movw	r30, r28
    5916:	e5 5a       	subi	r30, 0xA5	; 165
    5918:	ff 4f       	sbci	r31, 0xFF	; 255
    591a:	60 81       	ld	r22, Z
    591c:	71 81       	ldd	r23, Z+1	; 0x01
    591e:	82 81       	ldd	r24, Z+2	; 0x02
    5920:	93 81       	ldd	r25, Z+3	; 0x03
    5922:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5926:	dc 01       	movw	r26, r24
    5928:	cb 01       	movw	r24, r22
    592a:	f8 01       	movw	r30, r16
    592c:	91 83       	std	Z+1, r25	; 0x01
    592e:	80 83       	st	Z, r24
    5930:	de 01       	movw	r26, r28
    5932:	ab 5a       	subi	r26, 0xAB	; 171
    5934:	bf 4f       	sbci	r27, 0xFF	; 255
    5936:	fe 01       	movw	r30, r28
    5938:	e7 5a       	subi	r30, 0xA7	; 167
    593a:	ff 4f       	sbci	r31, 0xFF	; 255
    593c:	80 81       	ld	r24, Z
    593e:	91 81       	ldd	r25, Z+1	; 0x01
    5940:	8d 93       	st	X+, r24
    5942:	9c 93       	st	X, r25
    5944:	fe 01       	movw	r30, r28
    5946:	eb 5a       	subi	r30, 0xAB	; 171
    5948:	ff 4f       	sbci	r31, 0xFF	; 255
    594a:	80 81       	ld	r24, Z
    594c:	91 81       	ldd	r25, Z+1	; 0x01
    594e:	01 97       	sbiw	r24, 0x01	; 1
    5950:	f1 f7       	brne	.-4      	; 0x594e <main+0x1e2>
    5952:	fe 01       	movw	r30, r28
    5954:	eb 5a       	subi	r30, 0xAB	; 171
    5956:	ff 4f       	sbci	r31, 0xFF	; 255
    5958:	91 83       	std	Z+1, r25	; 0x01
    595a:	80 83       	st	Z, r24
            _delay_ms(500);
        }
        if (KEYPAD_u8IsPressed(KEYPAD_SWITCH2))
    595c:	81 e0       	ldi	r24, 0x01	; 1
    595e:	0e 94 37 1b 	call	0x366e	; 0x366e <KEYPAD_u8IsPressed>
    5962:	88 23       	and	r24, r24
    5964:	09 f4       	brne	.+2      	; 0x5968 <main+0x1fc>
    5966:	c8 c0       	rjmp	.+400    	; 0x5af8 <main+0x38c>
        {
            LCD_voidClrScreen();
    5968:	0e 94 10 18 	call	0x3020	; 0x3020 <LCD_voidClrScreen>
            LCD_voidPrintf("%d", 2);
    596c:	00 d0       	rcall	.+0      	; 0x596e <main+0x202>
    596e:	00 d0       	rcall	.+0      	; 0x5970 <main+0x204>
    5970:	ed b7       	in	r30, 0x3d	; 61
    5972:	fe b7       	in	r31, 0x3e	; 62
    5974:	31 96       	adiw	r30, 0x01	; 1
    5976:	89 e7       	ldi	r24, 0x79	; 121
    5978:	90 e0       	ldi	r25, 0x00	; 0
    597a:	91 83       	std	Z+1, r25	; 0x01
    597c:	80 83       	st	Z, r24
    597e:	82 e0       	ldi	r24, 0x02	; 2
    5980:	90 e0       	ldi	r25, 0x00	; 0
    5982:	93 83       	std	Z+3, r25	; 0x03
    5984:	82 83       	std	Z+2, r24	; 0x02
    5986:	0e 94 56 18 	call	0x30ac	; 0x30ac <LCD_voidPrintf>
    598a:	0f 90       	pop	r0
    598c:	0f 90       	pop	r0
    598e:	0f 90       	pop	r0
    5990:	0f 90       	pop	r0
    5992:	fe 01       	movw	r30, r28
    5994:	ef 5a       	subi	r30, 0xAF	; 175
    5996:	ff 4f       	sbci	r31, 0xFF	; 255
    5998:	80 e0       	ldi	r24, 0x00	; 0
    599a:	90 e0       	ldi	r25, 0x00	; 0
    599c:	aa ef       	ldi	r26, 0xFA	; 250
    599e:	b3 e4       	ldi	r27, 0x43	; 67
    59a0:	80 83       	st	Z, r24
    59a2:	91 83       	std	Z+1, r25	; 0x01
    59a4:	a2 83       	std	Z+2, r26	; 0x02
    59a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    59a8:	8e 01       	movw	r16, r28
    59aa:	03 5b       	subi	r16, 0xB3	; 179
    59ac:	1f 4f       	sbci	r17, 0xFF	; 255
    59ae:	fe 01       	movw	r30, r28
    59b0:	ef 5a       	subi	r30, 0xAF	; 175
    59b2:	ff 4f       	sbci	r31, 0xFF	; 255
    59b4:	60 81       	ld	r22, Z
    59b6:	71 81       	ldd	r23, Z+1	; 0x01
    59b8:	82 81       	ldd	r24, Z+2	; 0x02
    59ba:	93 81       	ldd	r25, Z+3	; 0x03
    59bc:	20 e0       	ldi	r18, 0x00	; 0
    59be:	30 e0       	ldi	r19, 0x00	; 0
    59c0:	4a e7       	ldi	r20, 0x7A	; 122
    59c2:	55 e4       	ldi	r21, 0x45	; 69
    59c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    59c8:	dc 01       	movw	r26, r24
    59ca:	cb 01       	movw	r24, r22
    59cc:	f8 01       	movw	r30, r16
    59ce:	80 83       	st	Z, r24
    59d0:	91 83       	std	Z+1, r25	; 0x01
    59d2:	a2 83       	std	Z+2, r26	; 0x02
    59d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    59d6:	fe 01       	movw	r30, r28
    59d8:	e3 5b       	subi	r30, 0xB3	; 179
    59da:	ff 4f       	sbci	r31, 0xFF	; 255
    59dc:	60 81       	ld	r22, Z
    59de:	71 81       	ldd	r23, Z+1	; 0x01
    59e0:	82 81       	ldd	r24, Z+2	; 0x02
    59e2:	93 81       	ldd	r25, Z+3	; 0x03
    59e4:	20 e0       	ldi	r18, 0x00	; 0
    59e6:	30 e0       	ldi	r19, 0x00	; 0
    59e8:	40 e8       	ldi	r20, 0x80	; 128
    59ea:	5f e3       	ldi	r21, 0x3F	; 63
    59ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    59f0:	88 23       	and	r24, r24
    59f2:	44 f4       	brge	.+16     	; 0x5a04 <main+0x298>
		__ticks = 1;
    59f4:	fe 01       	movw	r30, r28
    59f6:	e5 5b       	subi	r30, 0xB5	; 181
    59f8:	ff 4f       	sbci	r31, 0xFF	; 255
    59fa:	81 e0       	ldi	r24, 0x01	; 1
    59fc:	90 e0       	ldi	r25, 0x00	; 0
    59fe:	91 83       	std	Z+1, r25	; 0x01
    5a00:	80 83       	st	Z, r24
    5a02:	64 c0       	rjmp	.+200    	; 0x5acc <main+0x360>
	else if (__tmp > 65535)
    5a04:	fe 01       	movw	r30, r28
    5a06:	e3 5b       	subi	r30, 0xB3	; 179
    5a08:	ff 4f       	sbci	r31, 0xFF	; 255
    5a0a:	60 81       	ld	r22, Z
    5a0c:	71 81       	ldd	r23, Z+1	; 0x01
    5a0e:	82 81       	ldd	r24, Z+2	; 0x02
    5a10:	93 81       	ldd	r25, Z+3	; 0x03
    5a12:	20 e0       	ldi	r18, 0x00	; 0
    5a14:	3f ef       	ldi	r19, 0xFF	; 255
    5a16:	4f e7       	ldi	r20, 0x7F	; 127
    5a18:	57 e4       	ldi	r21, 0x47	; 71
    5a1a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5a1e:	18 16       	cp	r1, r24
    5a20:	0c f0       	brlt	.+2      	; 0x5a24 <main+0x2b8>
    5a22:	43 c0       	rjmp	.+134    	; 0x5aaa <main+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a24:	fe 01       	movw	r30, r28
    5a26:	ef 5a       	subi	r30, 0xAF	; 175
    5a28:	ff 4f       	sbci	r31, 0xFF	; 255
    5a2a:	60 81       	ld	r22, Z
    5a2c:	71 81       	ldd	r23, Z+1	; 0x01
    5a2e:	82 81       	ldd	r24, Z+2	; 0x02
    5a30:	93 81       	ldd	r25, Z+3	; 0x03
    5a32:	20 e0       	ldi	r18, 0x00	; 0
    5a34:	30 e0       	ldi	r19, 0x00	; 0
    5a36:	40 e2       	ldi	r20, 0x20	; 32
    5a38:	51 e4       	ldi	r21, 0x41	; 65
    5a3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5a3e:	dc 01       	movw	r26, r24
    5a40:	cb 01       	movw	r24, r22
    5a42:	8e 01       	movw	r16, r28
    5a44:	05 5b       	subi	r16, 0xB5	; 181
    5a46:	1f 4f       	sbci	r17, 0xFF	; 255
    5a48:	bc 01       	movw	r22, r24
    5a4a:	cd 01       	movw	r24, r26
    5a4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5a50:	dc 01       	movw	r26, r24
    5a52:	cb 01       	movw	r24, r22
    5a54:	f8 01       	movw	r30, r16
    5a56:	91 83       	std	Z+1, r25	; 0x01
    5a58:	80 83       	st	Z, r24
    5a5a:	1f c0       	rjmp	.+62     	; 0x5a9a <main+0x32e>
    5a5c:	fe 01       	movw	r30, r28
    5a5e:	e7 5b       	subi	r30, 0xB7	; 183
    5a60:	ff 4f       	sbci	r31, 0xFF	; 255
    5a62:	80 e9       	ldi	r24, 0x90	; 144
    5a64:	91 e0       	ldi	r25, 0x01	; 1
    5a66:	91 83       	std	Z+1, r25	; 0x01
    5a68:	80 83       	st	Z, r24
    5a6a:	fe 01       	movw	r30, r28
    5a6c:	e7 5b       	subi	r30, 0xB7	; 183
    5a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    5a70:	80 81       	ld	r24, Z
    5a72:	91 81       	ldd	r25, Z+1	; 0x01
    5a74:	01 97       	sbiw	r24, 0x01	; 1
    5a76:	f1 f7       	brne	.-4      	; 0x5a74 <main+0x308>
    5a78:	fe 01       	movw	r30, r28
    5a7a:	e7 5b       	subi	r30, 0xB7	; 183
    5a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    5a7e:	91 83       	std	Z+1, r25	; 0x01
    5a80:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5a82:	de 01       	movw	r26, r28
    5a84:	a5 5b       	subi	r26, 0xB5	; 181
    5a86:	bf 4f       	sbci	r27, 0xFF	; 255
    5a88:	fe 01       	movw	r30, r28
    5a8a:	e5 5b       	subi	r30, 0xB5	; 181
    5a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    5a8e:	80 81       	ld	r24, Z
    5a90:	91 81       	ldd	r25, Z+1	; 0x01
    5a92:	01 97       	sbiw	r24, 0x01	; 1
    5a94:	11 96       	adiw	r26, 0x01	; 1
    5a96:	9c 93       	st	X, r25
    5a98:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5a9a:	fe 01       	movw	r30, r28
    5a9c:	e5 5b       	subi	r30, 0xB5	; 181
    5a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    5aa0:	80 81       	ld	r24, Z
    5aa2:	91 81       	ldd	r25, Z+1	; 0x01
    5aa4:	00 97       	sbiw	r24, 0x00	; 0
    5aa6:	d1 f6       	brne	.-76     	; 0x5a5c <main+0x2f0>
    5aa8:	27 c0       	rjmp	.+78     	; 0x5af8 <main+0x38c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5aaa:	8e 01       	movw	r16, r28
    5aac:	05 5b       	subi	r16, 0xB5	; 181
    5aae:	1f 4f       	sbci	r17, 0xFF	; 255
    5ab0:	fe 01       	movw	r30, r28
    5ab2:	e3 5b       	subi	r30, 0xB3	; 179
    5ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    5ab6:	60 81       	ld	r22, Z
    5ab8:	71 81       	ldd	r23, Z+1	; 0x01
    5aba:	82 81       	ldd	r24, Z+2	; 0x02
    5abc:	93 81       	ldd	r25, Z+3	; 0x03
    5abe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5ac2:	dc 01       	movw	r26, r24
    5ac4:	cb 01       	movw	r24, r22
    5ac6:	f8 01       	movw	r30, r16
    5ac8:	91 83       	std	Z+1, r25	; 0x01
    5aca:	80 83       	st	Z, r24
    5acc:	de 01       	movw	r26, r28
    5ace:	a9 5b       	subi	r26, 0xB9	; 185
    5ad0:	bf 4f       	sbci	r27, 0xFF	; 255
    5ad2:	fe 01       	movw	r30, r28
    5ad4:	e5 5b       	subi	r30, 0xB5	; 181
    5ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    5ad8:	80 81       	ld	r24, Z
    5ada:	91 81       	ldd	r25, Z+1	; 0x01
    5adc:	8d 93       	st	X+, r24
    5ade:	9c 93       	st	X, r25
    5ae0:	fe 01       	movw	r30, r28
    5ae2:	e9 5b       	subi	r30, 0xB9	; 185
    5ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    5ae6:	80 81       	ld	r24, Z
    5ae8:	91 81       	ldd	r25, Z+1	; 0x01
    5aea:	01 97       	sbiw	r24, 0x01	; 1
    5aec:	f1 f7       	brne	.-4      	; 0x5aea <main+0x37e>
    5aee:	fe 01       	movw	r30, r28
    5af0:	e9 5b       	subi	r30, 0xB9	; 185
    5af2:	ff 4f       	sbci	r31, 0xFF	; 255
    5af4:	91 83       	std	Z+1, r25	; 0x01
    5af6:	80 83       	st	Z, r24
            _delay_ms(500);
        }
        if (KEYPAD_u8IsPressed(KEYPAD_SWITCH3))
    5af8:	82 e0       	ldi	r24, 0x02	; 2
    5afa:	0e 94 37 1b 	call	0x366e	; 0x366e <KEYPAD_u8IsPressed>
    5afe:	88 23       	and	r24, r24
    5b00:	09 f4       	brne	.+2      	; 0x5b04 <main+0x398>
    5b02:	89 c0       	rjmp	.+274    	; 0x5c16 <main+0x4aa>
        {
            LCD_voidWriteString("H");
    5b04:	8c e7       	ldi	r24, 0x7C	; 124
    5b06:	90 e0       	ldi	r25, 0x00	; 0
    5b08:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <LCD_voidWriteString>
    5b0c:	fe 01       	movw	r30, r28
    5b0e:	ed 5b       	subi	r30, 0xBD	; 189
    5b10:	ff 4f       	sbci	r31, 0xFF	; 255
    5b12:	80 e0       	ldi	r24, 0x00	; 0
    5b14:	90 e0       	ldi	r25, 0x00	; 0
    5b16:	aa ef       	ldi	r26, 0xFA	; 250
    5b18:	b3 e4       	ldi	r27, 0x43	; 67
    5b1a:	80 83       	st	Z, r24
    5b1c:	91 83       	std	Z+1, r25	; 0x01
    5b1e:	a2 83       	std	Z+2, r26	; 0x02
    5b20:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b22:	8e 01       	movw	r16, r28
    5b24:	01 5c       	subi	r16, 0xC1	; 193
    5b26:	1f 4f       	sbci	r17, 0xFF	; 255
    5b28:	fe 01       	movw	r30, r28
    5b2a:	ed 5b       	subi	r30, 0xBD	; 189
    5b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    5b2e:	60 81       	ld	r22, Z
    5b30:	71 81       	ldd	r23, Z+1	; 0x01
    5b32:	82 81       	ldd	r24, Z+2	; 0x02
    5b34:	93 81       	ldd	r25, Z+3	; 0x03
    5b36:	20 e0       	ldi	r18, 0x00	; 0
    5b38:	30 e0       	ldi	r19, 0x00	; 0
    5b3a:	4a e7       	ldi	r20, 0x7A	; 122
    5b3c:	55 e4       	ldi	r21, 0x45	; 69
    5b3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5b42:	dc 01       	movw	r26, r24
    5b44:	cb 01       	movw	r24, r22
    5b46:	f8 01       	movw	r30, r16
    5b48:	80 83       	st	Z, r24
    5b4a:	91 83       	std	Z+1, r25	; 0x01
    5b4c:	a2 83       	std	Z+2, r26	; 0x02
    5b4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5b50:	fe 01       	movw	r30, r28
    5b52:	ff 96       	adiw	r30, 0x3f	; 63
    5b54:	60 81       	ld	r22, Z
    5b56:	71 81       	ldd	r23, Z+1	; 0x01
    5b58:	82 81       	ldd	r24, Z+2	; 0x02
    5b5a:	93 81       	ldd	r25, Z+3	; 0x03
    5b5c:	20 e0       	ldi	r18, 0x00	; 0
    5b5e:	30 e0       	ldi	r19, 0x00	; 0
    5b60:	40 e8       	ldi	r20, 0x80	; 128
    5b62:	5f e3       	ldi	r21, 0x3F	; 63
    5b64:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5b68:	88 23       	and	r24, r24
    5b6a:	2c f4       	brge	.+10     	; 0x5b76 <main+0x40a>
		__ticks = 1;
    5b6c:	81 e0       	ldi	r24, 0x01	; 1
    5b6e:	90 e0       	ldi	r25, 0x00	; 0
    5b70:	9e af       	std	Y+62, r25	; 0x3e
    5b72:	8d af       	std	Y+61, r24	; 0x3d
    5b74:	46 c0       	rjmp	.+140    	; 0x5c02 <main+0x496>
	else if (__tmp > 65535)
    5b76:	fe 01       	movw	r30, r28
    5b78:	ff 96       	adiw	r30, 0x3f	; 63
    5b7a:	60 81       	ld	r22, Z
    5b7c:	71 81       	ldd	r23, Z+1	; 0x01
    5b7e:	82 81       	ldd	r24, Z+2	; 0x02
    5b80:	93 81       	ldd	r25, Z+3	; 0x03
    5b82:	20 e0       	ldi	r18, 0x00	; 0
    5b84:	3f ef       	ldi	r19, 0xFF	; 255
    5b86:	4f e7       	ldi	r20, 0x7F	; 127
    5b88:	57 e4       	ldi	r21, 0x47	; 71
    5b8a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5b8e:	18 16       	cp	r1, r24
    5b90:	64 f5       	brge	.+88     	; 0x5bea <main+0x47e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b92:	fe 01       	movw	r30, r28
    5b94:	ed 5b       	subi	r30, 0xBD	; 189
    5b96:	ff 4f       	sbci	r31, 0xFF	; 255
    5b98:	60 81       	ld	r22, Z
    5b9a:	71 81       	ldd	r23, Z+1	; 0x01
    5b9c:	82 81       	ldd	r24, Z+2	; 0x02
    5b9e:	93 81       	ldd	r25, Z+3	; 0x03
    5ba0:	20 e0       	ldi	r18, 0x00	; 0
    5ba2:	30 e0       	ldi	r19, 0x00	; 0
    5ba4:	40 e2       	ldi	r20, 0x20	; 32
    5ba6:	51 e4       	ldi	r21, 0x41	; 65
    5ba8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5bac:	dc 01       	movw	r26, r24
    5bae:	cb 01       	movw	r24, r22
    5bb0:	bc 01       	movw	r22, r24
    5bb2:	cd 01       	movw	r24, r26
    5bb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5bb8:	dc 01       	movw	r26, r24
    5bba:	cb 01       	movw	r24, r22
    5bbc:	9e af       	std	Y+62, r25	; 0x3e
    5bbe:	8d af       	std	Y+61, r24	; 0x3d
    5bc0:	0f c0       	rjmp	.+30     	; 0x5be0 <main+0x474>
    5bc2:	80 e9       	ldi	r24, 0x90	; 144
    5bc4:	91 e0       	ldi	r25, 0x01	; 1
    5bc6:	9c af       	std	Y+60, r25	; 0x3c
    5bc8:	8b af       	std	Y+59, r24	; 0x3b
    5bca:	8b ad       	ldd	r24, Y+59	; 0x3b
    5bcc:	9c ad       	ldd	r25, Y+60	; 0x3c
    5bce:	01 97       	sbiw	r24, 0x01	; 1
    5bd0:	f1 f7       	brne	.-4      	; 0x5bce <main+0x462>
    5bd2:	9c af       	std	Y+60, r25	; 0x3c
    5bd4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5bd6:	8d ad       	ldd	r24, Y+61	; 0x3d
    5bd8:	9e ad       	ldd	r25, Y+62	; 0x3e
    5bda:	01 97       	sbiw	r24, 0x01	; 1
    5bdc:	9e af       	std	Y+62, r25	; 0x3e
    5bde:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5be0:	8d ad       	ldd	r24, Y+61	; 0x3d
    5be2:	9e ad       	ldd	r25, Y+62	; 0x3e
    5be4:	00 97       	sbiw	r24, 0x00	; 0
    5be6:	69 f7       	brne	.-38     	; 0x5bc2 <main+0x456>
    5be8:	16 c0       	rjmp	.+44     	; 0x5c16 <main+0x4aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5bea:	fe 01       	movw	r30, r28
    5bec:	ff 96       	adiw	r30, 0x3f	; 63
    5bee:	60 81       	ld	r22, Z
    5bf0:	71 81       	ldd	r23, Z+1	; 0x01
    5bf2:	82 81       	ldd	r24, Z+2	; 0x02
    5bf4:	93 81       	ldd	r25, Z+3	; 0x03
    5bf6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5bfa:	dc 01       	movw	r26, r24
    5bfc:	cb 01       	movw	r24, r22
    5bfe:	9e af       	std	Y+62, r25	; 0x3e
    5c00:	8d af       	std	Y+61, r24	; 0x3d
    5c02:	8d ad       	ldd	r24, Y+61	; 0x3d
    5c04:	9e ad       	ldd	r25, Y+62	; 0x3e
    5c06:	9a af       	std	Y+58, r25	; 0x3a
    5c08:	89 af       	std	Y+57, r24	; 0x39
    5c0a:	89 ad       	ldd	r24, Y+57	; 0x39
    5c0c:	9a ad       	ldd	r25, Y+58	; 0x3a
    5c0e:	01 97       	sbiw	r24, 0x01	; 1
    5c10:	f1 f7       	brne	.-4      	; 0x5c0e <main+0x4a2>
    5c12:	9a af       	std	Y+58, r25	; 0x3a
    5c14:	89 af       	std	Y+57, r24	; 0x39
            _delay_ms(500);
        }
        if (KEYPAD_u8IsPressed(KEYPAD_SWITCH4))
    5c16:	83 e0       	ldi	r24, 0x03	; 3
    5c18:	0e 94 37 1b 	call	0x366e	; 0x366e <KEYPAD_u8IsPressed>
    5c1c:	88 23       	and	r24, r24
    5c1e:	09 f4       	brne	.+2      	; 0x5c22 <main+0x4b6>
    5c20:	75 c0       	rjmp	.+234    	; 0x5d0c <main+0x5a0>
        {
            LCD_voidWriteCmd(SHIFT_CURSOR_RIGHT);
    5c22:	86 e0       	ldi	r24, 0x06	; 6
    5c24:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    5c28:	80 e0       	ldi	r24, 0x00	; 0
    5c2a:	90 e0       	ldi	r25, 0x00	; 0
    5c2c:	aa ef       	ldi	r26, 0xFA	; 250
    5c2e:	b3 e4       	ldi	r27, 0x43	; 67
    5c30:	8d ab       	std	Y+53, r24	; 0x35
    5c32:	9e ab       	std	Y+54, r25	; 0x36
    5c34:	af ab       	std	Y+55, r26	; 0x37
    5c36:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c38:	6d a9       	ldd	r22, Y+53	; 0x35
    5c3a:	7e a9       	ldd	r23, Y+54	; 0x36
    5c3c:	8f a9       	ldd	r24, Y+55	; 0x37
    5c3e:	98 ad       	ldd	r25, Y+56	; 0x38
    5c40:	20 e0       	ldi	r18, 0x00	; 0
    5c42:	30 e0       	ldi	r19, 0x00	; 0
    5c44:	4a e7       	ldi	r20, 0x7A	; 122
    5c46:	55 e4       	ldi	r21, 0x45	; 69
    5c48:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5c4c:	dc 01       	movw	r26, r24
    5c4e:	cb 01       	movw	r24, r22
    5c50:	89 ab       	std	Y+49, r24	; 0x31
    5c52:	9a ab       	std	Y+50, r25	; 0x32
    5c54:	ab ab       	std	Y+51, r26	; 0x33
    5c56:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    5c58:	69 a9       	ldd	r22, Y+49	; 0x31
    5c5a:	7a a9       	ldd	r23, Y+50	; 0x32
    5c5c:	8b a9       	ldd	r24, Y+51	; 0x33
    5c5e:	9c a9       	ldd	r25, Y+52	; 0x34
    5c60:	20 e0       	ldi	r18, 0x00	; 0
    5c62:	30 e0       	ldi	r19, 0x00	; 0
    5c64:	40 e8       	ldi	r20, 0x80	; 128
    5c66:	5f e3       	ldi	r21, 0x3F	; 63
    5c68:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5c6c:	88 23       	and	r24, r24
    5c6e:	2c f4       	brge	.+10     	; 0x5c7a <main+0x50e>
		__ticks = 1;
    5c70:	81 e0       	ldi	r24, 0x01	; 1
    5c72:	90 e0       	ldi	r25, 0x00	; 0
    5c74:	98 ab       	std	Y+48, r25	; 0x30
    5c76:	8f a7       	std	Y+47, r24	; 0x2f
    5c78:	3f c0       	rjmp	.+126    	; 0x5cf8 <main+0x58c>
	else if (__tmp > 65535)
    5c7a:	69 a9       	ldd	r22, Y+49	; 0x31
    5c7c:	7a a9       	ldd	r23, Y+50	; 0x32
    5c7e:	8b a9       	ldd	r24, Y+51	; 0x33
    5c80:	9c a9       	ldd	r25, Y+52	; 0x34
    5c82:	20 e0       	ldi	r18, 0x00	; 0
    5c84:	3f ef       	ldi	r19, 0xFF	; 255
    5c86:	4f e7       	ldi	r20, 0x7F	; 127
    5c88:	57 e4       	ldi	r21, 0x47	; 71
    5c8a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5c8e:	18 16       	cp	r1, r24
    5c90:	4c f5       	brge	.+82     	; 0x5ce4 <main+0x578>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c92:	6d a9       	ldd	r22, Y+53	; 0x35
    5c94:	7e a9       	ldd	r23, Y+54	; 0x36
    5c96:	8f a9       	ldd	r24, Y+55	; 0x37
    5c98:	98 ad       	ldd	r25, Y+56	; 0x38
    5c9a:	20 e0       	ldi	r18, 0x00	; 0
    5c9c:	30 e0       	ldi	r19, 0x00	; 0
    5c9e:	40 e2       	ldi	r20, 0x20	; 32
    5ca0:	51 e4       	ldi	r21, 0x41	; 65
    5ca2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5ca6:	dc 01       	movw	r26, r24
    5ca8:	cb 01       	movw	r24, r22
    5caa:	bc 01       	movw	r22, r24
    5cac:	cd 01       	movw	r24, r26
    5cae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5cb2:	dc 01       	movw	r26, r24
    5cb4:	cb 01       	movw	r24, r22
    5cb6:	98 ab       	std	Y+48, r25	; 0x30
    5cb8:	8f a7       	std	Y+47, r24	; 0x2f
    5cba:	0f c0       	rjmp	.+30     	; 0x5cda <main+0x56e>
    5cbc:	80 e9       	ldi	r24, 0x90	; 144
    5cbe:	91 e0       	ldi	r25, 0x01	; 1
    5cc0:	9e a7       	std	Y+46, r25	; 0x2e
    5cc2:	8d a7       	std	Y+45, r24	; 0x2d
    5cc4:	8d a5       	ldd	r24, Y+45	; 0x2d
    5cc6:	9e a5       	ldd	r25, Y+46	; 0x2e
    5cc8:	01 97       	sbiw	r24, 0x01	; 1
    5cca:	f1 f7       	brne	.-4      	; 0x5cc8 <main+0x55c>
    5ccc:	9e a7       	std	Y+46, r25	; 0x2e
    5cce:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cd0:	8f a5       	ldd	r24, Y+47	; 0x2f
    5cd2:	98 a9       	ldd	r25, Y+48	; 0x30
    5cd4:	01 97       	sbiw	r24, 0x01	; 1
    5cd6:	98 ab       	std	Y+48, r25	; 0x30
    5cd8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5cda:	8f a5       	ldd	r24, Y+47	; 0x2f
    5cdc:	98 a9       	ldd	r25, Y+48	; 0x30
    5cde:	00 97       	sbiw	r24, 0x00	; 0
    5ce0:	69 f7       	brne	.-38     	; 0x5cbc <main+0x550>
    5ce2:	14 c0       	rjmp	.+40     	; 0x5d0c <main+0x5a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ce4:	69 a9       	ldd	r22, Y+49	; 0x31
    5ce6:	7a a9       	ldd	r23, Y+50	; 0x32
    5ce8:	8b a9       	ldd	r24, Y+51	; 0x33
    5cea:	9c a9       	ldd	r25, Y+52	; 0x34
    5cec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5cf0:	dc 01       	movw	r26, r24
    5cf2:	cb 01       	movw	r24, r22
    5cf4:	98 ab       	std	Y+48, r25	; 0x30
    5cf6:	8f a7       	std	Y+47, r24	; 0x2f
    5cf8:	8f a5       	ldd	r24, Y+47	; 0x2f
    5cfa:	98 a9       	ldd	r25, Y+48	; 0x30
    5cfc:	9c a7       	std	Y+44, r25	; 0x2c
    5cfe:	8b a7       	std	Y+43, r24	; 0x2b
    5d00:	8b a5       	ldd	r24, Y+43	; 0x2b
    5d02:	9c a5       	ldd	r25, Y+44	; 0x2c
    5d04:	01 97       	sbiw	r24, 0x01	; 1
    5d06:	f1 f7       	brne	.-4      	; 0x5d04 <main+0x598>
    5d08:	9c a7       	std	Y+44, r25	; 0x2c
    5d0a:	8b a7       	std	Y+43, r24	; 0x2b
            _delay_ms(500);
        }
        if (KEYPAD_u8IsPressed(KEYPAD_SWITCH8))
    5d0c:	87 e0       	ldi	r24, 0x07	; 7
    5d0e:	0e 94 37 1b 	call	0x366e	; 0x366e <KEYPAD_u8IsPressed>
    5d12:	88 23       	and	r24, r24
    5d14:	09 f4       	brne	.+2      	; 0x5d18 <main+0x5ac>
    5d16:	75 c0       	rjmp	.+234    	; 0x5e02 <main+0x696>
        {
            LCD_voidWriteCmd(SHIFT_CURSOR_LEFT);
    5d18:	84 e0       	ldi	r24, 0x04	; 4
    5d1a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    5d1e:	80 e0       	ldi	r24, 0x00	; 0
    5d20:	90 e0       	ldi	r25, 0x00	; 0
    5d22:	aa ef       	ldi	r26, 0xFA	; 250
    5d24:	b3 e4       	ldi	r27, 0x43	; 67
    5d26:	8f a3       	std	Y+39, r24	; 0x27
    5d28:	98 a7       	std	Y+40, r25	; 0x28
    5d2a:	a9 a7       	std	Y+41, r26	; 0x29
    5d2c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d2e:	6f a1       	ldd	r22, Y+39	; 0x27
    5d30:	78 a5       	ldd	r23, Y+40	; 0x28
    5d32:	89 a5       	ldd	r24, Y+41	; 0x29
    5d34:	9a a5       	ldd	r25, Y+42	; 0x2a
    5d36:	20 e0       	ldi	r18, 0x00	; 0
    5d38:	30 e0       	ldi	r19, 0x00	; 0
    5d3a:	4a e7       	ldi	r20, 0x7A	; 122
    5d3c:	55 e4       	ldi	r21, 0x45	; 69
    5d3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5d42:	dc 01       	movw	r26, r24
    5d44:	cb 01       	movw	r24, r22
    5d46:	8b a3       	std	Y+35, r24	; 0x23
    5d48:	9c a3       	std	Y+36, r25	; 0x24
    5d4a:	ad a3       	std	Y+37, r26	; 0x25
    5d4c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5d4e:	6b a1       	ldd	r22, Y+35	; 0x23
    5d50:	7c a1       	ldd	r23, Y+36	; 0x24
    5d52:	8d a1       	ldd	r24, Y+37	; 0x25
    5d54:	9e a1       	ldd	r25, Y+38	; 0x26
    5d56:	20 e0       	ldi	r18, 0x00	; 0
    5d58:	30 e0       	ldi	r19, 0x00	; 0
    5d5a:	40 e8       	ldi	r20, 0x80	; 128
    5d5c:	5f e3       	ldi	r21, 0x3F	; 63
    5d5e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5d62:	88 23       	and	r24, r24
    5d64:	2c f4       	brge	.+10     	; 0x5d70 <main+0x604>
		__ticks = 1;
    5d66:	81 e0       	ldi	r24, 0x01	; 1
    5d68:	90 e0       	ldi	r25, 0x00	; 0
    5d6a:	9a a3       	std	Y+34, r25	; 0x22
    5d6c:	89 a3       	std	Y+33, r24	; 0x21
    5d6e:	3f c0       	rjmp	.+126    	; 0x5dee <main+0x682>
	else if (__tmp > 65535)
    5d70:	6b a1       	ldd	r22, Y+35	; 0x23
    5d72:	7c a1       	ldd	r23, Y+36	; 0x24
    5d74:	8d a1       	ldd	r24, Y+37	; 0x25
    5d76:	9e a1       	ldd	r25, Y+38	; 0x26
    5d78:	20 e0       	ldi	r18, 0x00	; 0
    5d7a:	3f ef       	ldi	r19, 0xFF	; 255
    5d7c:	4f e7       	ldi	r20, 0x7F	; 127
    5d7e:	57 e4       	ldi	r21, 0x47	; 71
    5d80:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5d84:	18 16       	cp	r1, r24
    5d86:	4c f5       	brge	.+82     	; 0x5dda <main+0x66e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5d88:	6f a1       	ldd	r22, Y+39	; 0x27
    5d8a:	78 a5       	ldd	r23, Y+40	; 0x28
    5d8c:	89 a5       	ldd	r24, Y+41	; 0x29
    5d8e:	9a a5       	ldd	r25, Y+42	; 0x2a
    5d90:	20 e0       	ldi	r18, 0x00	; 0
    5d92:	30 e0       	ldi	r19, 0x00	; 0
    5d94:	40 e2       	ldi	r20, 0x20	; 32
    5d96:	51 e4       	ldi	r21, 0x41	; 65
    5d98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5d9c:	dc 01       	movw	r26, r24
    5d9e:	cb 01       	movw	r24, r22
    5da0:	bc 01       	movw	r22, r24
    5da2:	cd 01       	movw	r24, r26
    5da4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5da8:	dc 01       	movw	r26, r24
    5daa:	cb 01       	movw	r24, r22
    5dac:	9a a3       	std	Y+34, r25	; 0x22
    5dae:	89 a3       	std	Y+33, r24	; 0x21
    5db0:	0f c0       	rjmp	.+30     	; 0x5dd0 <main+0x664>
    5db2:	80 e9       	ldi	r24, 0x90	; 144
    5db4:	91 e0       	ldi	r25, 0x01	; 1
    5db6:	98 a3       	std	Y+32, r25	; 0x20
    5db8:	8f 8f       	std	Y+31, r24	; 0x1f
    5dba:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5dbc:	98 a1       	ldd	r25, Y+32	; 0x20
    5dbe:	01 97       	sbiw	r24, 0x01	; 1
    5dc0:	f1 f7       	brne	.-4      	; 0x5dbe <main+0x652>
    5dc2:	98 a3       	std	Y+32, r25	; 0x20
    5dc4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5dc6:	89 a1       	ldd	r24, Y+33	; 0x21
    5dc8:	9a a1       	ldd	r25, Y+34	; 0x22
    5dca:	01 97       	sbiw	r24, 0x01	; 1
    5dcc:	9a a3       	std	Y+34, r25	; 0x22
    5dce:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5dd0:	89 a1       	ldd	r24, Y+33	; 0x21
    5dd2:	9a a1       	ldd	r25, Y+34	; 0x22
    5dd4:	00 97       	sbiw	r24, 0x00	; 0
    5dd6:	69 f7       	brne	.-38     	; 0x5db2 <main+0x646>
    5dd8:	14 c0       	rjmp	.+40     	; 0x5e02 <main+0x696>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5dda:	6b a1       	ldd	r22, Y+35	; 0x23
    5ddc:	7c a1       	ldd	r23, Y+36	; 0x24
    5dde:	8d a1       	ldd	r24, Y+37	; 0x25
    5de0:	9e a1       	ldd	r25, Y+38	; 0x26
    5de2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5de6:	dc 01       	movw	r26, r24
    5de8:	cb 01       	movw	r24, r22
    5dea:	9a a3       	std	Y+34, r25	; 0x22
    5dec:	89 a3       	std	Y+33, r24	; 0x21
    5dee:	89 a1       	ldd	r24, Y+33	; 0x21
    5df0:	9a a1       	ldd	r25, Y+34	; 0x22
    5df2:	9e 8f       	std	Y+30, r25	; 0x1e
    5df4:	8d 8f       	std	Y+29, r24	; 0x1d
    5df6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5df8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5dfa:	01 97       	sbiw	r24, 0x01	; 1
    5dfc:	f1 f7       	brne	.-4      	; 0x5dfa <main+0x68e>
    5dfe:	9e 8f       	std	Y+30, r25	; 0x1e
    5e00:	8d 8f       	std	Y+29, r24	; 0x1d
            _delay_ms(500);
        }
        if (KEYPAD_u8IsPressed(KEYPAD_SWITCH5))
    5e02:	84 e0       	ldi	r24, 0x04	; 4
    5e04:	0e 94 37 1b 	call	0x366e	; 0x366e <KEYPAD_u8IsPressed>
    5e08:	88 23       	and	r24, r24
    5e0a:	09 f4       	brne	.+2      	; 0x5e0e <main+0x6a2>
    5e0c:	75 c0       	rjmp	.+234    	; 0x5ef8 <main+0x78c>
        {
            LCD_voidWriteCmd(CURSOR_TO_LINE2);
    5e0e:	80 ec       	ldi	r24, 0xC0	; 192
    5e10:	0e 94 99 16 	call	0x2d32	; 0x2d32 <LCD_voidWriteCmd>
    5e14:	80 e0       	ldi	r24, 0x00	; 0
    5e16:	90 e0       	ldi	r25, 0x00	; 0
    5e18:	aa ef       	ldi	r26, 0xFA	; 250
    5e1a:	b3 e4       	ldi	r27, 0x43	; 67
    5e1c:	89 8f       	std	Y+25, r24	; 0x19
    5e1e:	9a 8f       	std	Y+26, r25	; 0x1a
    5e20:	ab 8f       	std	Y+27, r26	; 0x1b
    5e22:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5e24:	69 8d       	ldd	r22, Y+25	; 0x19
    5e26:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5e28:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5e2a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5e2c:	20 e0       	ldi	r18, 0x00	; 0
    5e2e:	30 e0       	ldi	r19, 0x00	; 0
    5e30:	4a e7       	ldi	r20, 0x7A	; 122
    5e32:	55 e4       	ldi	r21, 0x45	; 69
    5e34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5e38:	dc 01       	movw	r26, r24
    5e3a:	cb 01       	movw	r24, r22
    5e3c:	8d 8b       	std	Y+21, r24	; 0x15
    5e3e:	9e 8b       	std	Y+22, r25	; 0x16
    5e40:	af 8b       	std	Y+23, r26	; 0x17
    5e42:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5e44:	6d 89       	ldd	r22, Y+21	; 0x15
    5e46:	7e 89       	ldd	r23, Y+22	; 0x16
    5e48:	8f 89       	ldd	r24, Y+23	; 0x17
    5e4a:	98 8d       	ldd	r25, Y+24	; 0x18
    5e4c:	20 e0       	ldi	r18, 0x00	; 0
    5e4e:	30 e0       	ldi	r19, 0x00	; 0
    5e50:	40 e8       	ldi	r20, 0x80	; 128
    5e52:	5f e3       	ldi	r21, 0x3F	; 63
    5e54:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5e58:	88 23       	and	r24, r24
    5e5a:	2c f4       	brge	.+10     	; 0x5e66 <main+0x6fa>
		__ticks = 1;
    5e5c:	81 e0       	ldi	r24, 0x01	; 1
    5e5e:	90 e0       	ldi	r25, 0x00	; 0
    5e60:	9c 8b       	std	Y+20, r25	; 0x14
    5e62:	8b 8b       	std	Y+19, r24	; 0x13
    5e64:	3f c0       	rjmp	.+126    	; 0x5ee4 <main+0x778>
	else if (__tmp > 65535)
    5e66:	6d 89       	ldd	r22, Y+21	; 0x15
    5e68:	7e 89       	ldd	r23, Y+22	; 0x16
    5e6a:	8f 89       	ldd	r24, Y+23	; 0x17
    5e6c:	98 8d       	ldd	r25, Y+24	; 0x18
    5e6e:	20 e0       	ldi	r18, 0x00	; 0
    5e70:	3f ef       	ldi	r19, 0xFF	; 255
    5e72:	4f e7       	ldi	r20, 0x7F	; 127
    5e74:	57 e4       	ldi	r21, 0x47	; 71
    5e76:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5e7a:	18 16       	cp	r1, r24
    5e7c:	4c f5       	brge	.+82     	; 0x5ed0 <main+0x764>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e7e:	69 8d       	ldd	r22, Y+25	; 0x19
    5e80:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5e82:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5e84:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5e86:	20 e0       	ldi	r18, 0x00	; 0
    5e88:	30 e0       	ldi	r19, 0x00	; 0
    5e8a:	40 e2       	ldi	r20, 0x20	; 32
    5e8c:	51 e4       	ldi	r21, 0x41	; 65
    5e8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5e92:	dc 01       	movw	r26, r24
    5e94:	cb 01       	movw	r24, r22
    5e96:	bc 01       	movw	r22, r24
    5e98:	cd 01       	movw	r24, r26
    5e9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5e9e:	dc 01       	movw	r26, r24
    5ea0:	cb 01       	movw	r24, r22
    5ea2:	9c 8b       	std	Y+20, r25	; 0x14
    5ea4:	8b 8b       	std	Y+19, r24	; 0x13
    5ea6:	0f c0       	rjmp	.+30     	; 0x5ec6 <main+0x75a>
    5ea8:	80 e9       	ldi	r24, 0x90	; 144
    5eaa:	91 e0       	ldi	r25, 0x01	; 1
    5eac:	9a 8b       	std	Y+18, r25	; 0x12
    5eae:	89 8b       	std	Y+17, r24	; 0x11
    5eb0:	89 89       	ldd	r24, Y+17	; 0x11
    5eb2:	9a 89       	ldd	r25, Y+18	; 0x12
    5eb4:	01 97       	sbiw	r24, 0x01	; 1
    5eb6:	f1 f7       	brne	.-4      	; 0x5eb4 <main+0x748>
    5eb8:	9a 8b       	std	Y+18, r25	; 0x12
    5eba:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ebc:	8b 89       	ldd	r24, Y+19	; 0x13
    5ebe:	9c 89       	ldd	r25, Y+20	; 0x14
    5ec0:	01 97       	sbiw	r24, 0x01	; 1
    5ec2:	9c 8b       	std	Y+20, r25	; 0x14
    5ec4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ec6:	8b 89       	ldd	r24, Y+19	; 0x13
    5ec8:	9c 89       	ldd	r25, Y+20	; 0x14
    5eca:	00 97       	sbiw	r24, 0x00	; 0
    5ecc:	69 f7       	brne	.-38     	; 0x5ea8 <main+0x73c>
    5ece:	14 c0       	rjmp	.+40     	; 0x5ef8 <main+0x78c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ed0:	6d 89       	ldd	r22, Y+21	; 0x15
    5ed2:	7e 89       	ldd	r23, Y+22	; 0x16
    5ed4:	8f 89       	ldd	r24, Y+23	; 0x17
    5ed6:	98 8d       	ldd	r25, Y+24	; 0x18
    5ed8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5edc:	dc 01       	movw	r26, r24
    5ede:	cb 01       	movw	r24, r22
    5ee0:	9c 8b       	std	Y+20, r25	; 0x14
    5ee2:	8b 8b       	std	Y+19, r24	; 0x13
    5ee4:	8b 89       	ldd	r24, Y+19	; 0x13
    5ee6:	9c 89       	ldd	r25, Y+20	; 0x14
    5ee8:	98 8b       	std	Y+16, r25	; 0x10
    5eea:	8f 87       	std	Y+15, r24	; 0x0f
    5eec:	8f 85       	ldd	r24, Y+15	; 0x0f
    5eee:	98 89       	ldd	r25, Y+16	; 0x10
    5ef0:	01 97       	sbiw	r24, 0x01	; 1
    5ef2:	f1 f7       	brne	.-4      	; 0x5ef0 <main+0x784>
    5ef4:	98 8b       	std	Y+16, r25	; 0x10
    5ef6:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(500);
        }
        if (KEYPAD_u8IsPressed(KEYPAD_SWITCH6))
    5ef8:	85 e0       	ldi	r24, 0x05	; 5
    5efa:	0e 94 37 1b 	call	0x366e	; 0x366e <KEYPAD_u8IsPressed>
    5efe:	88 23       	and	r24, r24
    5f00:	09 f4       	brne	.+2      	; 0x5f04 <main+0x798>
    5f02:	60 cc       	rjmp	.-1856   	; 0x57c4 <main+0x58>
        {
            LCD_voidGoToXY(2,1);
    5f04:	82 e0       	ldi	r24, 0x02	; 2
    5f06:	61 e0       	ldi	r22, 0x01	; 1
    5f08:	0e 94 2e 18 	call	0x305c	; 0x305c <LCD_voidGoToXY>
    5f0c:	80 e0       	ldi	r24, 0x00	; 0
    5f0e:	90 e0       	ldi	r25, 0x00	; 0
    5f10:	aa ef       	ldi	r26, 0xFA	; 250
    5f12:	b3 e4       	ldi	r27, 0x43	; 67
    5f14:	8b 87       	std	Y+11, r24	; 0x0b
    5f16:	9c 87       	std	Y+12, r25	; 0x0c
    5f18:	ad 87       	std	Y+13, r26	; 0x0d
    5f1a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5f1c:	6b 85       	ldd	r22, Y+11	; 0x0b
    5f1e:	7c 85       	ldd	r23, Y+12	; 0x0c
    5f20:	8d 85       	ldd	r24, Y+13	; 0x0d
    5f22:	9e 85       	ldd	r25, Y+14	; 0x0e
    5f24:	20 e0       	ldi	r18, 0x00	; 0
    5f26:	30 e0       	ldi	r19, 0x00	; 0
    5f28:	4a e7       	ldi	r20, 0x7A	; 122
    5f2a:	55 e4       	ldi	r21, 0x45	; 69
    5f2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5f30:	dc 01       	movw	r26, r24
    5f32:	cb 01       	movw	r24, r22
    5f34:	8f 83       	std	Y+7, r24	; 0x07
    5f36:	98 87       	std	Y+8, r25	; 0x08
    5f38:	a9 87       	std	Y+9, r26	; 0x09
    5f3a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5f3c:	6f 81       	ldd	r22, Y+7	; 0x07
    5f3e:	78 85       	ldd	r23, Y+8	; 0x08
    5f40:	89 85       	ldd	r24, Y+9	; 0x09
    5f42:	9a 85       	ldd	r25, Y+10	; 0x0a
    5f44:	20 e0       	ldi	r18, 0x00	; 0
    5f46:	30 e0       	ldi	r19, 0x00	; 0
    5f48:	40 e8       	ldi	r20, 0x80	; 128
    5f4a:	5f e3       	ldi	r21, 0x3F	; 63
    5f4c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5f50:	88 23       	and	r24, r24
    5f52:	2c f4       	brge	.+10     	; 0x5f5e <main+0x7f2>
		__ticks = 1;
    5f54:	81 e0       	ldi	r24, 0x01	; 1
    5f56:	90 e0       	ldi	r25, 0x00	; 0
    5f58:	9e 83       	std	Y+6, r25	; 0x06
    5f5a:	8d 83       	std	Y+5, r24	; 0x05
    5f5c:	3f c0       	rjmp	.+126    	; 0x5fdc <main+0x870>
	else if (__tmp > 65535)
    5f5e:	6f 81       	ldd	r22, Y+7	; 0x07
    5f60:	78 85       	ldd	r23, Y+8	; 0x08
    5f62:	89 85       	ldd	r24, Y+9	; 0x09
    5f64:	9a 85       	ldd	r25, Y+10	; 0x0a
    5f66:	20 e0       	ldi	r18, 0x00	; 0
    5f68:	3f ef       	ldi	r19, 0xFF	; 255
    5f6a:	4f e7       	ldi	r20, 0x7F	; 127
    5f6c:	57 e4       	ldi	r21, 0x47	; 71
    5f6e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5f72:	18 16       	cp	r1, r24
    5f74:	4c f5       	brge	.+82     	; 0x5fc8 <main+0x85c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5f76:	6b 85       	ldd	r22, Y+11	; 0x0b
    5f78:	7c 85       	ldd	r23, Y+12	; 0x0c
    5f7a:	8d 85       	ldd	r24, Y+13	; 0x0d
    5f7c:	9e 85       	ldd	r25, Y+14	; 0x0e
    5f7e:	20 e0       	ldi	r18, 0x00	; 0
    5f80:	30 e0       	ldi	r19, 0x00	; 0
    5f82:	40 e2       	ldi	r20, 0x20	; 32
    5f84:	51 e4       	ldi	r21, 0x41	; 65
    5f86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5f8a:	dc 01       	movw	r26, r24
    5f8c:	cb 01       	movw	r24, r22
    5f8e:	bc 01       	movw	r22, r24
    5f90:	cd 01       	movw	r24, r26
    5f92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5f96:	dc 01       	movw	r26, r24
    5f98:	cb 01       	movw	r24, r22
    5f9a:	9e 83       	std	Y+6, r25	; 0x06
    5f9c:	8d 83       	std	Y+5, r24	; 0x05
    5f9e:	0f c0       	rjmp	.+30     	; 0x5fbe <main+0x852>
    5fa0:	80 e9       	ldi	r24, 0x90	; 144
    5fa2:	91 e0       	ldi	r25, 0x01	; 1
    5fa4:	9c 83       	std	Y+4, r25	; 0x04
    5fa6:	8b 83       	std	Y+3, r24	; 0x03
    5fa8:	8b 81       	ldd	r24, Y+3	; 0x03
    5faa:	9c 81       	ldd	r25, Y+4	; 0x04
    5fac:	01 97       	sbiw	r24, 0x01	; 1
    5fae:	f1 f7       	brne	.-4      	; 0x5fac <main+0x840>
    5fb0:	9c 83       	std	Y+4, r25	; 0x04
    5fb2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5fb4:	8d 81       	ldd	r24, Y+5	; 0x05
    5fb6:	9e 81       	ldd	r25, Y+6	; 0x06
    5fb8:	01 97       	sbiw	r24, 0x01	; 1
    5fba:	9e 83       	std	Y+6, r25	; 0x06
    5fbc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5fbe:	8d 81       	ldd	r24, Y+5	; 0x05
    5fc0:	9e 81       	ldd	r25, Y+6	; 0x06
    5fc2:	00 97       	sbiw	r24, 0x00	; 0
    5fc4:	69 f7       	brne	.-38     	; 0x5fa0 <main+0x834>
    5fc6:	fe cb       	rjmp	.-2052   	; 0x57c4 <main+0x58>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5fc8:	6f 81       	ldd	r22, Y+7	; 0x07
    5fca:	78 85       	ldd	r23, Y+8	; 0x08
    5fcc:	89 85       	ldd	r24, Y+9	; 0x09
    5fce:	9a 85       	ldd	r25, Y+10	; 0x0a
    5fd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5fd4:	dc 01       	movw	r26, r24
    5fd6:	cb 01       	movw	r24, r22
    5fd8:	9e 83       	std	Y+6, r25	; 0x06
    5fda:	8d 83       	std	Y+5, r24	; 0x05
    5fdc:	8d 81       	ldd	r24, Y+5	; 0x05
    5fde:	9e 81       	ldd	r25, Y+6	; 0x06
    5fe0:	9a 83       	std	Y+2, r25	; 0x02
    5fe2:	89 83       	std	Y+1, r24	; 0x01
    5fe4:	89 81       	ldd	r24, Y+1	; 0x01
    5fe6:	9a 81       	ldd	r25, Y+2	; 0x02
    5fe8:	01 97       	sbiw	r24, 0x01	; 1
    5fea:	f1 f7       	brne	.-4      	; 0x5fe8 <main+0x87c>
    5fec:	9a 83       	std	Y+2, r25	; 0x02
    5fee:	89 83       	std	Y+1, r24	; 0x01
    5ff0:	e9 cb       	rjmp	.-2094   	; 0x57c4 <main+0x58>

00005ff2 <__divmodhi4>:
    5ff2:	97 fb       	bst	r25, 7
    5ff4:	09 2e       	mov	r0, r25
    5ff6:	07 26       	eor	r0, r23
    5ff8:	0a d0       	rcall	.+20     	; 0x600e <__divmodhi4_neg1>
    5ffa:	77 fd       	sbrc	r23, 7
    5ffc:	04 d0       	rcall	.+8      	; 0x6006 <__divmodhi4_neg2>
    5ffe:	0c d0       	rcall	.+24     	; 0x6018 <__udivmodhi4>
    6000:	06 d0       	rcall	.+12     	; 0x600e <__divmodhi4_neg1>
    6002:	00 20       	and	r0, r0
    6004:	1a f4       	brpl	.+6      	; 0x600c <__divmodhi4_exit>

00006006 <__divmodhi4_neg2>:
    6006:	70 95       	com	r23
    6008:	61 95       	neg	r22
    600a:	7f 4f       	sbci	r23, 0xFF	; 255

0000600c <__divmodhi4_exit>:
    600c:	08 95       	ret

0000600e <__divmodhi4_neg1>:
    600e:	f6 f7       	brtc	.-4      	; 0x600c <__divmodhi4_exit>
    6010:	90 95       	com	r25
    6012:	81 95       	neg	r24
    6014:	9f 4f       	sbci	r25, 0xFF	; 255
    6016:	08 95       	ret

00006018 <__udivmodhi4>:
    6018:	aa 1b       	sub	r26, r26
    601a:	bb 1b       	sub	r27, r27
    601c:	51 e1       	ldi	r21, 0x11	; 17
    601e:	07 c0       	rjmp	.+14     	; 0x602e <__udivmodhi4_ep>

00006020 <__udivmodhi4_loop>:
    6020:	aa 1f       	adc	r26, r26
    6022:	bb 1f       	adc	r27, r27
    6024:	a6 17       	cp	r26, r22
    6026:	b7 07       	cpc	r27, r23
    6028:	10 f0       	brcs	.+4      	; 0x602e <__udivmodhi4_ep>
    602a:	a6 1b       	sub	r26, r22
    602c:	b7 0b       	sbc	r27, r23

0000602e <__udivmodhi4_ep>:
    602e:	88 1f       	adc	r24, r24
    6030:	99 1f       	adc	r25, r25
    6032:	5a 95       	dec	r21
    6034:	a9 f7       	brne	.-22     	; 0x6020 <__udivmodhi4_loop>
    6036:	80 95       	com	r24
    6038:	90 95       	com	r25
    603a:	bc 01       	movw	r22, r24
    603c:	cd 01       	movw	r24, r26
    603e:	08 95       	ret

00006040 <__prologue_saves__>:
    6040:	2f 92       	push	r2
    6042:	3f 92       	push	r3
    6044:	4f 92       	push	r4
    6046:	5f 92       	push	r5
    6048:	6f 92       	push	r6
    604a:	7f 92       	push	r7
    604c:	8f 92       	push	r8
    604e:	9f 92       	push	r9
    6050:	af 92       	push	r10
    6052:	bf 92       	push	r11
    6054:	cf 92       	push	r12
    6056:	df 92       	push	r13
    6058:	ef 92       	push	r14
    605a:	ff 92       	push	r15
    605c:	0f 93       	push	r16
    605e:	1f 93       	push	r17
    6060:	cf 93       	push	r28
    6062:	df 93       	push	r29
    6064:	cd b7       	in	r28, 0x3d	; 61
    6066:	de b7       	in	r29, 0x3e	; 62
    6068:	ca 1b       	sub	r28, r26
    606a:	db 0b       	sbc	r29, r27
    606c:	0f b6       	in	r0, 0x3f	; 63
    606e:	f8 94       	cli
    6070:	de bf       	out	0x3e, r29	; 62
    6072:	0f be       	out	0x3f, r0	; 63
    6074:	cd bf       	out	0x3d, r28	; 61
    6076:	09 94       	ijmp

00006078 <__epilogue_restores__>:
    6078:	2a 88       	ldd	r2, Y+18	; 0x12
    607a:	39 88       	ldd	r3, Y+17	; 0x11
    607c:	48 88       	ldd	r4, Y+16	; 0x10
    607e:	5f 84       	ldd	r5, Y+15	; 0x0f
    6080:	6e 84       	ldd	r6, Y+14	; 0x0e
    6082:	7d 84       	ldd	r7, Y+13	; 0x0d
    6084:	8c 84       	ldd	r8, Y+12	; 0x0c
    6086:	9b 84       	ldd	r9, Y+11	; 0x0b
    6088:	aa 84       	ldd	r10, Y+10	; 0x0a
    608a:	b9 84       	ldd	r11, Y+9	; 0x09
    608c:	c8 84       	ldd	r12, Y+8	; 0x08
    608e:	df 80       	ldd	r13, Y+7	; 0x07
    6090:	ee 80       	ldd	r14, Y+6	; 0x06
    6092:	fd 80       	ldd	r15, Y+5	; 0x05
    6094:	0c 81       	ldd	r16, Y+4	; 0x04
    6096:	1b 81       	ldd	r17, Y+3	; 0x03
    6098:	aa 81       	ldd	r26, Y+2	; 0x02
    609a:	b9 81       	ldd	r27, Y+1	; 0x01
    609c:	ce 0f       	add	r28, r30
    609e:	d1 1d       	adc	r29, r1
    60a0:	0f b6       	in	r0, 0x3f	; 63
    60a2:	f8 94       	cli
    60a4:	de bf       	out	0x3e, r29	; 62
    60a6:	0f be       	out	0x3f, r0	; 63
    60a8:	cd bf       	out	0x3d, r28	; 61
    60aa:	ed 01       	movw	r28, r26
    60ac:	08 95       	ret

000060ae <_exit>:
    60ae:	f8 94       	cli

000060b0 <__stop_program>:
    60b0:	ff cf       	rjmp	.-2      	; 0x60b0 <__stop_program>
